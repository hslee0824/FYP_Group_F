

 Hash Join  (cost=160868.46..173702.35 rows=310 width=244) (actual time=739.437..751.923 rows=36 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=160509.81..171278.66 rows=270 width=212) (actual time=739.080..751.548 rows=36 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=83078 width=28) (actual time=0.026..13.678 rows=2806 loops=1)
               Filter: ((birth_year <= '1959'::double precision) AND (birth_year >= '1958'::double precision))
               Rows Removed by Filter: 97194
         ->  Hash  (cost=160484.81..160484.81 rows=2000 width=184) (actual time=737.385..737.390 rows=1337 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 309kB
               ->  Hash Join  (cost=492.55..160484.81 rows=2000 width=184) (actual time=9.289..736.411 rows=1340 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=30010 width=132) (actual time=0.048..725.035 rows=31172 loops=1)
                           Filter: ((quantity <= '99'::double precision) AND (quantity >= '9'::double precision) AND (sales_price <= '30.55'::double precision) AND (sales_price >= '1.29'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (net_paid_inc_tax <= '3557.25'::double precision) AND (net_paid_inc_tax >= '722.72'::double precision) AND (net_profit <= '205.66'::double precision) AND (net_profit >= '-1'::double precision))
                           Rows Removed by Filter: 2849232
                     ->  Hash  (cost=456.00..456.00 rows=2924 width=52) (actual time=7.125..7.129 rows=1230 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 138kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=2924 width=52) (actual time=0.021..6.675 rows=1232 loops=1)
                                 Filter: ((manufact_id <= '382'::double precision) AND (manufact_id >= '321'::double precision))
                                 Rows Removed by Filter: 16768
   ->  Hash  (cost=37.20..37.20 rows=25716 width=32) (actual time=0.055..0.056 rows=11 loops=1)
         Buckets: 32768  Batches: 1  Memory Usage: 257kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=25716 width=32) (actual time=0.029..0.035 rows=11 loops=1)
               Filter: ((market_id <= 10) AND (market_id >= 2) AND (tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 1
 Planning Time: 1552.240 ms
 Execution Time: 752.225 ms
(26 rows)

                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=101563.27..105253.41 rows=6111 width=244) (actual time=9671.379..10907.578 rows=2622854 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.008..1.511 rows=18000 loops=1)
   ->  Hash  (cost=101483.71..101483.71 rows=6364 width=192) (actual time=9642.075..9642.098 rows=2622854 loops=1)
         Buckets: 32768 (originally 8192)  Batches: 16 (originally 1)  Memory Usage: 46467kB
         ->  Merge Join  (cost=96045.95..101483.71 rows=6364 width=192) (actual time=6586.198..8256.326 rows=2685745 loops=1)
               Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
               ->  Sort  (cost=94983.64..94999.55 rows=6364 width=164) (actual time=6585.975..7081.909 rows=2685746 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: external merge  Disk: 472480kB
                     ->  Merge Join  (cost=86820.26..94581.57 rows=6364 width=164) (actual time=2763.249..3828.552 rows=2750370 loops=1)
                           Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                           ->  Sort  (cost=411.82..427.00 rows=6070 width=32) (actual time=0.023..0.052 rows=10 loops=1)
                                 Sort Key: ((store.store_sk)::double precision)
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Seq Scan on store  (cost=0.00..30.40 rows=6070 width=32) (actual time=0.008..0.012 rows=11 loops=1)
                                       Filter: ((market_id <= 9) AND (market_id >= 2))
                                       Rows Removed by Filter: 1
                           ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2763.198..3136.012 rows=2750371 loops=1)
                                 Sort Key: store_sales.store_sk
                                 Sort Method: external sort  Disk: 408576kB
                                 ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.023..360.288 rows=2880404 loops=1)
               ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.204..118.596 rows=2676734 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 48kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.058..0.112 rows=300 loops=1)
 Planning Time: 493.552 ms
 Execution Time: 11150.051 ms
(28 rows)

                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=169184.42..175674.08 rows=5312 width=244) (actual time=723.435..756.227 rows=52186 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=168104.51..168117.20 rows=5075 width=212) (actual time=723.402..732.177 rows=52187 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 12048kB
         ->  Merge Join  (cost=134596.11..167792.13 rows=5075 width=212) (actual time=652.830..686.811 rows=52838 loops=1)
               Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
               ->  Sort  (cost=3205.37..3212.63 rows=2901 width=80) (actual time=5.157..5.194 rows=246 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 59kB
                     ->  Hash Join  (cost=24.64..3038.50 rows=2901 width=80) (actual time=0.163..5.033 rows=246 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=47798 width=52) (actual time=0.027..3.167 rows=14538 loops=1)
                                 Filter: ((brand_id <= '10016017'::double precision) AND (brand_id >= '2004002'::double precision))
                                 Rows Removed by Filter: 3462
                           ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.101..0.102 rows=291 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 35kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.006..0.060 rows=293 loops=1)
                                       Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                       Rows Removed by Filter: 7
               ->  Materialize  (cost=131390.74..132401.57 rows=202166 width=132) (actual time=647.666..665.167 rows=64482 loops=1)
                     ->  Sort  (cost=131390.74..131896.16 rows=202166 width=132) (actual time=647.657..657.256 rows=64482 loops=1)
                           Sort Key: store_sales.promo_sk
                           Sort Method: external merge  Disk: 9296kB
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=202166 width=132) (actual time=0.039..605.981 rows=66047 loops=1)
                                 Filter: ((ext_tax <= '95'::double precision) AND (ext_tax >= '84.14'::double precision))
                                 Rows Removed by Filter: 2814357
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.027..2.307 rows=52191 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.016..0.019 rows=12 loops=1)
 Planning Time: 602.770 ms
 Execution Time: 762.449 ms
(33 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=104864.09..105680.76 rows=94210 width=244) (actual time=3542.407..3862.272 rows=387847 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=12310.07..12546.57 rows=94601 width=28) (actual time=33.836..39.771 rows=47842 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: external merge  Disk: 2336kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=94601 width=28) (actual time=0.015..16.794 rows=47842 loops=1)
               Filter: ((birth_day <= '16'::double precision) AND (birth_day >= '2'::double precision))
               Rows Removed by Filter: 52158
   ->  Sort  (cost=92554.02..92564.22 rows=4080 width=216) (actual time=3508.512..3656.950 rows=810553 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external sort  Disk: 191360kB
         ->  Merge Join  (cost=87262.34..92309.32 rows=4080 width=216) (actual time=1705.951..2263.088 rows=830058 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=86182.43..86192.30 rows=3947 width=184) (actual time=1705.913..1878.148 rows=830059 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 167608kB
                     ->  Hash Join  (cost=504.64..85946.65 rows=3947 width=184) (actual time=3.280..977.790 rows=869578 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.023..374.773 rows=2880404 loops=1)
                           ->  Hash  (cost=456.00..456.00 rows=3891 width=52) (actual time=3.205..3.207 rows=5423 loops=1)
                                 Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 530kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=3891 width=52) (actual time=0.008..2.436 rows=5423 loops=1)
                                       Filter: ((current_price <= '4.79'::double precision) AND (current_price >= '2.31'::double precision))
                                       Rows Removed by Filter: 12577
               ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.029..37.854 rows=830063 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.015..0.018 rows=12 loops=1)
 Planning Time: 542.306 ms
 Execution Time: 3952.927 ms
(30 rows)

                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1226.62..117934.63 rows=35 width=244) (actual time=16.650..550.830 rows=6 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=1055.77..116694.82 rows=353 width=212) (actual time=16.591..550.641 rows=73 loops=1)
         Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
         ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=61733 width=132) (actual time=0.030..536.948 rows=101768 loops=1)
               Filter: ((ext_sales_price <= '1813.43'::double precision) AND (ext_sales_price >= '888.93'::double precision) AND (ext_tax <= '158.99'::double precision) AND (ext_tax >= '87.8'::double precision))
               Rows Removed by Filter: 2778636
         ->  Hash  (cost=1048.68..1048.68 rows=568 width=80) (actual time=2.574..2.620 rows=8 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Hash Join  (cost=196.09..1048.68 rows=568 width=80) (actual time=0.468..2.609 rows=8 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=592 width=52) (actual time=0.023..2.371 rows=444 loops=1)
                           Filter: ((brand_id <= '5001002'::double precision) AND (brand_id >= '4001001'::double precision) AND (class_id <= '2'::double precision) AND (class_id >= '2'::double precision))
                           Rows Removed by Filter: 17556
                     ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.087..0.092 rows=293 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 147kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.038 rows=300 loops=1)
   ->  Hash  (cost=44.00..44.00 rows=10148 width=32) (actual time=0.020..0.020 rows=2 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=10148 width=32) (actual time=0.014..0.016 rows=2 loops=1)
               Filter: ((number_employees <= 278) AND (number_employees >= 236) AND (market_id <= 2) AND (market_id >= 2) AND (company_id <= 255) AND (company_id >= 220))
               Rows Removed by Filter: 10
 Planning Time: 566.484 ms
 Execution Time: 550.993 ms
(24 rows)

                                                                                                           QUERY PLAN                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=90781.63..91720.09 rows=7706 width=244) (actual time=1071.056..1121.575 rows=69435 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=90325.37..90329.51 rows=1653 width=212) (actual time=1066.236..1085.808 rows=104177 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 24016kB
         ->  Merge Join  (cost=90106.56..90237.00 rows=1653 width=212) (actual time=903.772..998.347 rows=105383 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=87323.24..87327.38 rows=1653 width=184) (actual time=845.973..871.333 rows=105384 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 21120kB
                     ->  Hash Join  (cost=566.40..87234.86 rows=1653 width=184) (actual time=2.870..745.718 rows=108007 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.040..362.861 rows=2880404 loops=1)
                           ->  Hash  (cost=546.00..546.00 rows=1632 width=52) (actual time=2.792..2.794 rows=474 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 57kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=1632 width=52) (actual time=0.011..2.662 rows=474 loops=1)
                                       Filter: ((brand_id <= '10014005'::double precision) AND (brand_id >= '8016007'::double precision) AND (category_id <= '8'::double precision) AND (category_id >= '4'::double precision))
                                       Rows Removed by Filter: 17526
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=57.782..74.252 rows=156726 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.013..13.073 rows=100000 loops=1)
   ->  Sort  (cost=456.25..473.01 rows=6701 width=32) (actual time=0.040..3.040 rows=69440 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=6701 width=32) (actual time=0.022..0.025 rows=9 loops=1)
               Filter: ((floor_space <= 9294113) AND (floor_space >= 5285950))
               Rows Removed by Filter: 3
 Planning Time: 506.316 ms
 Execution Time: 1133.810 ms
(30 rows)

                                                                                                                                                                                                      QUERY PLAN                                                                                                                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=149576.91..154912.20 rows=103 width=244) (actual time=682.761..741.595 rows=1017 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Merge Join  (cost=149510.88..153869.45 rows=1855 width=212) (actual time=682.712..740.833 rows=6265 loops=1)
         Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
         ->  Sort  (cost=2260.65..2267.01 rows=2547 width=80) (actual time=3.868..3.880 rows=12 loops=1)
               Sort Key: ((promotion.promo_sk)::double precision)
               Sort Method: quicksort  Memory: 26kB
               ->  Hash Join  (cost=196.09..2116.55 rows=2547 width=80) (actual time=0.294..3.850 rows=12 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=2654 width=52) (actual time=0.013..3.538 rows=693 loops=1)
                           Filter: ((current_price <= '9.72'::double precision) AND (current_price >= '4.25'::double precision) AND (category_id <= '2'::double precision) AND (category_id >= '2'::double precision))
                           Rows Removed by Filter: 17307
                     ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.160..0.161 rows=293 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 147kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.059 rows=300 loops=1)
         ->  Materialize  (cost=147250.24..147400.54 rows=30061 width=132) (actual time=677.951..719.423 rows=147586 loops=1)
               ->  Sort  (cost=147250.24..147325.39 rows=30061 width=132) (actual time=677.946..701.120 rows=147586 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: external merge  Disk: 22656kB
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=30061 width=132) (actual time=0.032..609.048 rows=158566 loops=1)
                           Filter: ((sales_price <= '109.1'::double precision) AND (sales_price >= '2.47'::double precision) AND (ext_sales_price <= '1474.67'::double precision) AND (ext_sales_price >= '880.64'::double precision) AND (ext_tax <= '60.55'::double precision) AND (ext_tax >= '-1'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                           Rows Removed by Filter: 2721838
   ->  Hash  (cost=44.00..44.00 rows=1762 width=32) (actual time=0.026..0.027 rows=2 loops=1)
         Buckets: 2048  Batches: 1  Memory Usage: 17kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=1762 width=32) (actual time=0.018..0.022 rows=2 loops=1)
               Filter: ((floor_space <= 9026222) AND (floor_space >= 5285950) AND (market_id <= 6) AND (market_id >= 2) AND (tax_percentage <= '0.11'::double precision) AND (tax_percentage >= '0.03'::double precision))
               Rows Removed by Filter: 10
 Planning Time: 485.176 ms
 Execution Time: 745.799 ms
(29 rows)

                                                                                                                    QUERY PLAN                                                                                                                    
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=121163.32..123005.43 rows=437 width=244) (actual time=716.406..733.701 rows=70 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..8.194 rows=100000 loops=1)
   ->  Hash  (cost=121157.86..121157.86 rows=437 width=216) (actual time=716.165..716.168 rows=70 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 26kB
         ->  Hash Join  (cost=117863.14..121157.86 rows=437 width=216) (actual time=695.890..716.130 rows=70 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Hash Join  (cost=117814.21..120856.45 rows=2125 width=184) (actual time=689.409..716.018 rows=438 loops=1)
                     Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=174 width=52) (actual time=0.011..2.123 rows=519 loops=1)
                           Filter: ((brand_id <= '7006007'::double precision) AND (brand_id >= '5003001'::double precision) AND (manufact_id <= '327'::double precision) AND (manufact_id >= '239'::double precision))
                           Rows Removed by Filter: 17481
                     ->  Hash  (cost=114154.24..114154.24 rows=114238 width=132) (actual time=681.130..681.131 rows=134773 loops=1)
                           Buckets: 32768  Batches: 8  Memory Usage: 2963kB
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=114238 width=132) (actual time=0.033..628.694 rows=136434 loops=1)
                                 Filter: ((ext_coupon_amt <= '12.03'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid_inc_tax <= '4710.97'::double precision) AND (net_paid_inc_tax >= '3578.9'::double precision))
                                 Rows Removed by Filter: 2743970
               ->  Hash  (cost=44.00..44.00 rows=394 width=32) (actual time=0.013..0.013 rows=2 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on store  (cost=0.00..44.00 rows=394 width=32) (actual time=0.008..0.009 rows=2 loops=1)
                           Filter: ((floor_space <= 9341467) AND (floor_space >= 9294113) AND (market_id <= 8) AND (market_id >= 2) AND (company_id <= 220) AND (company_id >= 175))
                           Rows Removed by Filter: 10
 Planning Time: 728.243 ms
 Execution Time: 733.783 ms
(24 rows)

                                                                                                                                                                                                                      QUERY PLAN                                                                                                                                                                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=147284.12..149394.38 rows=314 width=244) (actual time=655.649..661.215 rows=3589 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=147226.67..149123.40 rows=440 width=212) (actual time=655.611..659.978 rows=5340 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Seq Scan on item  (cost=0.00..456.00 rows=11339 width=52) (actual time=0.008..2.223 rows=8613 loops=1)
               Filter: ((brand_id <= '8013001'::double precision) AND (brand_id >= '4001001'::double precision))
               Rows Removed by Filter: 9387
         ->  Hash  (cost=147182.14..147182.14 rows=3562 width=160) (actual time=655.581..655.582 rows=10521 loops=1)
               Buckets: 16384 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 2182kB
               ->  Merge Join  (cost=144222.32..147182.14 rows=3562 width=160) (actual time=645.717..652.213 rows=10753 loops=1)
                     Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
                     ->  Sort  (cost=143160.01..143168.67 rows=3464 width=132) (actual time=645.604..646.888 rows=10754 loops=1)
                           Sort Key: store_sales.promo_sk
                           Sort Method: quicksort  Memory: 3190kB
                           ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=3464 width=132) (actual time=0.135..641.775 rows=10781 loops=1)
                                 Filter: ((sales_price <= '45.22'::double precision) AND (sales_price >= '38.07'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '1233.36'::double precision) AND (ext_list_price >= '565.21'::double precision) AND (net_paid_inc_tax <= '1966.03'::double precision) AND (net_paid_inc_tax >= '304.26'::double precision))
                                 Rows Removed by Filter: 2869623
                     ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.104..0.561 rows=10720 loops=1)
                           Sort Key: ((promotion.promo_sk)::double precision)
                           Sort Method: quicksort  Memory: 48kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.012..0.053 rows=300 loops=1)
   ->  Hash  (cost=37.20..37.20 rows=1620 width=32) (actual time=0.027..0.027 rows=8 loops=1)
         Buckets: 2048  Batches: 1  Memory Usage: 17kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=1620 width=32) (actual time=0.017..0.022 rows=8 loops=1)
               Filter: ((number_employees <= 297) AND (number_employees >= 245) AND (devision_id <= 1) AND (devision_id >= 1))
               Rows Removed by Filter: 4
 Planning Time: 546.738 ms
 Execution Time: 661.436 ms
(28 rows)

                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=226600.72..881609.68 rows=1136499 width=240) (actual time=3640.537..5603.337 rows=65500 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=226404.63..292838.92 rows=1136499 width=212) (actual time=3640.271..5316.216 rows=3053544 loops=1)
         Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..2.407 rows=18000 loops=1)
         ->  Hash  (cost=185202.23..185202.23 rows=1178512 width=160) (actual time=3640.200..3640.205 rows=2133046 loops=1)
               Buckets: 32768 (originally 32768)  Batches: 256 (originally 64)  Memory Usage: 3841kB
               ->  Hash Join  (cost=135686.98..185202.23 rows=1178512 width=160) (actual time=1340.736..2497.432 rows=2159354 loops=1)
                     Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.009..10.041 rows=100000 loops=1)
                     ->  Hash  (cost=99753.18..99753.18 rows=1121824 width=132) (actual time=1340.669..1340.671 rows=2159354 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 128 (originally 64)  Memory Usage: 3841kB
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1121824 width=132) (actual time=0.037..550.447 rows=2211665 loops=1)
                                 Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision))
                                 Rows Removed by Filter: 668739
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.181..0.181 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.018..0.071 rows=300 loops=1)
 Planning Time: 532.096 ms
 Execution Time: 5606.509 ms
(20 rows)



 Hash Join  (cost=731.30..158272.60 rows=10 width=244) (actual time=534.390..534.496 rows=2 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Nested Loop  (cost=535.21..158071.12 rows=10 width=216) (actual time=534.240..534.367 rows=62 loops=1)
         Join Filter: (store_sales.store_sk = (store.store_sk)::double precision)
         Rows Removed by Join Filter: 1162
         ->  Seq Scan on store  (cost=0.00..37.20 rows=212 width=32) (actual time=0.006..0.009 rows=3 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 220) AND (company_id >= 175))
               Rows Removed by Filter: 9
         ->  Materialize  (cost=535.21..157896.72 rows=37 width=184) (actual time=1.647..178.066 rows=408 loops=3)
               ->  Hash Join  (cost=535.21..157896.54 rows=37 width=184) (actual time=4.938..533.798 rows=408 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=537 width=132) (actual time=0.731..530.056 rows=1541 loops=1)
                           Filter: ((list_price <= '165.52'::double precision) AND (list_price >= '111.81'::double precision) AND (sales_price <= '70.06'::double precision) AND (sales_price >= '65.54'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '-1'::double precision) AND (ext_list_price <= '1502.8'::double precision) AND (ext_list_price >= '-1'::double precision) AND (ext_tax <= '111.09'::double precision) AND (ext_tax >= '-1'::double precision))
                           Rows Removed by Filter: 2878863
                     ->  Hash  (cost=456.00..456.00 rows=6337 width=52) (actual time=3.082..3.083 rows=4779 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 475kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=6337 width=52) (actual time=0.007..2.521 rows=4779 loops=1)
                                 Filter: ((manufact_id <= '205'::double precision) AND (manufact_id >= '58'::double precision))
                                 Rows Removed by Filter: 13221
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.093..0.093 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.046 rows=300 loops=1)
 Planning Time: 610.007 ms
 Execution Time: 534.574 ms
(24 rows)

                                                                                                                                                                                                                             QUERY PLAN                                                                                                                                                                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop  (cost=519.66..144634.39 rows=189 width=244) (actual time=7.046..668.393 rows=93 loops=1)
   Join Filter: (store_sales.store_sk = (store.store_sk)::double precision)
   Rows Removed by Join Filter: 412
   ->  Hash Join  (cost=519.66..144205.47 rows=293 width=212) (actual time=3.714..668.130 rows=505 loops=1)
         Hash Cond: (promotion.item_sk = (item.item_sk)::double precision)
         ->  Hash Join  (cost=16.75..143015.37 rows=645 width=160) (actual time=0.215..664.667 rows=5584 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=1307 width=132) (actual time=0.043..636.830 rows=259412 loops=1)
                     Filter: ((ext_sales_price <= '7369.44'::double precision) AND (ext_sales_price >= '348.16'::double precision) AND (ext_wholesale_cost <= '2241.58'::double precision) AND (ext_wholesale_cost >= '400.4'::double precision) AND (ext_list_price <= '2616.65'::double precision) AND (ext_list_price >= '1221.32'::double precision) AND (net_paid_inc_tax <= '1419.6'::double precision) AND (net_paid_inc_tax >= '404.72'::double precision))
                     Rows Removed by Filter: 2620992
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.098..0.099 rows=291 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.008..0.061 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
         ->  Hash  (cost=456.00..456.00 rows=3753 width=52) (actual time=2.392..2.392 rows=1674 loops=1)
               Buckets: 4096  Batches: 1  Memory Usage: 176kB
               ->  Seq Scan on item  (cost=0.00..456.00 rows=3753 width=52) (actual time=0.006..2.137 rows=1674 loops=1)
                     Filter: ((current_price <= '4.09'::double precision) AND (current_price >= '3.3'::double precision))
                     Rows Removed by Filter: 16326
   ->  Materialize  (cost=0.00..44.38 rows=75 width=32) (actual time=0.000..0.000 rows=1 loops=505)
         ->  Seq Scan on store  (cost=0.00..44.00 rows=75 width=32) (actual time=0.004..0.006 rows=1 loops=1)
               Filter: ((market_id <= 8) AND (market_id >= 6) AND (company_id <= 255) AND (company_id >= 175) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 11
 Planning Time: 486.121 ms
 Execution Time: 668.473 ms
(26 rows)

                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=825.42..102800.41 rows=118 width=244) (actual time=211.959..547.386 rows=4 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=611.73..102069.58 rows=114 width=212) (actual time=211.898..547.311 rows=4 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=193651 width=132) (actual time=0.119..539.488 rows=12397 loops=1)
               Filter: ((net_paid <= '2392.5'::double precision) AND (net_paid >= '2349.35'::double precision))
               Rows Removed by Filter: 2868007
         ->  Hash  (cost=611.04..611.04 rows=55 width=80) (actual time=6.493..6.501 rows=40 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 13kB
               ->  Hash Join  (cost=24.64..611.04 rows=55 width=80) (actual time=0.582..6.475 rows=40 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=755 width=52) (actual time=0.011..5.825 rows=2129 loops=1)
                           Filter: ((brand_id <= '10013001'::double precision) AND (brand_id >= '4001001'::double precision) AND (manufact_id <= '307'::double precision) AND (manufact_id >= '210'::double precision))
                           Rows Removed by Filter: 15871
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.182..0.186 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.009..0.110 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.026..0.028 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.014..0.017 rows=12 loops=1)
 Planning Time: 500.967 ms
 Execution Time: 547.485 ms
(24 rows)

                                                                                                                                                                                                             QUERY PLAN                                                                                                                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=148711.10..159038.21 rows=8339 width=244) (actual time=898.587..954.732 rows=84589 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=147631.19..147651.38 rows=8077 width=212) (actual time=898.551..914.367 rows=84590 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 19368kB
         ->  Hash Join  (cost=146812.09..147107.03 rows=8077 width=212) (actual time=742.653..841.770 rows=84733 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=146256.00..146449.03 rows=8355 width=160) (actual time=733.568..806.096 rows=84733 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=143472.69..143492.61 rows=7968 width=132) (actual time=675.103..692.799 rows=84734 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 12152kB
                           ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=7968 width=132) (actual time=0.064..622.875 rows=85014 loops=1)
                                 Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '1345.68'::double precision) AND (ext_wholesale_cost >= '436.79'::double precision) AND (ext_tax <= '4.36'::double precision) AND (ext_tax >= '-1'::double precision) AND (net_profit <= '1410.5'::double precision) AND (net_profit >= '-846'::double precision))
                                 Rows Removed by Filter: 2795390
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=58.455..72.526 rows=133542 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.013..13.008 rows=100000 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=9.026..9.027 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.017..3.488 rows=18000 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.030..3.836 rows=84594 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.017..0.020 rows=12 loops=1)
 Planning Time: 515.563 ms
 Execution Time: 964.766 ms
(28 rows)

                                                                                                                   QUERY PLAN                                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=115570.75..118023.90 rows=1584 width=244) (actual time=573.058..594.035 rows=3423 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..8.541 rows=100000 loops=1)
   ->  Hash  (cost=115550.95..115550.95 rows=1584 width=216) (actual time=573.014..573.016 rows=3423 loops=1)
         Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 887kB
         ->  Hash Join  (cost=558.69..115550.95 rows=1584 width=216) (actual time=3.788..571.003 rows=3447 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Hash Join  (cost=521.70..115028.33 rows=3032 width=184) (actual time=3.166..567.540 rows=20347 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=52832 width=132) (actual time=0.031..548.587 rows=90121 loops=1)
                           Filter: ((ext_wholesale_cost <= '1605.24'::double precision) AND (ext_wholesale_cost >= '1344.64'::double precision) AND (net_profit <= '-22.8'::double precision) AND (net_profit >= '-1380.99'::double precision))
                           Rows Removed by Filter: 2790283
                     ->  Hash  (cost=456.00..456.00 rows=5256 width=52) (actual time=3.044..3.045 rows=4094 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 416kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=5256 width=52) (actual time=0.005..2.535 rows=4094 loops=1)
                                 Filter: ((manufact_id <= '251'::double precision) AND (manufact_id >= '127'::double precision))
                                 Rows Removed by Filter: 13906
               ->  Hash  (cost=30.40..30.40 rows=527 width=32) (actual time=0.010..0.011 rows=3 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on store  (cost=0.00..30.40 rows=527 width=32) (actual time=0.005..0.007 rows=3 loops=1)
                           Filter: ((number_employees <= 236) AND (number_employees >= 229))
                           Rows Removed by Filter: 9
 Planning Time: 536.011 ms
 Execution Time: 594.224 ms
(24 rows)

                                                                                                                                                                                                         QUERY PLAN                                                                                                                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=155951.13..157462.78 rows=1421 width=240) (actual time=587.219..589.860 rows=17 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=155755.04..156530.71 rows=1421 width=212) (actual time=586.924..589.654 rows=503 loops=1)
         Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
         ->  Sort  (cost=11721.61..11945.12 rows=89404 width=28) (actual time=15.071..15.594 rows=11289 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: quicksort  Memory: 1267kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=89404 width=28) (actual time=0.010..13.143 rows=11290 loops=1)
                     Filter: ((birth_year <= '1985'::double precision) AND (birth_year >= '1978'::double precision))
                     Rows Removed by Filter: 88710
         ->  Sort  (cost=144033.43..144044.02 rows=4236 width=184) (actual time=571.837..572.340 rows=4400 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: quicksort  Memory: 1365kB
               ->  Hash Join  (cost=607.17..143778.26 rows=4236 width=184) (actual time=4.500..569.006 rows=4413 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=20511 width=132) (actual time=0.106..561.383 rows=7800 loops=1)
                           Filter: ((quantity <= '34'::double precision) AND (quantity >= '12'::double precision) AND (ext_coupon_amt <= '946.46'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid_inc_tax <= '1957.49'::double precision) AND (net_paid_inc_tax >= '1729.01'::double precision) AND (net_profit <= '-1'::double precision) AND (net_profit >= '-5064.96'::double precision))
                           Rows Removed by Filter: 2872604
                     ->  Hash  (cost=456.00..456.00 rows=12094 width=52) (actual time=4.158..4.159 rows=10084 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 995kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=12094 width=52) (actual time=0.007..2.959 rows=10084 loops=1)
                                 Filter: ((manufact_id <= '597'::double precision) AND (manufact_id >= '156'::double precision))
                                 Rows Removed by Filter: 7916
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.095..0.096 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.047 rows=300 loops=1)
 Planning Time: 496.784 ms
 Execution Time: 589.932 ms
(28 rows)

                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=166836.62..171661.74 rows=8265 width=244) (actual time=2468.359..2764.233 rows=425751 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.013..2.261 rows=18000 loops=1)
   ->  Hash  (cost=166729.27..166729.27 rows=8588 width=192) (actual time=2348.081..2348.085 rows=425751 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 64 (originally 1)  Memory Usage: 3841kB
         ->  Merge Join  (cost=159391.41..166729.27 rows=8588 width=192) (actual time=1675.376..1967.050 rows=435911 loops=1)
               Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
               ->  Sort  (cost=158329.09..158350.56 rows=8588 width=164) (actual time=1675.252..1764.272 rows=435912 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: external merge  Disk: 76016kB
                     ->  Merge Join  (cost=147342.84..157767.96 rows=8588 width=164) (actual time=941.552..1348.023 rows=436545 loops=1)
                           Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                           ->  Sort  (cost=296.71..307.46 rows=4300 width=32) (actual time=0.019..0.027 rows=9 loops=1)
                                 Sort Key: ((store.store_sk)::double precision)
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Seq Scan on store  (cost=0.00..37.20 rows=4300 width=32) (actual time=0.008..0.012 rows=10 loops=1)
                                       Filter: ((number_employees <= 294) AND (number_employees >= 229) AND (devision_id <= 1) AND (devision_id >= 1))
                                       Rows Removed by Filter: 2
                           ->  Materialize  (cost=147046.14..147189.71 rows=28715 width=132) (actual time=941.525..1217.708 rows=654931 loops=1)
                                 ->  Sort  (cost=147046.14..147117.92 rows=28715 width=132) (actual time=941.519..1042.995 rows=654931 loops=1)
                                       Sort Key: store_sales.store_sk
                                       Sort Method: external merge  Disk: 93736kB
                                       ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=28715 width=132) (actual time=0.031..659.690 rows=656939 loops=1)
                                             Filter: ((list_price <= '121.27'::double precision) AND (list_price >= '47.14'::double precision) AND (sales_price <= '108.24'::double precision) AND (sales_price >= '2.88'::double precision) AND (ext_sales_price <= '4478.67'::double precision) AND (ext_sales_price >= '659.03'::double precision) AND (net_paid <= '3361.1'::double precision) AND (net_paid >= '5.2'::double precision))
                                             Rows Removed by Filter: 2223465
               ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.118..20.765 rows=434446 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 48kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.025..0.067 rows=300 loops=1)
 Planning Time: 487.416 ms
 Execution Time: 2828.807 ms
(31 rows)

                                                                                                                                                                                                                                                    QUERY PLAN                                                                                                                                                                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1931.76..160669.74 rows=12 width=240) (actual time=605.221..628.462 rows=11 loops=1)
   Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
   ->  Nested Loop  (cost=14.68..158708.85 rows=12 width=212) (actual time=578.673..596.148 rows=11 loops=1)
         Join Filter: (store_sales.item_sk = item.item_sk)
         Rows Removed by Join Filter: 165055
         ->  Seq Scan on item  (cost=0.00..456.00 rows=1893 width=52) (actual time=0.021..2.052 rows=5002 loops=1)
               Filter: ((brand_id <= '4004001'::double precision) AND (brand_id >= '2001002'::double precision))
               Rows Removed by Filter: 12998
         ->  Materialize  (cost=14.68..157410.70 rows=30 width=160) (actual time=0.001..0.117 rows=33 loops=5002)
               ->  Hash Join  (cost=14.68..157410.55 rows=30 width=160) (actual time=4.326..576.212 rows=33 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=1437 width=132) (actual time=1.116..575.646 rows=1527 loops=1)
                           Filter: ((list_price <= '85.24'::double precision) AND (list_price >= '74.39'::double precision) AND (ext_tax <= '82.99'::double precision) AND (ext_tax >= '4.34'::double precision) AND (net_paid <= '669.57'::double precision) AND (net_paid >= '319.55'::double precision) AND (net_paid_inc_tax <= '1661.31'::double precision) AND (net_paid_inc_tax >= '22.72'::double precision) AND (net_profit <= '357.7'::double precision) AND (net_profit >= '56.32'::double precision))
                           Rows Removed by Filter: 2878877
                     ->  Hash  (cost=7.50..7.50 rows=574 width=28) (actual time=0.179..0.179 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=574 width=28) (actual time=0.010..0.108 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '-1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=26.517..26.518 rows=100000 loops=1)
         Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.011..8.461 rows=100000 loops=1)
 Planning Time: 613.319 ms
 Execution Time: 628.549 ms
(24 rows)

                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=140730.99..148320.86 rows=8214 width=240) (actual time=977.588..1313.298 rows=2879 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=140534.90..143870.66 rows=8214 width=212) (actual time=977.312..1299.248 rows=131905 loops=1)
         Hash Cond: (store_sales.item_sk = item.item_sk)
         ->  Merge Join  (cost=139978.81..143210.89 rows=8500 width=160) (actual time=967.301..1248.435 rows=131905 loops=1)
               Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
               ->  Sort  (cost=11791.62..12016.70 rows=90030 width=28) (actual time=35.188..37.144 rows=21020 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: quicksort  Memory: 2411kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=90030 width=28) (actual time=0.014..28.326 rows=21020 loops=1)
                           Filter: ((birth_year <= '1988'::double precision) AND (birth_year >= '1974'::double precision))
                           Rows Removed by Filter: 78980
               ->  Materialize  (cost=128187.19..128652.12 rows=92985 width=132) (actual time=932.090..1120.364 rows=630015 loops=1)
                     ->  Sort  (cost=128187.19..128419.65 rows=92985 width=132) (actual time=932.080..1040.258 rows=630015 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 90400kB
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=92985 width=132) (actual time=0.045..544.072 rows=637629 loops=1)
                                 Filter: ((list_price <= '97.05'::double precision) AND (list_price >= '37.21'::double precision) AND (ext_list_price <= '5716.72'::double precision) AND (ext_list_price >= '1712.64'::double precision))
                                 Rows Removed by Filter: 2242775
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=9.977..9.979 rows=18000 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.008..3.978 rows=18000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.187..0.188 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.018..0.080 rows=300 loops=1)
 Planning Time: 537.637 ms
 Execution Time: 1330.046 ms
(27 rows)

                                                                                                                                                                     QUERY PLAN                                                                                                                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=139474.46..147097.69 rows=6154 width=244) (actual time=611.026..611.481 rows=901 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=138394.55..138409.45 rows=5962 width=212) (actual time=611.009..611.053 rows=902 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 264kB
         ->  Merge Join  (cost=137369.27..138020.68 rows=5962 width=212) (actual time=606.453..610.564 rows=902 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=130198.04..130224.79 rows=10697 width=184) (actual time=595.511..596.820 rows=11115 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: quicksort  Memory: 3302kB
                     ->  Hash Join  (cost=534.41..129482.13 rows=10697 width=184) (actual time=8.704..588.129 rows=11180 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=54238 width=132) (actual time=0.066..572.002 rows=17887 loops=1)
                                 Filter: ((ext_wholesale_cost <= '5206.5'::double precision) AND (ext_wholesale_cost >= '2284.59'::double precision) AND (ext_coupon_amt <= '424.33'::double precision) AND (ext_coupon_amt >= '116.11'::double precision) AND (net_paid <= '2263'::double precision) AND (net_paid >= '149.76'::double precision))
                                 Rows Removed by Filter: 2862517
                           ->  Hash  (cost=456.00..456.00 rows=6273 width=52) (actual time=8.619..8.619 rows=11277 loops=1)
                                 Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 1097kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=6273 width=52) (actual time=0.008..5.754 rows=11277 loops=1)
                                       Filter: ((class_id <= '4'::double precision) AND (class_id >= '1'::double precision))
                                       Rows Removed by Filter: 6723
               ->  Sort  (cost=7171.22..7326.48 rows=62104 width=28) (actual time=10.933..11.336 rows=8020 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: quicksort  Memory: 813kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=62104 width=28) (actual time=0.014..9.765 rows=7947 loops=1)
                           Filter: ((birth_month <= '4'::double precision) AND (birth_month >= '4'::double precision))
                           Rows Removed by Filter: 92053
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.012..0.051 rows=906 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.006..0.008 rows=12 loops=1)
 Planning Time: 565.416 ms
 Execution Time: 611.621 ms
(32 rows)

                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=793.44..87816.90 rows=327 width=244) (actual time=4.939..1617.639 rows=30163 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=597.35..87444.28 rows=341 width=216) (actual time=4.802..1453.190 rows=1377121 loops=1)
         Hash Cond: (store_sales.item_sk = item.item_sk)
         ->  Hash Join  (cost=41.26..86884.03 rows=341 width=164) (actual time=0.047..1005.688 rows=1377121 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.028..346.869 rows=2880404 loops=1)
               ->  Hash  (cost=37.20..37.20 rows=325 width=32) (actual time=0.011..0.011 rows=7 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on store  (cost=0.00..37.20 rows=325 width=32) (actual time=0.007..0.008 rows=7 loops=1)
                           Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 226) AND (company_id >= 27))
                           Rows Removed by Filter: 5
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.731..4.732 rows=18000 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.953 rows=18000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.095..0.096 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.049 rows=300 loops=1)
 Planning Time: 511.439 ms
 Execution Time: 1619.302 ms
(20 rows)

                                                                                                                                                                                                       QUERY PLAN                                                                                                                                                                                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=4584.12..150101.60 rows=19 width=244) (actual time=26.803..648.667 rows=1703 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=4370.44..149806.04 rows=18 width=212) (actual time=26.761..647.874 rows=1705 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=560.09..143534.60 rows=93 width=184) (actual time=4.373..620.262 rows=7113 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=4148 width=132) (actual time=0.062..609.899 rows=16865 loops=1)
                     Filter: ((list_price <= '74.03'::double precision) AND (list_price >= '13.12'::double precision) AND (ext_list_price <= '9551.36'::double precision) AND (ext_list_price >= '3970.89'::double precision) AND (net_paid <= '4040.65'::double precision) AND (net_paid >= '144.02'::double precision) AND (net_profit <= '497.33'::double precision) AND (net_profit >= '-293.28'::double precision))
                     Rows Removed by Filter: 2863539
               ->  Hash  (cost=546.00..546.00 rows=1127 width=52) (actual time=4.270..4.271 rows=7555 loops=1)
                     Buckets: 8192 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 714kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=1127 width=52) (actual time=0.005..3.271 rows=7555 loops=1)
                           Filter: ((brand_id <= '8015007'::double precision) AND (brand_id >= '3001001'::double precision) AND (manufact_id <= '494'::double precision) AND (manufact_id >= '19'::double precision))
                           Rows Removed by Filter: 10445
         ->  Hash  (cost=2227.00..2227.00 rows=81868 width=28) (actual time=18.267..18.268 rows=24096 loops=1)
               Buckets: 65536  Batches: 2  Memory Usage: 1256kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=81868 width=28) (actual time=0.007..13.859 rows=24096 loops=1)
                     Filter: ((birth_month <= '12'::double precision) AND (birth_month >= '10'::double precision))
                     Rows Removed by Filter: 75904
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.020..0.020 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.012..0.014 rows=12 loops=1)
 Planning Time: 500.248 ms
 Execution Time: 648.815 ms
(24 rows)

                                                                                                                                                                                               QUERY PLAN                                                                                                                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=173477.59..626180.86 rows=23721 width=244) (actual time=774.295..779.172 rows=8019 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=159866.49..159974.59 rows=43243 width=212) (actual time=774.259..775.020 rows=9575 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 2883kB
         ->  Hash Join  (cost=8619.80..152102.21 rows=43243 width=212) (actual time=4.487..767.941 rows=9601 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=44394 width=132) (actual time=0.045..720.982 rows=444084 loops=1)
                     Filter: ((list_price <= '94.33'::double precision) AND (list_price >= '12.57'::double precision) AND (ext_tax <= '131.58'::double precision) AND (ext_tax >= '9.47'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '-42.48'::double precision) AND (net_profit >= '-4134.27'::double precision))
                     Rows Removed by Filter: 2436320
               ->  Hash  (cost=8437.55..8437.55 rows=14580 width=80) (actual time=4.353..4.355 rows=293 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 163kB
                     ->  Hash Join  (cost=196.09..8437.55 rows=14580 width=80) (actual time=0.119..4.264 rows=293 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.942 rows=18000 loops=1)
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.084..0.085 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.038 rows=300 loops=1)
   ->  Materialize  (cost=13611.10..14236.43 rows=125065 width=32) (actual time=0.028..0.362 rows=6370 loops=1)
         ->  Sort  (cost=13611.10..13923.76 rows=125065 width=32) (actual time=0.023..0.024 rows=9 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=125065 width=32) (actual time=0.011..0.013 rows=9 loops=1)
                     Filter: ((tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.03'::double precision))
                     Rows Removed by Filter: 3
 Planning Time: 545.146 ms
 Execution Time: 779.521 ms
(27 rows)


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=209347.99..257038.18 rows=10664 width=244) (actual time=1621.565..1682.958 rows=951 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=209331.24..256463.10 rows=17266 width=216) (actual time=1621.146..1676.836 rows=62887 loops=1)
         Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
         ->  Sort  (cost=818.37..847.08 rows=11483 width=32) (actual time=0.022..0.025 rows=3 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..44.00 rows=11483 width=32) (actual time=0.010..0.014 rows=3 loops=1)
                     Filter: ((floor_space <= 9026222) AND (floor_space >= 5250760) AND (devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 226) AND (company_id >= 175))
                     Rows Removed by Filter: 9
         ->  Materialize  (cost=208512.88..208757.31 rows=48886 width=184) (actual time=1518.138..1631.536 rows=310285 loops=1)
               ->  Sort  (cost=208512.88..208635.09 rows=48886 width=184) (actual time=1518.134..1576.603 rows=310285 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 73760kB
                     ->  Hash Join  (cost=1774.85..200358.33 rows=48886 width=184) (actual time=20.651..1246.741 rows=372822 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=145228 width=132) (actual time=0.045..911.498 rows=537107 loops=1)
                                 Filter: ((quantity <= '95'::double precision) AND (quantity >= '13'::double precision) AND (sales_price <= '38.6'::double precision) AND (sales_price >= '2.27'::double precision) AND (ext_discount_amt <= '74.01'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '14296.96'::double precision) AND (ext_sales_price >= '0'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '-20.32'::double precision) AND (net_profit >= '-1944.25'::double precision))
                                 Rows Removed by Filter: 2343297
                           ->  Hash  (cost=456.00..456.00 rows=59188 width=52) (actual time=16.208..16.209 rows=16683 loops=1)
                                 Buckets: 65536  Batches: 2  Memory Usage: 1245kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=59188 width=52) (actual time=0.014..5.791 rows=16703 loops=1)
                                       Filter: ((brand_id <= '10005012'::double precision) AND (brand_id >= '1001001'::double precision))
                                       Rows Removed by Filter: 1297
   ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.198..0.199 rows=291 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 27kB
         ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.025..0.118 rows=294 loops=1)
               Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
               Rows Removed by Filter: 6
 Planning Time: 570.143 ms
 Execution Time: 1699.411 ms
(31 rows)

                                                                                                                                                          QUERY PLAN                                                                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=799.50..133160.90 rows=544 width=244) (actual time=111.047..712.495 rows=7 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=585.81..130557.62 rows=527 width=212) (actual time=110.990..712.417 rows=7 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Hash Join  (cost=569.06..130517.05 rows=737 width=184) (actual time=5.104..711.837 rows=1558 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=16051 width=132) (actual time=0.059..700.826 rows=26399 loops=1)
                     Filter: ((ext_sales_price <= '2568.78'::double precision) AND (ext_sales_price >= '339'::double precision) AND (ext_tax <= '25.56'::double precision) AND (ext_tax >= '0'::double precision) AND (net_paid_inc_tax <= '3954.42'::double precision) AND (net_paid_inc_tax >= '2054.59'::double precision))
                     Rows Removed by Filter: 2854005
               ->  Hash  (cost=546.00..546.00 rows=1845 width=52) (actual time=4.669..4.671 rows=5807 loops=1)
                     Buckets: 8192 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 564kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=1845 width=52) (actual time=0.006..3.712 rows=5810 loops=1)
                           Filter: ((current_price <= '81.58'::double precision) AND (current_price >= '2.5'::double precision) AND (class_id <= '4'::double precision) AND (class_id >= '2'::double precision))
                           Rows Removed by Filter: 12190
         ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.123..0.124 rows=291 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 27kB
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.009..0.073 rows=294 loops=1)
                     Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                     Rows Removed by Filter: 6
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.024..0.025 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.013..0.016 rows=12 loops=1)
 Planning Time: 547.147 ms
 Execution Time: 712.615 ms
(24 rows)



 Merge Join  (cost=162260.19..166448.73 rows=3379 width=244) (actual time=628.230..629.134 rows=1771 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=161180.28..161188.47 rows=3276 width=212) (actual time=628.202..628.293 rows=1772 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 519kB
         ->  Merge Join  (cost=160842.49..160989.01 rows=3276 width=212) (actual time=608.534..627.545 rows=1773 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=158059.18..158067.37 rows=3276 width=184) (actual time=552.765..552.926 rows=1774 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: quicksort  Memory: 521kB
                     ->  Hash Join  (cost=481.01..157867.91 rows=3276 width=184) (actual time=3.353..551.319 rows=1778 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=6063 width=132) (actual time=0.308..545.736 rows=8818 loops=1)
                                 Filter: ((quantity <= '76'::double precision) AND (quantity >= '58'::double precision) AND (list_price <= '94.25'::double precision) AND (list_price >= '12.42'::double precision) AND (ext_discount_amt <= '44.53'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '799.89'::double precision) AND (ext_sales_price >= '295.4'::double precision) AND (ext_tax <= '164.22'::double precision) AND (ext_tax >= '39.91'::double precision))
                                 Rows Removed by Filter: 2871586
                           ->  Hash  (cost=456.00..456.00 rows=2001 width=52) (actual time=2.883..2.885 rows=3516 loops=1)
                                 Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 334kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=2001 width=52) (actual time=0.007..2.423 rows=3516 loops=1)
                                       Filter: ((category_id <= '9'::double precision) AND (category_id >= '8'::double precision))
                                       Rows Removed by Filter: 14484
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=55.738..65.118 rows=99945 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.017..13.097 rows=100000 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.017..0.096 rows=1776 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.008..0.010 rows=12 loops=1)
 Planning Time: 538.644 ms
 Execution Time: 630.089 ms
(30 rows)



 Merge Join  (cost=188843.75..202432.16 rows=600 width=244) (actual time=1075.182..1119.208 rows=64246 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=175232.65..175235.82 rows=1269 width=212) (actual time=1075.138..1088.915 rows=77153 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 17688kB
         ->  Hash Join  (cost=174033.12..175167.24 rows=1269 width=212) (actual time=978.494..1026.239 rows=77178 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.017..1.825 rows=18000 loops=1)
               ->  Hash  (cost=174016.17..174016.17 rows=1356 width=160) (actual time=965.349..965.351 rows=77178 loops=1)
                     Buckets: 32768 (originally 2048)  Batches: 8 (originally 1)  Memory Usage: 3841kB
                     ->  Merge Join  (cost=172889.15..174016.17 rows=1356 width=160) (actual time=871.236..915.024 rows=78971 loops=1)
                           Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
                           ->  Sort  (cost=171826.84..171830.14 rows=1319 width=132) (actual time=871.126..883.478 rows=78972 loops=1)
                                 Sort Key: store_sales.promo_sk
                                 Sort Method: external merge  Disk: 11312kB
                                 ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=1319 width=132) (actual time=0.072..820.639 rows=79025 loops=1)
                                       Filter: ((quantity <= '54'::double precision) AND (quantity >= '8'::double precision) AND (ext_sales_price <= '2102.1'::double precision) AND (ext_sales_price >= '25.65'::double precision) AND (ext_wholesale_cost <= '639.12'::double precision) AND (ext_wholesale_cost >= '219.45'::double precision) AND (ext_list_price <= '7552.88'::double precision) AND (ext_list_price >= '77.4'::double precision) AND (ext_tax <= '241.16'::double precision) AND (ext_tax >= '0.22'::double precision) AND (net_profit <= '1418.64'::double precision) AND (net_profit >= '-87.15'::double precision))
                                       Rows Removed by Filter: 2801379
                           ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.103..3.758 rows=78687 loops=1)
                                 Sort Key: ((promotion.promo_sk)::double precision)
                                 Sort Method: quicksort  Memory: 48kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.055 rows=300 loops=1)
   ->  Materialize  (cost=13611.10..14236.43 rows=125065 width=32) (actual time=0.035..2.770 rows=51363 loops=1)
         ->  Sort  (cost=13611.10..13923.76 rows=125065 width=32) (actual time=0.030..0.031 rows=9 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=125065 width=32) (actual time=0.018..0.021 rows=9 loops=1)
                     Filter: ((tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.03'::double precision))
                     Rows Removed by Filter: 3
 Planning Time: 499.659 ms
 Execution Time: 1127.345 ms
(31 rows)

                                                                                                                                                                   QUERY PLAN                                                                                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=133933.01..136632.34 rows=1706 width=244) (actual time=583.855..600.972 rows=64 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=133376.92..135906.41 rows=1706 width=192) (actual time=578.576..595.555 rows=518 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..7.718 rows=100000 loops=1)
         ->  Hash  (cost=133355.60..133355.60 rows=1706 width=164) (actual time=578.462..578.467 rows=518 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 118kB
               ->  Hash Join  (cost=41.01..133355.60 rows=1706 width=164) (actual time=0.319..578.110 rows=518 loops=1)
                     Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=51693 width=132) (actual time=0.080..577.624 rows=1540 loops=1)
                           Filter: ((ext_wholesale_cost <= '3630.4'::double precision) AND (ext_wholesale_cost >= '287.2'::double precision) AND (ext_list_price <= '10742.82'::double precision) AND (ext_list_price >= '6726.24'::double precision) AND (net_paid <= '1454.4'::double precision) AND (net_paid >= '67.23'::double precision))
                           Rows Removed by Filter: 2878864
                     ->  Hash  (cost=37.20..37.20 rows=305 width=32) (actual time=0.008..0.011 rows=4 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on store  (cost=0.00..37.20 rows=305 width=32) (actual time=0.004..0.007 rows=4 loops=1)
                                 Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 175) AND (company_id >= 27))
                                 Rows Removed by Filter: 8
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.062..5.063 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..2.013 rows=18000 loops=1)
 Planning Time: 592.094 ms
 Execution Time: 601.072 ms
(22 rows)

                                                                                                                QUERY PLAN                                                                                                                
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=117111.77..119112.21 rows=3033 width=240) (actual time=639.147..658.537 rows=2352 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.018..8.216 rows=100000 loops=1)
   ->  Hash  (cost=117073.86..117073.86 rows=3033 width=212) (actual time=639.060..639.063 rows=2352 loops=1)
         Buckets: 4096  Batches: 1  Memory Usage: 620kB
         ->  Hash Join  (cost=570.85..117073.86 rows=3033 width=212) (actual time=6.421..637.624 rows=2365 loops=1)
               Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
               ->  Hash Join  (cost=554.10..115969.53 rows=5153 width=184) (actual time=6.207..636.224 rows=2441 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=306858 width=132) (actual time=0.037..597.646 rows=419331 loops=1)
                           Filter: ((ext_wholesale_cost <= '3299.94'::double precision) AND (ext_wholesale_cost >= '150.5'::double precision) AND (net_paid <= '5025.22'::double precision) AND (net_paid >= '1358.4'::double precision))
                           Rows Removed by Filter: 2461073
                     ->  Hash  (cost=546.00..546.00 rows=648 width=52) (actual time=5.741..5.742 rows=116 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 18kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=648 width=52) (actual time=0.026..5.707 rows=116 loops=1)
                                 Filter: ((brand_id <= '10013017'::double precision) AND (brand_id >= '7016008'::double precision) AND (manufact_id <= '127'::double precision) AND (manufact_id >= '116'::double precision))
                                 Rows Removed by Filter: 17884
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.204..0.204 rows=294 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.012..0.115 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
 Planning Time: 474.561 ms
 Execution Time: 658.714 ms
(24 rows)

                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=128041.43..152513.22 rows=13173 width=244) (actual time=634.958..636.726 rows=3258 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=124740.29..124757.49 rows=6880 width=212) (actual time=634.927..635.127 rows=3899 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 1138kB
         ->  Hash Join  (cost=118743.49..124301.73 rows=6880 width=212) (actual time=613.251..632.734 rows=3921 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=101693 width=28) (actual time=0.015..11.958 rows=57370 loops=1)
                     Filter: ((birth_day <= '23'::double precision) AND (birth_day >= '6'::double precision))
                     Rows Removed by Filter: 42630
               ->  Hash  (cost=118526.21..118526.21 rows=17382 width=184) (actual time=613.187..613.189 rows=6893 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 1760kB
                     ->  Hash Join  (cost=549.11..118526.21 rows=17382 width=184) (actual time=2.689..609.668 rows=6974 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=983163 width=132) (actual time=0.033..589.203 rows=156421 loops=1)
                                 Filter: ((list_price <= '185.08'::double precision) AND (list_price >= '14.77'::double precision) AND (net_paid_inc_tax <= '208.95'::double precision) AND (net_paid_inc_tax >= '110.12'::double precision))
                                 Rows Removed by Filter: 2723983
                           ->  Hash  (cost=546.00..546.00 rows=249 width=52) (actual time=2.425..2.426 rows=800 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 77kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=249 width=52) (actual time=0.008..2.324 rows=800 loops=1)
                                       Filter: ((current_price <= '2.76'::double precision) AND (current_price >= '1.57'::double precision) AND (category_id <= '10'::double precision) AND (category_id >= '8'::double precision))
                                       Rows Removed by Filter: 17200
   ->  Sort  (cost=3301.15..3407.30 rows=42461 width=32) (actual time=0.023..0.163 rows=3262 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=42461 width=32) (actual time=0.010..0.013 rows=9 loops=1)
               Filter: ((market_id <= 8) AND (market_id >= 2) AND (tax_percentage <= '0.11'::double precision) AND (tax_percentage >= '0.03'::double precision))
               Rows Removed by Filter: 3
 Planning Time: 577.297 ms
 Execution Time: 636.916 ms
(30 rows)



 Hash Join  (cost=2668.28..174867.98 rows=273 width=244) (actual time=52.181..640.652 rows=261 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=2599.43..174727.32 rows=95 width=212) (actual time=37.957..640.407 rows=792 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=682.34..172448.57 rows=95 width=184) (actual time=3.174..597.280 rows=792 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=791 width=132) (actual time=0.239..592.889 rows=5999 loops=1)
                     Filter: ((list_price <= '70.62'::double precision) AND (list_price >= '36.88'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '4458.5'::double precision) AND (ext_wholesale_cost >= '35.97'::double precision) AND (ext_tax <= '110.88'::double precision) AND (ext_tax >= '9.47'::double precision) AND (net_paid_inc_tax <= '963.2'::double precision) AND (net_paid_inc_tax >= '549.27'::double precision) AND (net_profit <= '-996.88'::double precision) AND (net_profit >= '-1383.55'::double precision))
                     Rows Removed by Filter: 2874405
               ->  Hash  (cost=546.00..546.00 rows=10907 width=52) (actual time=2.911..2.911 rows=2430 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 337kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=10907 width=52) (actual time=0.005..2.615 rows=2430 loops=1)
                           Filter: ((class_id <= '3'::double precision) AND (class_id >= '2'::double precision) AND (category_id <= '3'::double precision) AND (category_id >= '1'::double precision))
                           Rows Removed by Filter: 15570
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=34.759..34.760 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..10.402 rows=100000 loops=1)
   ->  Hash  (cost=37.20..37.20 rows=2532 width=32) (actual time=0.020..0.020 rows=3 loops=1)
         Buckets: 4096  Batches: 1  Memory Usage: 33kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=2532 width=32) (actual time=0.014..0.017 rows=3 loops=1)
               Filter: ((number_employees <= 294) AND (number_employees >= 229) AND (market_id <= 9) AND (market_id >= 8))
               Rows Removed by Filter: 9
 Planning Time: 499.211 ms
 Execution Time: 640.738 ms
(24 rows)

                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=113702.48..356671.76 rows=196912 width=244) (actual time=9281.184..10997.985 rows=1893084 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=92677.52..92716.06 rows=15415 width=212) (actual time=9281.104..9951.571 rows=3798036 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 874184kB
         ->  Hash Join  (cost=89747.83..91605.28 rows=15415 width=212) (actual time=2385.011..5166.658 rows=3843156 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Merge Join  (cost=89191.74..89456.54 rows=15998 width=160) (actual time=2380.277..4105.010 rows=2750652 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2321.433..2774.600 rows=2750653 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 397328kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.030..326.571 rows=2880404 loops=1)
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=58.827..319.867 rows=2759726 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.025..13.078 rows=100000 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.692..4.692 rows=17954 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.943 rows=18000 loops=1)
   ->  Materialize  (cost=21024.96..21965.53 rows=188114 width=32) (actual time=0.064..83.652 rows=1893086 loops=1)
         ->  Sort  (cost=21024.96..21495.24 rows=188114 width=32) (actual time=0.058..0.061 rows=5 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..44.00 rows=188114 width=32) (actual time=0.031..0.035 rows=5 loops=1)
                     Filter: ((floor_space <= 9341467) AND (floor_space >= 5219562) AND (company_id <= 811) AND (company_id >= 175) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
                     Rows Removed by Filter: 7
 Planning Time: 503.612 ms
 Execution Time: 11253.131 ms
(29 rows)

                                                                                                                                                          QUERY PLAN                                                                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=129887.97..132527.05 rows=210 width=244) (actual time=562.657..576.799 rows=28 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=82289 width=28) (actual time=0.016..10.805 rows=47788 loops=1)
         Filter: ((birth_day <= '18'::double precision) AND (birth_day >= '4'::double precision))
         Rows Removed by Filter: 52212
   ->  Hash  (cost=129887.35..129887.35 rows=49 width=216) (actual time=562.100..562.102 rows=65 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 25kB
         ->  Hash Join  (cost=603.20..129887.35 rows=49 width=216) (actual time=3.336..562.041 rows=66 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Hash Join  (cost=44.66..129260.78 rows=792 width=164) (actual time=0.071..558.595 rows=3014 loops=1)
                     Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=37693 width=132) (actual time=0.054..555.703 rows=17958 loops=1)
                           Filter: ((ext_wholesale_cost <= '3597.16'::double precision) AND (ext_wholesale_cost >= '1543.36'::double precision) AND (ext_tax <= '31.85'::double precision) AND (ext_tax >= '0'::double precision) AND (net_paid <= '1285.7'::double precision) AND (net_paid >= '1031.11'::double precision))
                           Rows Removed by Filter: 2862446
                     ->  Hash  (cost=44.00..44.00 rows=53 width=32) (actual time=0.009..0.009 rows=1 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on store  (cost=0.00..44.00 rows=53 width=32) (actual time=0.004..0.006 rows=1 loops=1)
                                 Filter: ((floor_space <= 6995995) AND (floor_space >= 5250760) AND (market_id <= 8) AND (market_id >= 6) AND (tax_percentage <= '0.06'::double precision) AND (tax_percentage >= '0.01'::double precision))
                                 Rows Removed by Filter: 11
               ->  Hash  (cost=546.00..546.00 rows=1003 width=52) (actual time=2.808..2.809 rows=1540 loops=1)
                     Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 149kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=1003 width=52) (actual time=0.006..2.569 rows=1542 loops=1)
                           Filter: ((brand_id <= '6002002'::double precision) AND (brand_id >= '3002002'::double precision) AND (manufact_id <= '191'::double precision) AND (manufact_id >= '21'::double precision))
                           Rows Removed by Filter: 16458
 Planning Time: 475.530 ms
 Execution Time: 576.874 ms
(26 rows)



 Merge Join  (cost=162641.48..166618.40 rows=3254 width=244) (actual time=595.722..595.755 rows=50 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=161561.56..161569.34 rows=3110 width=212) (actual time=595.679..595.686 rows=50 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 38kB
         ->  Hash Join  (cost=159269.34..161381.12 rows=3110 width=212) (actual time=592.600..595.635 rows=50 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.460 rows=18000 loops=1)
               ->  Hash  (cost=159229.38..159229.38 rows=3197 width=160) (actual time=592.494..592.496 rows=50 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 42kB
                     ->  Hash Join  (cost=196.09..159229.38 rows=3197 width=160) (actual time=2.749..592.429 rows=50 loops=1)
                           Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=3236 width=132) (actual time=0.280..591.736 rows=2059 loops=1)
                                 Filter: ((list_price <= '101.35'::double precision) AND (list_price >= '47.56'::double precision) AND (ext_sales_price <= '3824.64'::double precision) AND (ext_sales_price >= '979.66'::double precision) AND (ext_tax <= '413.06'::double precision) AND (ext_tax >= '164.09'::double precision) AND (net_paid_inc_tax <= '2509.47'::double precision) AND (net_paid_inc_tax >= '0.21'::double precision) AND (net_profit <= '0'::double precision) AND (net_profit >= '-546.93'::double precision))
                                 Rows Removed by Filter: 2878345
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.096..0.097 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.040 rows=300 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.030..0.033 rows=55 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.009..0.012 rows=12 loops=1)
 Planning Time: 503.568 ms
 Execution Time: 595.828 ms
(24 rows)

                                                                                                                 QUERY PLAN                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=270372.98..278947.21 rows=372302 width=244) (actual time=1965.174..2019.100 rows=36907 loops=1)
   Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
   ->  Sort  (cost=230072.36..230268.15 rows=78315 width=216) (actual time=1925.863..1933.398 rows=41673 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external merge  Disk: 9576kB
         ->  Merge Join  (cost=147407.18..215674.06 rows=78315 width=216) (actual time=1853.583..1890.428 rows=41780 loops=1)
               Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
               ->  Sort  (cost=676.15..700.28 rows=9654 width=32) (actual time=0.023..0.025 rows=3 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..37.20 rows=9654 width=32) (actual time=0.015..0.018 rows=4 loops=1)
                           Filter: ((number_employees <= 294) AND (number_employees >= 288) AND (market_id <= 10) AND (market_id >= 2))
                           Rows Removed by Filter: 8
               ->  Materialize  (cost=146731.03..147152.27 rows=84246 width=184) (actual time=1764.247..1855.284 rows=251954 loops=1)
                     ->  Sort  (cost=146731.03..146941.65 rows=84246 width=184) (actual time=1764.244..1810.920 rows=251954 loops=1)
                           Sort Key: store_sales.store_sk
                           Sort Method: external merge  Disk: 50032kB
                           ->  Hash Join  (cost=121548.38..132348.71 rows=84246 width=184) (actual time=1143.002..1609.318 rows=253402 loops=1)
                                 Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=3586 width=52) (actual time=0.006..2.537 rows=7622 loops=1)
                                       Filter: ((current_price <= '7.98'::double precision) AND (current_price >= '2.97'::double precision))
                                       Rows Removed by Filter: 10378
                                 ->  Hash  (cost=114154.24..114154.24 rows=230811 width=132) (actual time=1116.447..1116.447 rows=1232491 loops=1)
                                       Buckets: 32768 (originally 32768)  Batches: 64 (originally 16)  Memory Usage: 3841kB
                                       ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=230811 width=132) (actual time=0.029..650.207 rows=1247484 loops=1)
                                             Filter: ((sales_price <= '50.04'::double precision) AND (sales_price >= '4.09'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                             Rows Removed by Filter: 1632920
   ->  Materialize  (cost=40300.62..41947.77 rows=329430 width=28) (actual time=39.293..59.485 rows=117230 loops=1)
         ->  Sort  (cost=40300.62..41124.20 rows=329430 width=28) (actual time=39.291..48.082 rows=88602 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external merge  Disk: 4328kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=329430 width=28) (actual time=0.022..15.861 rows=88605 loops=1)
                     Filter: ((birth_day <= '29'::double precision) AND (birth_day >= '2'::double precision))
                     Rows Removed by Filter: 11395
 Planning Time: 508.231 ms
 Execution Time: 2035.026 ms
(36 rows)



 Hash Join  (cost=856.80..173482.64 rows=7 width=244) (actual time=555.438..555.440 rows=0 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=572.84..172737.79 rows=81 width=212) (actual time=555.378..555.380 rows=0 loops=1)
         Hash Cond: (promotion.item_sk = (item.item_sk)::double precision)
         ->  Hash Join  (cost=16.75..171824.57 rows=83 width=160) (actual time=555.377..555.379 rows=0 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=1526 width=132) (actual time=555.377..555.377 rows=0 loops=1)
                     Filter: ((list_price <= '45.06'::double precision) AND (list_price >= '-1'::double precision) AND (ext_wholesale_cost <= '4152'::double precision) AND (ext_wholesale_cost >= '1338.37'::double precision) AND (ext_tax <= '0'::double precision) AND (ext_tax >= '0'::double precision) AND (net_paid <= '557.7'::double precision) AND (net_paid >= '57.54'::double precision) AND (net_paid_inc_tax <= '2.45'::double precision) AND (net_paid_inc_tax >= '-1'::double precision) AND (net_profit <= '1797.12'::double precision) AND (net_profit >= '-3987.14'::double precision))
                     Rows Removed by Filter: 2880404
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (never executed)
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (never executed)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (never executed)
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (never executed)
   ->  Hash  (cost=44.00..44.00 rows=19197 width=32) (actual time=0.021..0.021 rows=4 loops=1)
         Buckets: 32768  Batches: 1  Memory Usage: 257kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=19197 width=32) (actual time=0.014..0.017 rows=4 loops=1)
               Filter: ((number_employees <= 271) AND (number_employees >= 236) AND (devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 877) AND (company_id >= 175))
               Rows Removed by Filter: 8
 Planning Time: 501.472 ms
 Execution Time: 555.506 ms
(21 rows)



 Hash Join  (cost=2113.18..175495.68 rows=70 width=240) (actual time=285.213..5424.635 rows=54 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=1917.09..175263.13 rows=70 width=212) (actual time=42.285..5424.001 rows=2489 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Nested Loop  (cost=0.00..173077.98 rows=70 width=184) (actual time=4.649..5380.977 rows=2491 loops=1)
               Join Filter: (store_sales.item_sk = item.item_sk)
               Rows Removed by Join Filter: 44645601
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=379 width=132) (actual time=0.091..686.265 rows=15923 loops=1)
                     Filter: ((sales_price <= '60.21'::double precision) AND (sales_price >= '1.77'::double precision) AND (ext_sales_price <= '2624.82'::double precision) AND (ext_sales_price >= '280'::double precision) AND (ext_wholesale_cost <= '7344.5'::double precision) AND (ext_wholesale_cost >= '212.52'::double precision) AND (ext_list_price <= '6026.28'::double precision) AND (ext_list_price >= '5074.74'::double precision) AND (ext_tax <= '141.52'::double precision) AND (ext_tax >= '0'::double precision) AND (net_profit <= '-576.24'::double precision) AND (net_profit >= '-1981.8'::double precision))
                     Rows Removed by Filter: 2864481
               ->  Materialize  (cost=0.00..546.68 rows=136 width=52) (actual time=0.000..0.122 rows=2804 loops=15923)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=136 width=52) (actual time=0.008..2.987 rows=2804 loops=1)
                           Filter: ((brand_id <= '9014011'::double precision) AND (brand_id >= '4001002'::double precision) AND (manufact_id <= '642'::double precision) AND (manufact_id >= '346'::double precision))
                           Rows Removed by Filter: 15196
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=32.804..32.804 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..10.526 rows=100000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.094..0.094 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.048 rows=300 loops=1)
 Planning Time: 546.675 ms
 Execution Time: 5424.728 ms
(22 rows)

                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1282.71..90447.53 rows=3133 width=244) (actual time=2.929..692.062 rows=32981 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=912.70..87630.72 rows=309 width=212) (actual time=2.781..666.840 rows=201554 loops=1)
         Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
         ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.032..321.292 rows=2880404 loops=1)
         ->  Hash  (cost=908.84..908.84 rows=309 width=80) (actual time=2.736..2.738 rows=22 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 11kB
               ->  Hash Join  (cost=196.09..908.84 rows=309 width=80) (actual time=0.235..2.728 rows=22 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=322 width=52) (actual time=0.007..2.492 rows=1089 loops=1)
                           Filter: ((brand_id <= '4004001'::double precision) AND (brand_id >= '3001002'::double precision) AND (manufact_id <= '486'::double precision) AND (manufact_id >= '217'::double precision))
                           Rows Removed by Filter: 16911
                     ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.081..0.082 rows=293 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 147kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.039 rows=300 loops=1)
   ->  Hash  (cost=37.20..37.20 rows=26625 width=32) (actual time=0.021..0.021 rows=3 loops=1)
         Buckets: 32768  Batches: 1  Memory Usage: 257kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=26625 width=32) (actual time=0.015..0.017 rows=3 loops=1)
               Filter: ((floor_space <= 9294113) AND (floor_space >= 9078805) AND (devision_id <= 1) AND (devision_id >= 1))
               Rows Removed by Filter: 9
 Planning Time: 469.743 ms
 Execution Time: 693.458 ms
(22 rows)

                                                                                                                                                                                                                   QUERY PLAN                                                                                                                                                                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=158548.24..158903.03 rows=665 width=244) (actual time=704.977..707.667 rows=5062 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=158093.33..158094.90 rows=627 width=212) (actual time=704.950..705.258 rows=6151 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 1831kB
         ->  Merge Join  (cost=157200.68..158064.21 rows=627 width=212) (actual time=690.166..702.686 rows=6167 loops=1)
               Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
               ->  Sort  (cost=13492.12..13754.49 rows=104946 width=28) (actual time=29.968..33.566 rows=40609 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external merge  Disk: 1984kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=104946 width=28) (actual time=0.017..15.969 rows=40609 loops=1)
                           Filter: ((birth_month <= '7'::double precision) AND (birth_month >= '3'::double precision))
                           Rows Removed by Filter: 59391
               ->  Sort  (cost=143708.56..143715.11 rows=2623 width=184) (actual time=660.187..662.389 rows=14935 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external sort  Disk: 3024kB
                     ->  Hash Join  (cost=480.93..143559.59 rows=2623 width=184) (actual time=3.455..638.649 rows=14972 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=25178 width=132) (actual time=0.034..624.305 rows=49091 loops=1)
                                 Filter: ((list_price <= '116.02'::double precision) AND (list_price >= '17.43'::double precision) AND (ext_discount_amt <= '150.37'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '1043.84'::double precision) AND (ext_list_price >= '506.61'::double precision) AND (net_profit <= '-345.92'::double precision) AND (net_profit >= '-1269.36'::double precision))
                                 Rows Removed by Filter: 2831313
                           ->  Hash  (cost=456.00..456.00 rows=1994 width=52) (actual time=3.236..3.237 rows=5437 loops=1)
                                 Buckets: 8192 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 531kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=1994 width=52) (actual time=0.006..2.575 rows=5437 loops=1)
                                       Filter: ((category_id <= '6'::double precision) AND (category_id >= '4'::double precision))
                                       Rows Removed by Filter: 12563
   ->  Sort  (cost=454.91..471.61 rows=6682 width=32) (actual time=0.022..0.237 rows=5066 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=6682 width=32) (actual time=0.011..0.013 rows=10 loops=1)
               Filter: ((market_id <= 8) AND (market_id >= 2))
               Rows Removed by Filter: 2
 Planning Time: 468.874 ms
 Execution Time: 708.890 ms
(34 rows)

                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=89181.66..90929.71 rows=11829 width=244) (actual time=684.259..702.221 rows=19980 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=88567.73..88573.55 rows=2327 width=212) (actual time=679.146..689.694 rows=59517 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 13968kB
         ->  Hash Join  (cost=1783.59..88437.58 rows=2327 width=212) (actual time=4.136..627.952 rows=62316 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..325.463 rows=2880404 loops=1)
               ->  Hash  (cost=1754.50..1754.50 rows=2327 width=80) (actual time=4.086..4.088 rows=291 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 67kB
                     ->  Hash Join  (cost=37.79..1754.50 rows=2327 width=80) (actual time=0.118..4.003 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.005..1.745 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=2423 width=28) (actual time=0.097..0.098 rows=291 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 51kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=2423 width=28) (actual time=0.009..0.059 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '-1'::double precision))
                                       Rows Removed by Filter: 6
   ->  Sort  (cost=613.93..636.17 rows=8896 width=32) (actual time=0.021..0.871 rows=19982 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=8896 width=32) (actual time=0.011..0.012 rows=4 loops=1)
               Filter: ((company_id <= 175) AND (company_id >= 27))
               Rows Removed by Filter: 8
 Planning Time: 494.312 ms
 Execution Time: 705.326 ms
(26 rows)

                                                                                                                                                   QUERY PLAN                                                                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=138808.18..141076.85 rows=1832 width=244) (actual time=597.087..598.135 rows=1796 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=137728.27..137732.71 rows=1774 width=212) (actual time=597.058..597.152 rows=1797 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 526kB
         ->  Hash Join  (cost=129356.18..137632.52 rows=1774 width=212) (actual time=582.349..596.106 rows=1799 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=80125 width=28) (actual time=0.017..11.038 rows=19577 loops=1)
                     Filter: ((birth_year <= '1947'::double precision) AND (birth_year >= '1934'::double precision))
                     Rows Removed by Filter: 80423
               ->  Hash  (cost=129316.87..129316.87 rows=3144 width=184) (actual time=582.302..582.303 rows=9298 loops=1)
                     Buckets: 16384 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 2160kB
                     ->  Hash Join  (cost=472.25..129316.87 rows=3144 width=184) (actual time=2.678..578.006 rows=9360 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=64694 width=132) (actual time=0.032..557.844 rows=140025 loops=1)
                                 Filter: ((quantity <= '67'::double precision) AND (quantity >= '36'::double precision) AND (sales_price <= '55.5'::double precision) AND (sales_price >= '30.9'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                 Rows Removed by Filter: 2740379
                           ->  Hash  (cost=456.00..456.00 rows=1300 width=52) (actual time=2.574..2.574 rows=1179 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 118kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=1300 width=52) (actual time=0.010..2.428 rows=1179 loops=1)
                                       Filter: ((manufact_id <= '576'::double precision) AND (manufact_id >= '505'::double precision))
                                       Rows Removed by Filter: 16821
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.022..0.103 rows=1801 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
 Planning Time: 543.711 ms
 Execution Time: 598.293 ms
(28 rows)

                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=709304.71..773156.26 rows=424303 width=244) (actual time=3782.072..5487.921 rows=2018273 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=708748.62..730358.37 rows=424303 width=192) (actual time=3777.308..4904.673 rows=1421214 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..9.913 rows=100000 loops=1)
         ->  Hash  (cost=693499.84..693499.84 rows=424303 width=164) (actual time=3777.247..3777.253 rows=1421214 loops=1)
               Buckets: 32768 (originally 32768)  Batches: 128 (originally 32)  Memory Usage: 3841kB
               ->  Merge Join  (cost=366197.84..693499.84 rows=424303 width=164) (actual time=1738.269..3078.889 rows=1438754 loops=1)
                     Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                     ->  Sort  (cost=240.52..249.17 rows=3459 width=32) (actual time=0.016..0.027 rows=6 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..37.20 rows=3459 width=32) (actual time=0.006..0.010 rows=6 loops=1)
                                 Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 811) AND (company_id >= 226))
                                 Rows Removed by Filter: 6
                     ->  Materialize  (cost=365957.32..371568.40 rows=1122217 width=132) (actual time=1738.239..2634.668 rows=2159308 loops=1)
                           ->  Sort  (cost=365957.32..368762.86 rows=1122217 width=132) (actual time=1738.231..2091.595 rows=2159308 loops=1)
                                 Sort Key: store_sales.store_sk
                                 Sort Method: external merge  Disk: 311088kB
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1122217 width=132) (actual time=0.029..524.255 rows=2211665 loops=1)
                                       Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '-1'::double precision))
                                       Rows Removed by Filter: 668739
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.715..4.715 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.922 rows=18000 loops=1)
 Planning Time: 514.104 ms
 Execution Time: 5669.057 ms
(27 rows)

                                                                                                                                                                                             QUERY PLAN                                                                                                                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=143676.92..150418.60 rows=414 width=240) (actual time=521.463..529.353 rows=13 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=58169 width=28) (actual time=0.018..9.424 rows=12452 loops=1)
         Filter: ((birth_day <= '28'::double precision) AND (birth_day >= '25'::double precision))
         Rows Removed by Filter: 87548
   ->  Hash  (cost=143668.01..143668.01 rows=713 width=212) (actual time=518.825..518.827 rows=76 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 27kB
         ->  Hash Join  (cost=568.67..143668.01 rows=713 width=212) (actual time=15.312..518.760 rows=77 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Hash Join  (cost=551.92..143622.34 rows=894 width=184) (actual time=4.038..517.960 rows=3550 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=14234 width=132) (actual time=0.095..510.750 rows=8776 loops=1)
                           Filter: ((sales_price <= '7.43'::double precision) AND (sales_price >= '4.38'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_tax <= '0'::double precision) AND (ext_tax >= '-1'::double precision) AND (net_paid <= '4763.7'::double precision) AND (net_paid >= '221.6'::double precision))
                           Rows Removed by Filter: 2871628
                     ->  Hash  (cost=456.00..456.00 rows=7674 width=52) (actual time=3.819..3.819 rows=7381 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 698kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=7674 width=52) (actual time=0.005..2.869 rows=7381 loops=1)
                                 Filter: ((manufact_id <= '502'::double precision) AND (manufact_id >= '189'::double precision))
                                 Rows Removed by Filter: 10619
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.098..0.098 rows=291 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.059 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
 Planning Time: 481.659 ms
 Execution Time: 529.423 ms
(26 rows)

                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=142677.51..190114.25 rows=96189 width=244) (actual time=612.215..617.598 rows=10417 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1041.25..1077.78 rows=14613 width=32) (actual time=0.029..0.031 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.016..0.020 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
   ->  Materialize  (cost=141636.26..141829.59 rows=38667 width=212) (actual time=612.181..614.287 rows=10418 loops=1)
         ->  Sort  (cost=141636.26..141732.92 rows=38667 width=212) (actual time=612.179..612.706 rows=10418 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 3116kB
               ->  Hash Join  (cost=132448.96..134724.60 rows=38667 width=212) (actual time=583.629..607.256 rows=10479 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Merge Join  (cost=131892.87..133680.38 rows=40016 width=160) (actual time=574.734..594.327 rows=10479 loops=1)
                           Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                           ->  Sort  (cost=12401.54..12640.01 rows=95385 width=28) (actual time=23.537..25.316 rows=32414 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: quicksort  Memory: 3301kB
                                 ->  Seq Scan on customer  (cost=0.00..2227.00 rows=95385 width=28) (actual time=0.015..17.092 rows=32414 loops=1)
                                       Filter: ((birth_month <= '6'::double precision) AND (birth_month >= '3'::double precision))
                                       Rows Removed by Filter: 67586
                           ->  Materialize  (cost=119491.33..119676.28 rows=36990 width=132) (actual time=551.181..559.548 rows=32378 loops=1)
                                 ->  Sort  (cost=119491.33..119583.80 rows=36990 width=132) (actual time=551.178..555.546 rows=32378 loops=1)
                                       Sort Key: store_sales.customer_sk
                                       Sort Method: external merge  Disk: 4656kB
                                       ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=36990 width=132) (actual time=0.085..527.090 rows=32792 loops=1)
                                             Filter: ((sales_price <= '26.05'::double precision) AND (sales_price >= '22.04'::double precision) AND (net_paid <= '943.95'::double precision) AND (net_paid >= '386.55'::double precision))
                                             Rows Removed by Filter: 2847612
                     ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=8.869..8.870 rows=18000 loops=1)
                           Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..3.585 rows=18000 loops=1)
 Planning Time: 555.606 ms
 Execution Time: 619.606 ms
(33 rows)

                                                                                                                                                                                         QUERY PLAN                                                                                                                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=627.11..144598.42 rows=307 width=244) (actual time=35.414..569.351 rows=56 loops=1)
   Hash Cond: (promotion.item_sk = (item.item_sk)::double precision)
   ->  Hash Join  (cost=55.91..143577.46 rows=782 width=192) (actual time=29.898..563.758 rows=114 loops=1)
         Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
         ->  Hash Join  (cost=16.75..143110.70 rows=2027 width=160) (actual time=0.372..563.652 rows=243 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=4255 width=132) (actual time=0.082..561.812 rows=10709 loops=1)
                     Filter: ((quantity <= '84'::double precision) AND (quantity >= '82'::double precision) AND (ext_tax <= '51.44'::double precision) AND (ext_tax >= '0.36'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '-22.08'::double precision) AND (net_profit >= '-2312.5'::double precision))
                     Rows Removed by Filter: 2869695
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.118..0.118 rows=291 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.021..0.076 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
         ->  Hash  (cost=30.40..30.40 rows=701 width=32) (actual time=0.008..0.009 rows=5 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=701 width=32) (actual time=0.004..0.006 rows=5 loops=1)
                     Filter: ((market_id <= 9) AND (market_id >= 7))
                     Rows Removed by Filter: 7
   ->  Hash  (cost=546.00..546.00 rows=2016 width=52) (actual time=5.507..5.508 rows=10388 loops=1)
         Buckets: 16384 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 1021kB
         ->  Seq Scan on item  (cost=0.00..546.00 rows=2016 width=52) (actual time=0.007..3.795 rows=10388 loops=1)
               Filter: ((brand_id <= '9011012'::double precision) AND (brand_id >= '2002001'::double precision) AND (manufact_id <= '655'::double precision) AND (manufact_id >= '65'::double precision))
               Rows Removed by Filter: 7612
 Planning Time: 497.151 ms
 Execution Time: 569.436 ms
(26 rows)

                                                                                                                                                                                                                                                             QUERY PLAN                                                                                                                                                                                                                                                             

 Merge Join  (cost=165568.47..204596.65 rows=5985 width=244) (actual time=869.364..877.760 rows=13479 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=163090.35..163126.10 rows=14298 width=212) (actual time=863.854..869.349 rows=33362 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 9216kB
         ->  Hash Join  (cost=161669.24..162103.51 rows=14298 width=212) (actual time=780.340..835.210 rows=40303 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=161113.15..161367.06 rows=14786 width=160) (actual time=775.131..816.596 rows=40303 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=158329.84..158365.11 rows=14109 width=132) (actual time=716.193..722.724 rows=40304 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 5776kB
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=14109 width=132) (actual time=0.048..687.594 rows=40426 loops=1)
                                 Filter: ((sales_price <= '60.23'::double precision) AND (sales_price >= '6.69'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '3591.7'::double precision) AND (ext_sales_price >= '2464.32'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '1870'::double precision) AND (net_profit >= '-8.08'::double precision))
                                 Rows Removed by Filter: 2839978
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=58.928..69.969 rows=109231 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.013..13.251 rows=100000 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.184..5.184 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..2.145 rows=18000 loops=1)
   ->  Sort  (cost=2478.12..2559.53 rows=32565 width=32) (actual time=0.030..0.647 rows=13481 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=32565 width=32) (actual time=0.018..0.021 rows=4 loops=1)
               Filter: ((floor_space <= 8954883) AND (floor_space >= 6995995) AND (devision_id <= 1) AND (devision_id >= 1))
               Rows Removed by Filter: 8
 Planning Time: 497.168 ms
 Execution Time: 882.418 ms
(30 rows)

                                                                                                               QUERY PLAN                                                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=110753.26..112688.53 rows=7535 width=240) (actual time=1901.804..2218.925 rows=416344 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..9.104 rows=100000 loops=1)
   ->  Hash  (cost=110659.07..110659.07 rows=7535 width=212) (actual time=1901.754..1901.774 rows=416344 loops=1)
         Buckets: 16384 (originally 8192)  Batches: 32 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=108388.07..110659.07 rows=7535 width=212) (actual time=1396.746..1679.593 rows=421505 loops=1)
               Hash Cond: ((promotion.promo_sk)::double precision = store_sales.promo_sk)
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.008..0.083 rows=294 loops=1)
                     Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                     Rows Removed by Filter: 6
               ->  Hash  (cost=107160.36..107160.36 rows=32377 width=184) (actual time=1396.693..1396.712 rows=430203 loops=1)
                     Buckets: 32768 (originally 32768)  Batches: 64 (originally 2)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=598.00..107160.36 rows=32377 width=184) (actual time=3.009..994.799 rows=440512 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1123421 width=132) (actual time=0.037..621.207 rows=2318102 loops=1)
                                 Filter: ((ext_discount_amt <= '69.13'::double precision) AND (ext_discount_amt >= '0'::double precision))
                                 Rows Removed by Filter: 562302
                           ->  Hash  (cost=546.00..546.00 rows=4160 width=52) (actual time=2.956..2.973 rows=3396 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 356kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=4160 width=52) (actual time=0.006..2.566 rows=3396 loops=1)
                                       Filter: ((current_price <= '3.54'::double precision) AND (current_price >= '0.72'::double precision) AND (brand_id <= '8005001'::double precision) AND (brand_id >= '2004001'::double precision))
                                       Rows Removed by Filter: 14604
 Planning Time: 506.096 ms
 Execution Time: 2234.441 ms
(24 rows)

                                                                                                                                                                                                           QUERY PLAN                                                                                                                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=145828.35..149193.26 rows=1310 width=240) (actual time=877.201..900.030 rows=8149 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.018..8.351 rows=100000 loops=1)
   ->  Hash  (cost=145811.97..145811.97 rows=1310 width=212) (actual time=877.169..877.171 rows=8149 loops=1)
         Buckets: 8192 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 2099kB
         ->  Merge Join  (cost=144692.26..145811.97 rows=1310 width=212) (actual time=868.766..874.250 rows=8160 loops=1)
               Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
               ->  Sort  (cost=143629.95..143633.22 rows=1310 width=184) (actual time=868.656..869.496 rows=8161 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: quicksort  Memory: 2365kB
                     ->  Hash Join  (cost=498.91..143562.09 rows=1310 width=184) (actual time=6.428..862.971 rows=8179 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=18883 width=132) (actual time=0.050..847.336 rows=30420 loops=1)
                                 Filter: ((list_price <= '123.08'::double precision) AND (list_price >= '2.02'::double precision) AND (ext_list_price <= '8813.77'::double precision) AND (ext_list_price >= '2606.78'::double precision) AND (net_paid <= '109.52'::double precision) AND (net_paid >= '1'::double precision) AND (net_profit <= '-162.36'::double precision) AND (net_profit >= '-5178.02'::double precision))
                                 Rows Removed by Filter: 2849984
                           ->  Hash  (cost=456.00..456.00 rows=3433 width=52) (actual time=5.915..5.915 rows=4871 loops=1)
                                 Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 483kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=3433 width=52) (actual time=0.009..4.731 rows=4871 loops=1)
                                       Filter: ((current_price <= '7.47'::double precision) AND (current_price >= '4'::double precision))
                                       Rows Removed by Filter: 13129
               ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.102..0.462 rows=8137 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 48kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.013..0.052 rows=300 loops=1)
 Planning Time: 495.884 ms
 Execution Time: 900.415 ms
(26 rows)



 Hash Join  (cost=2900.06..163597.60 rows=412 width=244) (actual time=38.622..615.885 rows=1427 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=2686.38..161573.47 rows=400 width=212) (actual time=38.578..615.234 rows=1428 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=769.29..158135.19 rows=400 width=184) (actual time=5.215..575.065 rows=1431 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=480 width=132) (actual time=0.618..569.067 rows=2745 loops=1)
                     Filter: ((quantity <= '48'::double precision) AND (quantity >= '15'::double precision) AND (list_price <= '107.48'::double precision) AND (list_price >= '99.91'::double precision) AND (ext_wholesale_cost <= '2915.84'::double precision) AND (ext_wholesale_cost >= '1378.26'::double precision) AND (ext_list_price <= '6504.12'::double precision) AND (ext_list_price >= '687.31'::double precision) AND (net_profit <= '-5.7'::double precision) AND (net_profit >= '-343.1'::double precision))
                     Rows Removed by Filter: 2877659
               ->  Hash  (cost=456.00..456.00 rows=25063 width=52) (actual time=4.555..4.556 rows=9178 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 1045kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=25063 width=52) (actual time=0.007..3.247 rows=9178 loops=1)
                           Filter: ((brand_id <= '10003002'::double precision) AND (brand_id >= '5001001'::double precision))
                           Rows Removed by Filter: 8822
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=33.332..33.333 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..11.356 rows=100000 loops=1)
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.021..0.021 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.012..0.015 rows=12 loops=1)
 Planning Time: 507.637 ms
 Execution Time: 616.030 ms
(22 rows)

                                                                                                                                                                         QUERY PLAN                                                                                                                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=133437.37..141137.56 rows=2361 width=244) (actual time=717.751..717.757 rows=0 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=133241.28..139670.89 rows=2453 width=216) (actual time=717.635..717.639 rows=0 loops=1)
         Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
         ->  Sort  (cost=260.76..269.92 rows=3662 width=32) (actual time=0.016..0.018 rows=1 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..44.00 rows=3662 width=32) (actual time=0.008..0.010 rows=4 loops=1)
                     Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 226) AND (company_id >= 175) AND (tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.03'::double precision))
                     Rows Removed by Filter: 8
         ->  Materialize  (cost=132980.52..133084.25 rows=20746 width=184) (actual time=717.616..717.619 rows=0 loops=1)
               ->  Sort  (cost=132980.52..133032.38 rows=20746 width=184) (actual time=717.614..717.616 rows=0 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: quicksort  Memory: 25kB
                     ->  Hash Join  (cost=584.71..129648.51 rows=20746 width=184) (actual time=717.609..717.611 rows=0 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=53692 width=132) (actual time=717.608..717.608 rows=0 loops=1)
                                 Filter: ((ext_discount_amt <= '795.16'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '289.8'::double precision) AND (ext_wholesale_cost >= '-1'::double precision) AND (ext_list_price <= '3939.36'::double precision) AND (ext_list_price >= '1486.92'::double precision))
                                 Rows Removed by Filter: 2880404
                           ->  Hash  (cost=456.00..456.00 rows=10297 width=52) (never executed)
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=10297 width=52) (never executed)
                                       Filter: ((manufact_id <= '275'::double precision) AND (manufact_id >= '12'::double precision))
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.095..0.095 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.048 rows=300 loops=1)
 Planning Time: 499.637 ms
 Execution Time: 717.845 ms
(27 rows)

                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=595.82..86359.69 rows=329 width=244) (actual time=3.803..734.525 rows=3615 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=557.56..86256.73 rows=340 width=212) (actual time=3.258..731.893 rows=10966 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..376.210 rows=2880404 loops=1)
         ->  Hash  (cost=553.36..553.36 rows=336 width=80) (actual time=3.107..3.109 rows=52 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 15kB
               ->  Hash Join  (cost=24.64..553.36 rows=336 width=80) (actual time=0.116..3.090 rows=52 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=1359 width=52) (actual time=0.007..2.543 rows=3593 loops=1)
                           Filter: ((category_id <= '3'::double precision) AND (category_id >= '2'::double precision))
                           Rows Removed by Filter: 14407
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.096..0.097 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.006..0.058 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=30.40..30.40 rows=629 width=32) (actual time=0.020..0.021 rows=4 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=629 width=32) (actual time=0.014..0.017 rows=4 loops=1)
               Filter: ((floor_space <= 7557959) AND (floor_space >= 5285950))
               Rows Removed by Filter: 8
 Planning Time: 517.423 ms
 Execution Time: 734.778 ms
(24 rows)

                                                                                                                                                                                                                     QUERY PLAN                                                                                                                                                                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=150675.90..157090.50 rows=681 width=244) (actual time=784.101..805.941 rows=27841 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Seq Scan on item  (cost=0.00..456.00 rows=30821 width=52) (actual time=0.016..2.491 rows=11362 loops=1)
         Filter: ((brand_id <= '10010003'::double precision) AND (brand_id >= '4002001'::double precision))
         Rows Removed by Filter: 6638
   ->  Hash  (cost=150605.75..150605.75 rows=5611 width=192) (actual time=783.929..783.931 rows=42890 loops=1)
         Buckets: 32768 (originally 8192)  Batches: 4 (originally 1)  Memory Usage: 3841kB
         ->  Merge Join  (cost=145811.18..150605.75 rows=5611 width=192) (actual time=735.807..762.024 rows=43934 loops=1)
               Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
               ->  Sort  (cost=144748.87..144762.90 rows=5611 width=164) (actual time=735.698..743.033 rows=43935 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: external merge  Disk: 7672kB
                     ->  Merge Join  (cost=143458.09..144399.45 rows=5611 width=164) (actual time=692.611..709.036 rows=43994 loops=1)
                           Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                           ->  Sort  (cost=132.82..137.53 rows=1883 width=32) (actual time=0.014..0.017 rows=5 loops=1)
                                 Sort Key: ((store.store_sk)::double precision)
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Seq Scan on store  (cost=0.00..30.40 rows=1883 width=32) (actual time=0.005..0.008 rows=6 loops=1)
                                       Filter: ((number_employees <= 294) AND (number_employees >= 271))
                                       Rows Removed by Filter: 6
                           ->  Sort  (cost=143325.26..143339.99 rows=5891 width=132) (actual time=675.298..691.320 rows=131316 loops=1)
                                 Sort Key: store_sales.store_sk
                                 Sort Method: external sort  Disk: 19352kB
                                 ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=5891 width=132) (actual time=0.038..602.919 rows=131718 loops=1)
                                       Filter: ((list_price <= '90.1'::double precision) AND (list_price >= '48.82'::double precision) AND (ext_discount_amt <= '217.71'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (net_paid_inc_tax <= '1014.59'::double precision) AND (net_paid_inc_tax >= '286.66'::double precision) AND (net_profit <= '6.3'::double precision) AND (net_profit >= '-3783.88'::double precision))
                                       Rows Removed by Filter: 2748686
               ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.105..2.100 rows=43782 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 48kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.019..0.059 rows=300 loops=1)
 Planning Time: 525.398 ms
 Execution Time: 812.610 ms
(32 rows)

                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=153166.76..292356.45 rows=112785 width=244) (actual time=2191.761..2456.424 rows=303286 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.027..0.032 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.015..0.018 rows=12 loops=1)
   ->  Materialize  (cost=152086.84..152632.82 rows=109196 width=212) (actual time=2191.724..2359.260 rows=303287 loops=1)
         ->  Sort  (cost=152086.84..152359.83 rows=109196 width=212) (actual time=2191.720..2253.514 rows=303287 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 70008kB
               ->  Hash Join  (cost=110961.43..131749.02 rows=109196 width=212) (actual time=1639.440..1990.071 rows=307085 loops=1)
                     Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=85141 width=28) (actual time=0.008..12.915 rows=47564 loops=1)
                           Filter: ((birth_year <= '1970'::double precision) AND (birth_year >= '1937'::double precision))
                           Rows Removed by Filter: 52436
                     ->  Hash  (cost=106250.50..106250.50 rows=124314 width=184) (actual time=1637.864..1637.866 rows=643340 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 64 (originally 8)  Memory Usage: 3841kB
                           ->  Hash Join  (cost=477.01..106250.50 rows=124314 width=184) (actual time=3.171..1176.868 rows=659008 loops=1)
                                 Hash Cond: (store_sales.item_sk = item.item_sk)
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1285321 width=132) (actual time=0.039..732.006 rows=2219186 loops=1)
                                       Filter: ((ext_coupon_amt <= '2.47'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                       Rows Removed by Filter: 661218
                                 ->  Hash  (cost=456.00..456.00 rows=1681 width=52) (actual time=3.123..3.124 rows=5384 loops=1)
                                       Buckets: 8192 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 527kB
                                       ->  Seq Scan on item  (cost=0.00..456.00 rows=1681 width=52) (actual time=0.005..2.442 rows=5384 loops=1)
                                             Filter: ((category_id <= '3'::double precision) AND (category_id >= '1'::double precision))
                                             Rows Removed by Filter: 12616
 Planning Time: 564.280 ms
 Execution Time: 2494.314 ms
(29 rows)

                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=168813.90..311752.58 rows=143217 width=244) (actual time=861.455..866.532 rows=7774 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=164389.31..164465.99 rows=30672 width=212) (actual time=853.583..860.380 rows=38936 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 10888kB
         ->  Hash Join  (cost=1220.88..158957.03 rows=30672 width=212) (actual time=8.223..813.920 rows=47950 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1122217 width=132) (actual time=0.056..581.383 rows=2211665 loops=1)
                     Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '-1'::double precision))
                     Rows Removed by Filter: 668739
               ->  Hash  (cost=1204.43..1204.43 rows=1316 width=80) (actual time=8.146..8.148 rows=291 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 51kB
                     ->  Hash Join  (cost=24.64..1204.43 rows=1316 width=80) (actual time=0.226..7.977 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.009..3.301 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.196..0.197 rows=291 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 35kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.009..0.127 rows=293 loops=1)
                                       Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                       Rows Removed by Filter: 7
   ->  Sort  (cost=4424.59..4563.75 rows=55662 width=32) (actual time=0.019..0.369 rows=7775 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=55662 width=32) (actual time=0.010..0.011 rows=2 loops=1)
               Filter: ((number_employees <= 294) AND (number_employees >= 229) AND (tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.08'::double precision))
               Rows Removed by Filter: 10
 Planning Time: 546.129 ms
 Execution Time: 868.769 ms
(28 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=159455.52..176756.37 rows=14179 width=244) (actual time=556.320..558.555 rows=3728 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=158375.61..158409.43 rows=13531 width=212) (actual time=556.289..556.586 rows=3729 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 1107kB
         ->  Hash Join  (cost=4285.45..157447.13 rows=13531 width=212) (actual time=6.950..553.827 rows=3805 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=233953 width=132) (actual time=0.060..497.766 rows=491001 loops=1)
                     Filter: ((ext_sales_price <= '2265.2'::double precision) AND (ext_sales_price >= '1158.26'::double precision))
                     Rows Removed by Filter: 2389403
               ->  Hash  (cost=4203.22..4203.22 rows=6578 width=80) (actual time=6.732..6.734 rows=101 loops=1)
                     Buckets: 8192  Batches: 1  Memory Usage: 76kB
                     ->  Hash Join  (cost=196.09..4203.22 rows=6578 width=80) (actual time=0.325..6.670 rows=101 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=6857 width=52) (actual time=0.008..5.294 rows=5785 loops=1)
                                 Filter: ((brand_id <= '7014010'::double precision) AND (brand_id >= '4003002'::double precision))
                                 Rows Removed by Filter: 12215
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.177..0.178 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.008..0.061 rows=300 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.023..0.184 rows=3733 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
 Planning Time: 528.696 ms
 Execution Time: 558.771 ms
(26 rows)

                                                                                                                                                               QUERY PLAN                                                                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=139730.89..141417.79 rows=1361 width=244) (actual time=714.269..715.253 rows=1711 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=138650.98..138654.27 rows=1319 width=212) (actual time=714.240..714.327 rows=1712 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 505kB
         ->  Hash Join  (cost=129845.23..138582.60 rows=1319 width=212) (actual time=693.516..713.555 rows=1717 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=80298 width=28) (actual time=0.036..9.470 rows=4180 loops=1)
                     Filter: ((birth_year <= '1947'::double precision) AND (birth_year >= '1945'::double precision))
                     Rows Removed by Filter: 95820
               ->  Hash  (cost=129760.33..129760.33 rows=6792 width=184) (actual time=693.204..693.206 rows=41007 loops=1)
                     Buckets: 32768 (originally 8192)  Batches: 4 (originally 1)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=569.24..129760.33 rows=6792 width=184) (actual time=7.990..665.784 rows=41235 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=132934 width=132) (actual time=0.062..625.973 rows=111306 loops=1)
                                 Filter: ((quantity <= '70'::double precision) AND (quantity >= '26'::double precision) AND (ext_sales_price <= '743.06'::double precision) AND (ext_sales_price >= '483.69'::double precision) AND (ext_list_price <= '11231.64'::double precision) AND (ext_list_price >= '140.5'::double precision))
                                 Rows Removed by Filter: 2769098
                           ->  Hash  (cost=546.00..546.00 rows=1859 width=52) (actual time=7.916..7.917 rows=6545 loops=1)
                                 Buckets: 8192 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 627kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=1859 width=52) (actual time=0.008..6.260 rows=6545 loops=1)
                                       Filter: ((brand_id <= '7011004'::double precision) AND (brand_id >= '2001001'::double precision) AND (class_id <= '7'::double precision) AND (class_id >= '2'::double precision))
                                       Rows Removed by Filter: 11455
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.022..0.094 rows=1716 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
 Planning Time: 491.357 ms
 Execution Time: 715.419 ms
(28 rows)

                                                                                                                                                                  QUERY PLAN                                                                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=147319.79..150540.40 rows=10007 width=244) (actual time=864.131..928.305 rows=12619 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Merge Join  (cost=147281.03..148937.03 rows=7747 width=212) (actual time=864.096..922.494 rows=37647 loops=1)
         Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
         ->  Sort  (cost=12207.33..12441.55 rows=93691 width=28) (actual time=29.204..33.154 rows=40593 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external merge  Disk: 1984kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=93691 width=28) (actual time=0.009..17.253 rows=40593 loops=1)
                     Filter: ((birth_month <= '8'::double precision) AND (birth_month >= '4'::double precision))
                     Rows Removed by Filter: 59407
         ->  Materialize  (cost=135073.70..135240.87 rows=33434 width=184) (actual time=834.882..866.041 rows=92658 loops=1)
               ->  Sort  (cost=135073.70..135157.28 rows=33434 width=184) (actual time=834.878..854.087 rows=92658 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 18416kB
                     ->  Hash Join  (cost=534.41..129589.84 rows=33434 width=184) (actual time=4.672..748.977 rows=93215 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=69126 width=132) (actual time=0.036..701.128 rows=148874 loops=1)
                                 Filter: ((ext_discount_amt <= '257.21'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '1165.94'::double precision) AND (ext_sales_price >= '98.46'::double precision) AND (net_profit <= '117'::double precision) AND (net_profit >= '-28.28'::double precision))
                                 Rows Removed by Filter: 2731530
                           ->  Hash  (cost=456.00..456.00 rows=6273 width=52) (actual time=4.625..4.626 rows=11277 loops=1)
                                 Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 1097kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=6273 width=52) (actual time=0.006..2.981 rows=11277 loops=1)
                                       Filter: ((class_id <= '4'::double precision) AND (class_id >= '1'::double precision))
                                       Rows Removed by Filter: 6723
   ->  Hash  (cost=30.40..30.40 rows=669 width=32) (actual time=0.020..0.021 rows=3 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=669 width=32) (actual time=0.014..0.017 rows=3 loops=1)
               Filter: ((market_id <= 8) AND (market_id >= 8))
               Rows Removed by Filter: 9
 Planning Time: 509.066 ms
 Execution Time: 932.736 ms
(31 rows)

                                                                                                                             QUERY PLAN                                                                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=402337.55..453984.67 rows=204505 width=244) (actual time=1226.043..1532.371 rows=51616 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=401781.46..433068.96 rows=204505 width=192) (actual time=1218.585..1478.083 rows=390228 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.009..8.889 rows=100000 loops=1)
         ->  Hash  (cost=394431.15..394431.15 rows=204505 width=164) (actual time=1218.516..1218.518 rows=390228 loops=1)
               Buckets: 32768 (originally 32768)  Batches: 32 (originally 16)  Memory Usage: 3841kB
               ->  Merge Join  (cost=145730.46..394431.15 rows=204505 width=164) (actual time=756.550..1027.889 rows=392598 loops=1)
                     Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                     ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.019..0.024 rows=11 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.006..0.009 rows=12 loops=1)
                     ->  Materialize  (cost=144650.55..145626.44 rows=195179 width=132) (actual time=756.523..926.622 rows=392599 loops=1)
                           ->  Sort  (cost=144650.55..145138.49 rows=195179 width=132) (actual time=756.519..822.107 rows=392599 loops=1)
                                 Sort Key: store_sales.store_sk
                                 Sort Method: external merge  Disk: 56328kB
                                 ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=195179 width=132) (actual time=0.043..587.402 rows=397269 loops=1)
                                       Filter: ((ext_wholesale_cost <= '4801.68'::double precision) AND (ext_wholesale_cost >= '3166.75'::double precision) AND (ext_list_price <= '8435.52'::double precision) AND (ext_list_price >= '211.77'::double precision))
                                       Rows Removed by Filter: 2483135
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=6.252..6.252 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.017..2.552 rows=18000 loops=1)
 Planning Time: 541.211 ms
 Execution Time: 1555.646 ms
(25 rows)

                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=924.63..86490.72 rows=11451 width=244) (actual time=4.274..673.602 rows=30542 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=883.36..86378.89 rows=720 width=212) (actual time=4.230..659.979 rows=62181 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.043..322.614 rows=2880404 loops=1)
         ->  Hash  (cost=874.48..874.48 rows=711 width=80) (actual time=4.177..4.178 rows=290 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 42kB
               ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.118..4.091 rows=291 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.786 rows=18000 loops=1)
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.099..0.100 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.008..0.061 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=37.20..37.20 rows=325 width=32) (actual time=0.036..0.036 rows=7 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=325 width=32) (actual time=0.028..0.031 rows=7 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 226) AND (company_id >= 27))
               Rows Removed by Filter: 5
 Planning Time: 554.425 ms
 Execution Time: 674.880 ms
(22 rows)

                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=130629.51..132716.83 rows=9170 width=244) (actual time=2154.677..2234.407 rows=120984 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=130227.55..130237.93 rows=4149 width=212) (actual time=2105.378..2163.384 rows=301173 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 83104kB
         ->  Hash Join  (cost=119502.20..129978.23 rows=4149 width=212) (actual time=1466.866..1857.539 rows=363666 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=83014 width=28) (actual time=0.021..12.706 rows=47597 loops=1)
                     Filter: ((birth_year <= '1961'::double precision) AND (birth_year >= '1928'::double precision))
                     Rows Removed by Filter: 52403
               ->  Hash  (cost=118426.71..118426.71 rows=28359 width=184) (actual time=1466.789..1466.792 rows=761416 loops=1)
                     Buckets: 32768 (originally 32768)  Batches: 64 (originally 2)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=509.40..118426.71 rows=28359 width=184) (actual time=7.687..1012.727 rows=770613 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=614546 width=132) (actual time=0.051..701.657 rows=1337518 loops=1)
                                 Filter: ((list_price <= '89.93'::double precision) AND (list_price >= '17.41'::double precision) AND (net_profit <= '1474.08'::double precision) AND (net_profit >= '-5535.01'::double precision))
                                 Rows Removed by Filter: 1542886
                           ->  Hash  (cost=456.00..456.00 rows=4272 width=52) (actual time=7.616..7.617 rows=10348 loops=1)
                                 Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 1017kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=4272 width=52) (actual time=0.008..5.112 rows=10348 loops=1)
                                       Filter: ((current_price <= '5.19'::double precision) AND (current_price >= '0.35'::double precision))
                                       Rows Removed by Filter: 7652
   ->  Sort  (cost=401.96..416.78 rows=5929 width=32) (actual time=0.043..5.292 rows=120987 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=5929 width=32) (actual time=0.021..0.024 rows=5 loops=1)
               Filter: ((floor_space <= 9026222) AND (floor_space >= 6995995))
               Rows Removed by Filter: 7
 Planning Time: 468.495 ms
 Execution Time: 2254.651 ms
(30 rows)

                                                                                                                                                                                                     QUERY PLAN                                                                                                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=150344.45..166417.18 rows=9185 width=244) (actual time=598.074..598.194 rows=200 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=147693.57..147707.37 rows=5520 width=212) (actual time=598.049..598.066 rows=319 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 109kB
         ->  Merge Join  (cost=147181.72..147350.49 rows=5520 width=212) (actual time=580.231..597.920 rows=319 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=144398.41..144412.21 rows=5520 width=184) (actual time=527.636..527.667 rows=320 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: quicksort  Memory: 110kB
                     ->  Hash Join  (cost=556.09..144055.32 rows=5520 width=184) (actual time=12.155..527.431 rows=321 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=5453 width=132) (actual time=0.513..517.372 rows=3348 loops=1)
                                 Filter: ((quantity <= '21'::double precision) AND (quantity >= '6'::double precision) AND (list_price <= '99.03'::double precision) AND (list_price >= '97.7'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '-1'::double precision) AND (ext_coupon_amt <= '33.85'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                 Rows Removed by Filter: 2877056
                           ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=9.037..9.037 rows=17954 loops=1)
                                 Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                                 ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.007..3.325 rows=18000 loops=1)
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=52.531..61.701 rows=99446 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.012..13.061 rows=100000 loops=1)
   ->  Sort  (cost=2650.88..2737.74 rows=34744 width=32) (actual time=0.020..0.029 rows=205 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=34744 width=32) (actual time=0.008..0.013 rows=10 loops=1)
               Filter: ((number_employees <= 294) AND (number_employees >= 229))
               Rows Removed by Filter: 2
 Planning Time: 508.126 ms
 Execution Time: 599.103 ms
(30 rows)

                                                                                                        QUERY PLAN                                                                                                        
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=90602.18..93307.13 rows=4909 width=240) (actual time=2722.323..3924.882 rows=32237 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=90406.09..90568.80 rows=4909 width=212) (actual time=2721.777..3787.499 rows=1505100 loops=1)
         Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
         ->  Sort  (cost=87622.78..87635.05 rows=4909 width=184) (actual time=2667.106..2957.897 rows=1505101 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: external merge  Disk: 301200kB
               ->  Hash Join  (cost=606.58..87321.83 rows=4909 width=184) (actual time=9.333..1077.111 rows=1542617 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.046..339.747 rows=2880404 loops=1)
                     ->  Hash  (cost=546.00..546.00 rows=4846 width=52) (actual time=9.263..9.264 rows=7021 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 668kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=4846 width=52) (actual time=0.012..7.251 rows=7027 loops=1)
                                 Filter: ((brand_id <= '10009008'::double precision) AND (brand_id >= '5002001'::double precision) AND (category_id <= '8'::double precision) AND (category_id >= '1'::double precision))
                                 Rows Removed by Filter: 10973
         ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.660..200.790 rows=1520837 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external sort  Disk: 5216kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.020..13.114 rows=100000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.191..0.191 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.019..0.083 rows=300 loops=1)
 Planning Time: 541.007 ms
 Execution Time: 3976.600 ms
(24 rows)



 Merge Join  (cost=180289.97..181269.56 rows=75 width=244) (actual time=579.714..580.094 rows=588 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=179323.26..179325.39 rows=854 width=212) (actual time=579.696..579.754 rows=1197 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 366kB
         ->  Hash Join  (cost=178825.84..179281.68 rows=854 width=212) (actual time=574.389..579.192 rows=1197 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=178269.76..178714.82 rows=883 width=160) (actual time=569.861..574.078 rows=1197 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=171960.81..171969.42 rows=3444 width=132) (actual time=557.053..557.941 rows=7319 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: quicksort  Memory: 2138kB
                           ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=3444 width=132) (actual time=0.112..554.123 rows=7331 loops=1)
                                 Filter: ((quantity <= '91'::double precision) AND (quantity >= '72'::double precision) AND (list_price <= '36.84'::double precision) AND (list_price >= '33.23'::double precision) AND (ext_discount_amt <= '256.61'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '4206'::double precision) AND (ext_wholesale_cost >= '979.68'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '7.92'::double precision) AND (net_profit >= '-2392.77'::double precision))
                                 Rows Removed by Filter: 2873073
                     ->  Sort  (cost=6308.94..6439.20 rows=52102 width=28) (actual time=12.798..13.489 rows=16261 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: quicksort  Memory: 1650kB
                           ->  Seq Scan on customer  (cost=0.00..2227.00 rows=52102 width=28) (actual time=0.013..10.517 rows=16204 loops=1)
                                 Filter: ((birth_month <= '9'::double precision) AND (birth_month >= '8'::double precision))
                                 Rows Removed by Filter: 83796
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.502..4.503 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.013..1.915 rows=18000 loops=1)
   ->  Sort  (cost=966.71..1000.79 rows=13634 width=32) (actual time=0.014..0.041 rows=590 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=13634 width=32) (actual time=0.007..0.009 rows=6 loops=1)
               Filter: ((market_id <= 6) AND (market_id >= 2))
               Rows Removed by Filter: 6
 Planning Time: 509.112 ms
 Execution Time: 580.206 ms
(32 rows)

                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=89987.47..92970.63 rows=11348 width=244) (actual time=1653.161..1689.205 rows=54537 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=89332.73..89342.26 rows=3813 width=212) (actual time=1594.725..1645.889 rows=274175 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 76328kB
         ->  Merge Join  (cost=88954.04..89105.89 rows=3813 width=212) (actual time=1089.124..1350.076 rows=337374 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=86170.73..86180.26 rows=3813 width=184) (actual time=1032.569..1110.996 rows=337375 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 68104kB
                     ->  Hash Join  (cost=502.99..85943.89 rows=3813 width=184) (actual time=2.676..721.074 rows=353216 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.044..334.419 rows=2880404 loops=1)
                           ->  Hash  (cost=456.00..456.00 rows=3759 width=52) (actual time=2.614..2.615 rows=2150 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 217kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=3759 width=52) (actual time=0.008..2.344 rows=2150 loops=1)
                                       Filter: ((class_id <= '15'::double precision) AND (class_id >= '12'::double precision))
                                       Rows Removed by Filter: 15850
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=56.545..91.909 rows=353102 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.019..13.390 rows=100000 loops=1)
   ->  Sort  (cost=654.74..677.92 rows=9269 width=32) (actual time=0.033..2.408 rows=54538 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=9269 width=32) (actual time=0.021..0.022 rows=2 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 811) AND (company_id >= 175) AND (tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.08'::double precision))
               Rows Removed by Filter: 10
 Planning Time: 496.411 ms
 Execution Time: 1717.511 ms
(30 rows)

                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=135603.05..248349.30 rows=111874 width=244) (actual time=685.904..687.117 rows=2111 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1041.25..1077.78 rows=14613 width=32) (actual time=0.038..0.040 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.018..0.025 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
   ->  Materialize  (cost=134561.79..135021.92 rows=92025 width=212) (actual time=685.858..686.390 rows=2112 loops=1)
         ->  Sort  (cost=134561.79..134791.86 rows=92025 width=212) (actual time=685.853..686.012 rows=2112 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 662kB
               ->  Hash Join  (cost=2238.01..117534.98 rows=92025 width=212) (actual time=5.082..684.620 rows=2129 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=213781 width=132) (actual time=0.062..580.820 rows=1315971 loops=1)
                           Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '-1'::double precision) AND (ext_sales_price <= '3235.87'::double precision) AND (ext_sales_price >= '197.12'::double precision))
                           Rows Removed by Filter: 1564433
                     ->  Hash  (cost=2202.11..2202.11 rows=2872 width=80) (actual time=4.816..4.819 rows=21 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 35kB
                           ->  Hash Join  (cost=196.09..2202.11 rows=2872 width=80) (actual time=0.261..4.804 rows=21 loops=1)
                                 Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=2993 width=52) (actual time=0.008..4.401 rows=1164 loops=1)
                                       Filter: ((current_price <= '7.82'::double precision) AND (current_price >= '6.78'::double precision))
                                       Rows Removed by Filter: 16836
                                 ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.144..0.145 rows=293 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                       ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.057 rows=300 loops=1)
 Planning Time: 542.060 ms
 Execution Time: 687.290 ms
(28 rows)

                                                                                                                                                       QUERY PLAN                                                                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=129675.17..132226.52 rows=19 width=244) (actual time=530.238..538.401 rows=3 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=64845 width=28) (actual time=0.021..10.645 rows=41393 loops=1)
         Filter: ((birth_day <= '18'::double precision) AND (birth_day >= '6'::double precision))
         Rows Removed by Filter: 58607
   ->  Hash  (cost=129675.01..129675.01 rows=13 width=216) (actual time=524.444..524.446 rows=8 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 10kB
         ->  Hash Join  (cost=671.89..129675.01 rows=13 width=216) (actual time=82.955..524.423 rows=8 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Hash Join  (cost=558.38..129251.65 rows=187 width=184) (actual time=43.737..524.368 rows=45 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=32086 width=132) (actual time=4.181..517.857 rows=339 loops=1)
                           Filter: ((list_price <= '51.14'::double precision) AND (list_price >= '-1'::double precision) AND (ext_sales_price <= '153.08'::double precision) AND (ext_sales_price >= '152.36'::double precision) AND (ext_tax <= '185.06'::double precision) AND (ext_tax >= '7.36'::double precision))
                           Rows Removed by Filter: 2880065
                     ->  Hash  (cost=546.00..546.00 rows=990 width=52) (actual time=6.356..6.356 rows=2999 loops=1)
                           Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 290kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=990 width=52) (actual time=0.010..5.652 rows=2999 loops=1)
                                 Filter: ((current_price <= '4.24'::double precision) AND (current_price >= '0.54'::double precision) AND (manufact_id <= '357'::double precision) AND (manufact_id >= '146'::double precision))
                                 Rows Removed by Filter: 15001
               ->  Hash  (cost=44.00..44.00 rows=5561 width=32) (actual time=0.016..0.016 rows=2 loops=1)
                     Buckets: 8192  Batches: 1  Memory Usage: 65kB
                     ->  Seq Scan on store  (cost=0.00..44.00 rows=5561 width=32) (actual time=0.007..0.012 rows=2 loops=1)
                           Filter: ((number_employees <= 294) AND (number_employees >= 236) AND (market_id <= 10) AND (market_id >= 8) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
                           Rows Removed by Filter: 10
 Planning Time: 548.623 ms
 Execution Time: 538.501 ms
(26 rows)

                                                                                                       QUERY PLAN                                                                                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=117261.76..122575.02 rows=4295 width=244) (actual time=567.711..567.717 rows=2 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=116181.85..116192.24 rows=4155 width=212) (actual time=567.677..567.680 rows=2 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 25kB
         ->  Hash Join  (cost=711.35..115932.09 rows=4155 width=212) (actual time=249.757..567.668 rows=2 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=91174 width=132) (actual time=0.058..557.536 rows=39863 loops=1)
                     Filter: ((ext_list_price <= '9318'::double precision) AND (ext_list_price >= '3644.81'::double precision) AND (net_paid <= '190.63'::double precision) AND (net_paid >= '32.67'::double precision))
                     Rows Removed by Filter: 2840541
               ->  Hash  (cost=705.50..705.50 rows=468 width=80) (actual time=6.292..6.294 rows=56 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 15kB
                     ->  Hash Join  (cost=24.64..705.50 rows=468 width=80) (actual time=0.257..6.262 rows=56 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=4202 width=52) (actual time=0.009..5.231 rows=3864 loops=1)
                                 Filter: ((manufact_id <= '443'::double precision) AND (manufact_id >= '269'::double precision))
                                 Rows Removed by Filter: 14136
                           ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.195..0.195 rows=291 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 35kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.009..0.112 rows=293 loops=1)
                                       Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                       Rows Removed by Filter: 7
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.025..0.025 rows=4 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
 Planning Time: 531.080 ms
 Execution Time: 567.807 ms
(28 rows)

                                                                                                               QUERY PLAN                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=132251.28..136913.85 rows=3713 width=244) (actual time=579.613..588.282 rows=3 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=43648 width=28) (actual time=0.028..9.388 rows=8195 loops=1)
         Filter: ((birth_month <= '7'::double precision) AND (birth_month >= '7'::double precision))
         Rows Removed by Filter: 91805
   ->  Hash  (cost=132188.23..132188.23 rows=5044 width=216) (actual time=578.095..578.097 rows=22 loops=1)
         Buckets: 8192  Batches: 1  Memory Usage: 70kB
         ->  Merge Join  (cost=128415.22..132188.23 rows=5044 width=216) (actual time=578.050..578.084 rows=22 loops=1)
               Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
               ->  Sort  (cost=339.25..351.56 rows=4925 width=32) (actual time=0.022..0.023 rows=3 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..37.20 rows=4925 width=32) (actual time=0.008..0.013 rows=4 loops=1)
                           Filter: ((market_id <= 7) AND (market_id >= 4) AND (devision_id <= 1) AND (devision_id >= 1))
                           Rows Removed by Filter: 8
               ->  Sort  (cost=128075.97..128098.66 rows=9075 width=184) (actual time=578.010..578.027 rows=160 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: quicksort  Memory: 67kB
                     ->  Hash Join  (cost=601.27..127479.37 rows=9075 width=184) (actual time=25.158..577.889 rows=160 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=142592 width=132) (actual time=0.060..570.255 rows=12972 loops=1)
                                 Filter: ((ext_list_price <= '5632.84'::double precision) AND (ext_list_price >= '1111.2'::double precision) AND (net_paid <= '245.69'::double precision) AND (net_paid >= '225.41'::double precision))
                                 Rows Removed by Filter: 2867432
                           ->  Hash  (cost=546.00..546.00 rows=4422 width=52) (actual time=5.770..5.770 rows=714 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 126kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=4422 width=52) (actual time=0.011..5.593 rows=715 loops=1)
                                       Filter: ((current_price <= '88.86'::double precision) AND (current_price >= '2.75'::double precision) AND (class_id <= '15'::double precision) AND (class_id >= '14'::double precision))
                                       Rows Removed by Filter: 17285
 Planning Time: 511.432 ms
 Execution Time: 588.384 ms
(30 rows)

                                                                                                  QUERY PLAN                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=736.93..86341.91 rows=7240 width=244) (actual time=5.718..613.426 rows=540 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=686.64..86251.14 rows=267 width=212) (actual time=5.679..612.946 rows=1653 loops=1)
         Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
         ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.044..330.944 rows=2880404 loops=1)
         ->  Hash  (cost=683.30..683.30 rows=267 width=80) (actual time=5.061..5.064 rows=7 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Hash Join  (cost=24.64..683.30 rows=267 width=80) (actual time=1.374..5.057 rows=7 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=3787 width=52) (actual time=0.017..4.728 rows=473 loops=1)
                           Filter: ((manufact_id <= '159'::double precision) AND (manufact_id >= '147'::double precision))
                           Rows Removed by Filter: 17527
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.204..0.205 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.009..0.128 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=44.00..44.00 rows=503 width=32) (actual time=0.030..0.030 rows=3 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=503 width=32) (actual time=0.020..0.025 rows=3 loops=1)
               Filter: ((market_id <= 2) AND (market_id >= 2) AND (devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 9
 Planning Time: 564.332 ms
 Execution Time: 613.544 ms
(24 rows)

                                                                                                                                                                                                                       QUERY PLAN                                                                                                                                                                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=147545.09..153906.67 rows=3266 width=244) (actual time=682.141..684.707 rows=53 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=147349.00..151954.17 rows=3391 width=216) (actual time=681.852..684.088 rows=4366 loops=1)
         Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
         ->  Sort  (cost=458.73..475.57 rows=6736 width=32) (actual time=0.024..0.025 rows=10 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=6736 width=32) (actual time=0.008..0.013 rows=10 loops=1)
                     Filter: ((floor_space <= 9294113) AND (floor_space >= 5250760))
                     Rows Removed by Filter: 2
         ->  Sort  (cost=146890.27..146910.49 rows=8089 width=184) (actual time=681.819..682.299 rows=5210 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 1578kB
               ->  Hash Join  (cost=617.12..146365.20 rows=8089 width=184) (actual time=8.938..679.346 rows=5216 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=30866 width=132) (actual time=0.126..661.485 rows=55428 loops=1)
                           Filter: ((list_price <= '160.53'::double precision) AND (list_price >= '14.94'::double precision) AND (ext_sales_price <= '3916.44'::double precision) AND (ext_sales_price >= '1436.64'::double precision) AND (ext_list_price <= '10282.64'::double precision) AND (ext_list_price >= '740.6'::double precision) AND (net_paid_inc_tax <= '1070.26'::double precision) AND (net_paid_inc_tax >= '42.02'::double precision))
                           Rows Removed by Filter: 2824976
                     ->  Hash  (cost=546.00..546.00 rows=5690 width=52) (actual time=8.544..8.545 rows=8760 loops=1)
                           Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 881kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=5690 width=52) (actual time=0.007..6.423 rows=8766 loops=1)
                                 Filter: ((brand_id <= '9004001'::double precision) AND (brand_id >= '3004002'::double precision) AND (category_id <= '9'::double precision) AND (category_id >= '3'::double precision))
                                 Rows Removed by Filter: 9234
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.163..0.164 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.018..0.072 rows=300 loops=1)
 Planning Time: 521.343 ms
 Execution Time: 684.810 ms
(28 rows)

                                                                                                                                                                                                              QUERY PLAN                                                                                                                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=155797.21..155928.68 rows=1148 width=240) (actual time=562.194..562.618 rows=410 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=155241.12..155358.11 rows=1187 width=188) (actual time=553.351..553.574 rows=410 loops=1)
         Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
         ->  Sort  (cost=42.77..44.62 rows=740 width=28) (actual time=0.264..0.290 rows=294 loops=1)
               Sort Key: ((promotion.promo_sk)::double precision)
               Sort Method: quicksort  Memory: 47kB
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.013..0.142 rows=294 loops=1)
                     Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                     Rows Removed by Filter: 6
         ->  Sort  (cost=155198.36..155205.12 rows=2704 width=160) (actual time=553.082..553.106 rows=422 loops=1)
               Sort Key: store_sales.promo_sk
               Sort Method: quicksort  Memory: 137kB
               ->  Merge Join  (cost=154253.40..155044.23 rows=2704 width=160) (actual time=550.004..552.857 rows=423 loops=1)
                     Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                     ->  Sort  (cost=10766.14..10968.54 rows=80959 width=28) (actual time=15.106..15.462 rows=5562 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: quicksort  Memory: 627kB
                           ->  Seq Scan on customer  (cost=0.00..2227.00 rows=80959 width=28) (actual time=0.013..14.003 rows=5563 loops=1)
                                 Filter: ((birth_year <= '1950'::double precision) AND (birth_year >= '1947'::double precision))
                                 Rows Removed by Filter: 94437
                     ->  Sort  (cost=143487.25..143507.68 rows=8170 width=132) (actual time=534.871..535.805 rows=7830 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: quicksort  Memory: 2274kB
                           ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=8170 width=132) (actual time=0.102..531.583 rows=7856 loops=1)
                                 Filter: ((ext_wholesale_cost <= '691.02'::double precision) AND (ext_wholesale_cost >= '371.61'::double precision) AND (ext_tax <= '57.31'::double precision) AND (ext_tax >= '22.29'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '-65.12'::double precision) AND (net_profit >= '-143.64'::double precision))
                                 Rows Removed by Filter: 2872548
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=8.816..8.816 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.017..3.571 rows=18000 loops=1)
 Planning Time: 579.549 ms
 Execution Time: 562.746 ms
(32 rows)

                                                                                                                                                                                                                    QUERY PLAN                                                                                                                                                                                                                     
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=149051.24..161758.03 rows=15379 width=244) (actual time=609.986..613.474 rows=6710 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=148009.99..148035.84 rows=10339 width=212) (actual time=609.963..610.314 rows=6711 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 1979kB
         ->  Hash Join  (cost=146974.96..147320.57 rows=10339 width=212) (actual time=582.108..607.141 rows=6727 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=146418.88..146634.05 rows=10693 width=160) (actual time=576.979..599.201 rows=6727 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=143635.56..143661.07 rows=10201 width=132) (actual time=520.603..521.496 rows=6728 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: quicksort  Memory: 1980kB
                           ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=10201 width=132) (actual time=0.116..517.696 rows=6750 loops=1)
                                 Filter: ((list_price <= '83.09'::double precision) AND (list_price >= '65.52'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '368.64'::double precision) AND (ext_sales_price >= '131.7'::double precision) AND (ext_list_price <= '16574.74'::double precision) AND (ext_list_price >= '3281.85'::double precision))
                                 Rows Removed by Filter: 2873654
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=56.366..66.124 rows=100308 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.011..13.076 rows=100000 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.102..5.103 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..2.240 rows=18000 loops=1)
   ->  Sort  (cost=1041.25..1077.78 rows=14613 width=32) (actual time=0.018..0.311 rows=6715 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.008..0.011 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
 Planning Time: 526.586 ms
 Execution Time: 614.602 ms
(29 rows)



 Merge Join  (cost=178447.60..239369.93 rows=49268 width=244) (actual time=1270.824..1483.836 rows=242634 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.026..0.029 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.014..0.018 rows=12 loops=1)
   ->  Materialize  (cost=177367.69..177606.41 rows=47744 width=212) (actual time=1270.790..1405.568 rows=242635 loops=1)
         ->  Sort  (cost=177367.69..177487.05 rows=47744 width=212) (actual time=1270.785..1321.149 rows=242635 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 55528kB
               ->  Hash Join  (cost=167577.53..168760.77 rows=47744 width=212) (actual time=847.913..1106.923 rows=242984 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Merge Join  (cost=167021.44..167602.55 rows=49361 width=160) (actual time=842.990..1027.090 rows=242984 loops=1)
                           Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                           ->  Sort  (cost=164238.13..164355.92 rows=47117 width=132) (actual time=786.595..840.787 rows=242985 loops=1)
                                 Sort Key: store_sales.customer_sk
                                 Sort Method: external merge  Disk: 34808kB
                                 ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=47117 width=132) (actual time=0.050..658.160 rows=243711 loops=1)
                                       Filter: ((ext_discount_amt <= '146.39'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '3300'::double precision) AND (ext_list_price >= '597.72'::double precision) AND (ext_tax <= '81.38'::double precision) AND (ext_tax >= '15.96'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid_inc_tax <= '1011.66'::double precision) AND (net_paid_inc_tax >= '0'::double precision))
                                       Rows Removed by Filter: 2636693
                           ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=56.385..85.024 rows=264351 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: external sort  Disk: 5216kB
                                 ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.016..13.244 rows=100000 loops=1)
                     ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.897..4.898 rows=18000 loops=1)
                           Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..2.105 rows=18000 loops=1)
 Planning Time: 539.448 ms
 Execution Time: 1519.366 ms
(29 rows)

                                                                                                                                                               QUERY PLAN                                                                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=175499.75..201215.21 rows=19913 width=244) (actual time=1204.819..1251.506 rows=63378 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=174943.66..200416.22 rows=19913 width=192) (actual time=1199.616..1226.155 rows=63378 loops=1)
         Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
         ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.018..0.021 rows=11 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.006..0.009 rows=12 loops=1)
         ->  Sort  (cost=173863.75..173913.63 rows=19950 width=160) (actual time=1199.592..1208.525 rows=63379 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external sort  Disk: 11336kB
               ->  Merge Join  (cost=168174.29..172438.95 rows=19950 width=160) (actual time=1060.748..1152.310 rows=63583 loops=1)
                     Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                     ->  Sort  (cost=37997.67..38774.24 rows=310627 width=28) (actual time=16.757..17.625 rows=16721 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: quicksort  Memory: 2075kB
                           ->  Seq Scan on customer  (cost=0.00..2227.00 rows=310627 width=28) (actual time=0.009..13.512 rows=16721 loops=1)
                                 Filter: ((birth_year <= '1935'::double precision) AND (birth_year >= '-1'::double precision))
                                 Rows Removed by Filter: 83279
                     ->  Sort  (cost=130176.62..130232.70 rows=22435 width=132) (actual time=1043.977..1091.797 rows=382654 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external sort  Disk: 56408kB
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=22435 width=132) (actual time=0.040..688.138 rows=385014 loops=1)
                                 Filter: ((sales_price <= '22.24'::double precision) AND (sales_price >= '2.01'::double precision) AND (ext_list_price <= '6384.84'::double precision) AND (ext_list_price >= '1175.16'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                 Rows Removed by Filter: 2495390
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.175..5.176 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.015..2.234 rows=18000 loops=1)
 Planning Time: 498.001 ms
 Execution Time: 1266.166 ms
(30 rows)

                                                                                                            QUERY PLAN                                                                                                             
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=130456.48..230940.42 rows=242310 width=244) (actual time=1692.974..1977.069 rows=321213 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1041.25..1077.78 rows=14613 width=32) (actual time=0.030..0.035 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.016..0.021 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
   ->  Materialize  (cost=129415.23..129825.26 rows=82006 width=212) (actual time=1692.935..1873.973 rows=321214 loops=1)
         ->  Sort  (cost=129415.23..129620.24 rows=82006 width=212) (actual time=1692.931..1759.659 rows=321214 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 74024kB
               ->  Hash Join  (cost=108613.05..114311.59 rows=82006 width=212) (actual time=1178.949..1473.406 rows=325077 loops=1)
                     Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.009..10.645 rows=100000 loops=1)
                     ->  Hash  (cost=105504.97..105504.97 rows=82006 width=184) (actual time=1178.892..1178.894 rows=325077 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 32 (originally 8)  Memory Usage: 3841kB
                           ->  Hash Join  (cost=552.61..105504.97 rows=82006 width=184) (actual time=3.668..987.494 rows=332951 loops=1)
                                 Hash Cond: (store_sales.item_sk = item.item_sk)
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1285688 width=132) (actual time=0.040..673.720 rows=2211665 loops=1)
                                       Filter: ((ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                       Rows Removed by Filter: 668739
                                 ->  Hash  (cost=546.00..546.00 rows=529 width=52) (actual time=3.619..3.620 rows=2710 loops=1)
                                       Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 265kB
                                       ->  Seq Scan on item  (cost=0.00..546.00 rows=529 width=52) (actual time=0.009..3.220 rows=2710 loops=1)
                                             Filter: ((category_id <= '7'::double precision) AND (category_id >= '4'::double precision) AND (manufact_id <= '307'::double precision) AND (manufact_id >= '101'::double precision))
                                             Rows Removed by Filter: 15290
 Planning Time: 532.132 ms
 Execution Time: 2015.640 ms
(28 rows)



 Hash Join  (cost=2043.47..175082.64 rows=2127 width=244) (actual time=4.067..655.540 rows=8904 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=1837.43..174473.10 rows=100 width=212) (actual time=4.019..651.440 rows=13242 loops=1)
         Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
         ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=1442 width=132) (actual time=0.049..637.890 rows=60046 loops=1)
               Filter: ((list_price <= '88.83'::double precision) AND (list_price >= '-1'::double precision) AND (ext_sales_price <= '4225.98'::double precision) AND (ext_sales_price >= '546'::double precision) AND (ext_list_price <= '3675.21'::double precision) AND (ext_list_price >= '1833.48'::double precision) AND (ext_tax <= '146.2'::double precision) AND (ext_tax >= '9.27'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '1835.86'::double precision) AND (net_profit >= '-13.05'::double precision))
               Rows Removed by Filter: 2820358
         ->  Hash  (cost=1810.60..1810.60 rows=2147 width=80) (actual time=3.960..3.962 rows=66 loops=1)
               Buckets: 4096  Batches: 1  Memory Usage: 40kB
               ->  Hash Join  (cost=196.09..1810.60 rows=2147 width=80) (actual time=0.169..3.933 rows=66 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=2237 width=52) (actual time=0.007..3.224 rows=4284 loops=1)
                           Filter: ((manufact_id <= '694'::double precision) AND (manufact_id >= '409'::double precision))
                           Rows Removed by Filter: 13716
                     ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.095..0.096 rows=293 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 147kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.044 rows=300 loops=1)
   ->  Hash  (cost=37.20..37.20 rows=13507 width=32) (actual time=0.024..0.024 rows=8 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=13507 width=32) (actual time=0.015..0.019 rows=8 loops=1)
               Filter: ((company_id <= 877) AND (company_id >= 27) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 4
 Planning Time: 581.022 ms
 Execution Time: 656.010 ms
(24 rows)



 Hash Join  (cost=2903.84..180099.42 rows=639 width=240) (actual time=43.102..662.274 rows=5134 loops=1)
   Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
   ->  Hash Join  (cost=2707.75..177164.32 rows=639 width=212) (actual time=42.978..660.358 rows=5134 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=790.66..172815.75 rows=639 width=184) (actual time=5.191..614.820 rows=5137 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=2410 width=132) (actual time=0.060..605.473 rows=20050 loops=1)
                     Filter: ((quantity <= '73'::double precision) AND (quantity >= '40'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '8740.8'::double precision) AND (ext_wholesale_cost >= '916.5'::double precision) AND (ext_list_price <= '1900.03'::double precision) AND (ext_list_price >= '417.52'::double precision) AND (ext_tax <= '36.96'::double precision) AND (ext_tax >= '5.46'::double precision) AND (net_profit <= '23.34'::double precision) AND (net_profit >= '-1640.79'::double precision))
                     Rows Removed by Filter: 2860354
               ->  Hash  (cost=456.00..456.00 rows=26773 width=52) (actual time=4.600..4.601 rows=12302 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 1314kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=26773 width=52) (actual time=0.006..2.998 rows=12317 loops=1)
                           Filter: ((brand_id <= '9002003'::double precision) AND (brand_id >= '2002001'::double precision))
                           Rows Removed by Filter: 5683
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=33.565..33.565 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..10.293 rows=100000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.100..0.100 rows=300 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.048 rows=300 loops=1)
 Planning Time: 492.063 ms
 Execution Time: 662.594 ms
(22 rows)

                                                                                                                   QUERY PLAN                                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=145186.90..461270.93 rows=30230 width=244) (actual time=740.526..756.489 rows=20915 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=126611.13..126667.46 rows=22533 width=212) (actual time=740.491..745.463 rows=31432 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 7224kB
         ->  Merge Join  (cost=122331.11..122668.53 rows=22533 width=212) (actual time=678.809..716.915 rows=31622 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=119547.80..119604.13 rows=22533 width=184) (actual time=619.804..625.479 rows=31623 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 6312kB
                     ->  Hash Join  (cost=615.41..115913.21 rows=22533 width=184) (actual time=4.786..586.872 rows=32034 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=105542 width=132) (actual time=0.052..564.177 rows=57913 loops=1)
                                 Filter: ((ext_wholesale_cost <= '2323.08'::double precision) AND (ext_wholesale_cost >= '1045.4'::double precision) AND (net_paid <= '393.35'::double precision) AND (net_paid >= '218.12'::double precision))
                                 Rows Removed by Filter: 2822491
                           ->  Hash  (cost=456.00..456.00 rows=12753 width=52) (actual time=4.623..4.624 rows=10002 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 988kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=12753 width=52) (actual time=0.008..3.259 rows=10002 loops=1)
                                       Filter: ((manufact_id <= '498'::double precision) AND (manufact_id >= '109'::double precision))
                                       Rows Removed by Filter: 7998
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=58.996..69.534 rows=105907 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.013..13.291 rows=100000 loops=1)
   ->  Materialize  (cost=18575.77..19413.30 rows=167506 width=32) (actual time=0.029..1.002 rows=20919 loops=1)
         ->  Sort  (cost=18575.77..18994.54 rows=167506 width=32) (actual time=0.027..0.027 rows=8 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=167506 width=32) (actual time=0.016..0.019 rows=8 loops=1)
                     Filter: ((tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
                     Rows Removed by Filter: 4
 Planning Time: 541.047 ms
 Execution Time: 761.248 ms
(33 rows)



 Merge Join  (cost=173756.77..178035.69 rows=1467 width=244) (actual time=665.536..666.918 rows=2141 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=172322.44..172328.91 rows=2589 width=212) (actual time=665.508..665.689 rows=3229 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 955kB
         ->  Hash Join  (cost=171119.46..172175.68 rows=2589 width=212) (actual time=654.264..663.787 rows=3232 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=170563.38..171586.96 rows=2675 width=160) (actual time=649.543..657.613 rows=3232 loops=1)
                     Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                     ->  Sort  (cost=12427.71..12666.80 rows=95637 width=28) (actual time=20.604..22.202 rows=31981 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: quicksort  Memory: 3267kB
                           ->  Seq Scan on customer  (cost=0.00..2227.00 rows=95637 width=28) (actual time=0.009..15.104 rows=31981 loops=1)
                                 Filter: ((birth_month <= '12'::double precision) AND (birth_month >= '9'::double precision))
                                 Rows Removed by Filter: 68019
                     ->  Sort  (cost=158135.67..158164.51 rows=11535 width=132) (actual time=628.922..630.185 rows=10271 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: quicksort  Memory: 3062kB
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=11535 width=132) (actual time=0.174..624.071 rows=10289 loops=1)
                                 Filter: ((quantity <= '89'::double precision) AND (quantity >= '5'::double precision) AND (ext_discount_amt <= '530.17'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '4790.85'::double precision) AND (ext_wholesale_cost >= '3934.65'::double precision) AND (ext_list_price <= '4650.88'::double precision) AND (ext_list_price >= '2064.31'::double precision) AND (ext_tax <= '230.69'::double precision) AND (ext_tax >= '0'::double precision))
                                 Rows Removed by Filter: 2870115
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.695..4.696 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.013..1.946 rows=18000 loops=1)
   ->  Sort  (cost=1434.34..1483.55 rows=19684 width=32) (actual time=0.024..0.120 rows=2145 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=19684 width=32) (actual time=0.012..0.015 rows=9 loops=1)
               Filter: ((number_employees <= 294) AND (number_employees >= 236))
               Rows Removed by Filter: 3
 Planning Time: 501.423 ms
 Execution Time: 667.330 ms
(32 rows)

                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=923.69..152743.18 rows=1253 width=244) (actual time=11.529..814.003 rows=293 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=878.48..151927.26 rows=3991 width=212) (actual time=3.603..813.571 rows=1763 loops=1)
         Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
         ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1285688 width=132) (actual time=0.039..622.523 rows=2211665 loops=1)
               Filter: ((ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
               Rows Removed by Filter: 668739
         ->  Hash  (cost=866.41..866.41 rows=965 width=80) (actual time=3.130..3.132 rows=12 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 10kB
               ->  Hash Join  (cost=24.64..866.41 rows=965 width=80) (actual time=0.533..3.124 rows=12 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=5527 width=52) (actual time=0.006..2.889 rows=864 loops=1)
                           Filter: ((current_price <= '83.27'::double precision) AND (current_price >= '2.41'::double precision) AND (brand_id <= '5004001'::double precision) AND (brand_id >= '5002001'::double precision))
                           Rows Removed by Filter: 17136
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.102..0.103 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.064 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=37.20..37.20 rows=641 width=32) (actual time=0.021..0.021 rows=2 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=641 width=32) (actual time=0.014..0.017 rows=2 loops=1)
               Filter: ((number_employees <= 271) AND (number_employees >= 245) AND (devision_id <= 1) AND (devision_id >= 1))
               Rows Removed by Filter: 10
 Planning Time: 562.140 ms
 Execution Time: 814.090 ms
(26 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=99529.87..100542.82 rows=99560 width=244) (actual time=6095.086..8340.874 rows=2391615 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Merge Join  (cost=98638.04..98821.56 rows=7007 width=192) (actual time=6089.923..7620.448 rows=2238046 loops=1)
         Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
         ->  Sort  (cost=95854.73..95872.25 rows=7007 width=164) (actual time=6031.154..6444.706 rows=2238047 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: external merge  Disk: 393792kB
               ->  Merge Join  (cost=86863.34..95407.17 rows=7007 width=164) (actual time=2755.007..3738.534 rows=2292176 loops=1)
                     Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                     ->  Sort  (cost=454.91..471.61 rows=6682 width=32) (actual time=0.017..0.025 rows=9 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..30.40 rows=6682 width=32) (actual time=0.006..0.010 rows=10 loops=1)
                                 Filter: ((market_id <= 8) AND (market_id >= 2))
                                 Rows Removed by Filter: 2
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2754.981..3121.803 rows=2750371 loops=1)
                           Sort Key: store_sales.store_sk
                           Sort Method: external sort  Disk: 408576kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..335.026 rows=2880404 loops=1)
         ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=58.757..271.617 rows=2251623 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external sort  Disk: 5216kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.020..13.282 rows=100000 loops=1)
   ->  Hash  (cost=456.00..456.00 rows=34866 width=52) (actual time=5.072..5.072 rows=13572 loops=1)
         Buckets: 65536  Batches: 1  Memory Usage: 1679kB
         ->  Seq Scan on item  (cost=0.00..456.00 rows=34866 width=52) (actual time=0.016..3.273 rows=13591 loops=1)
               Filter: ((class_id <= '13'::double precision) AND (class_id >= '2'::double precision))
               Rows Removed by Filter: 4409
 Planning Time: 482.650 ms
 Execution Time: 8548.945 ms
(30 rows)

                                                                                                                 QUERY PLAN                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=125240.60..138755.70 rows=3656 width=244) (actual time=542.359..542.580 rows=217 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=115240.38..115244.62 rows=1696 width=212) (actual time=542.193..542.325 rows=1238 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 382kB
         ->  Hash Join  (cost=525.26..115149.43 rows=1696 width=212) (actual time=4.075..541.233 rows=1254 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Hash Join  (cost=508.51..114994.70 rows=4267 width=184) (actual time=3.799..533.484 rows=59564 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=54561 width=132) (actual time=0.040..491.364 rows=189496 loops=1)
                           Filter: ((list_price <= '58.11'::double precision) AND (list_price >= '30.18'::double precision) AND (ext_wholesale_cost <= '1656.02'::double precision) AND (ext_wholesale_cost >= '589.05'::double precision))
                           Rows Removed by Filter: 2690908
                     ->  Hash  (cost=456.00..456.00 rows=4201 width=52) (actual time=3.743..3.743 rows=5635 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 548kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=4201 width=52) (actual time=0.006..2.921 rows=5635 loops=1)
                                 Filter: ((class_id <= '3'::double precision) AND (class_id >= '2'::double precision))
                                 Rows Removed by Filter: 12365
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.119..0.119 rows=291 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.017..0.076 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
   ->  Materialize  (cost=10000.22..10468.29 rows=93613 width=32) (actual time=0.023..0.035 rows=218 loops=1)
         ->  Sort  (cost=10000.22..10234.26 rows=93613 width=32) (actual time=0.018..0.019 rows=2 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=93613 width=32) (actual time=0.010..0.011 rows=2 loops=1)
                     Filter: ((tax_percentage <= '0.01'::double precision) AND (tax_percentage >= '0.01'::double precision))
                     Rows Removed by Filter: 10
 Planning Time: 525.839 ms
 Execution Time: 542.665 ms
(31 rows)

                                                                                                                                                                                                   QUERY PLAN                                                                                                                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=2540.25..146424.32 rows=416 width=244) (actual time=41.325..594.405 rows=1269 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=2496.86..146313.32 rows=217 width=212) (actual time=37.239..593.657 rows=2560 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=579.77..143571.48 rows=217 width=184) (actual time=4.433..550.795 rows=2565 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=3821 width=132) (actual time=0.236..544.068 rows=5249 loops=1)
                     Filter: ((quantity <= '34'::double precision) AND (quantity >= '22'::double precision) AND (ext_wholesale_cost <= '4085.09'::double precision) AND (ext_wholesale_cost >= '769.32'::double precision) AND (net_paid <= '533.6'::double precision) AND (net_paid >= '185.5'::double precision) AND (net_profit <= '747'::double precision) AND (net_profit >= '-562.32'::double precision))
                     Rows Removed by Filter: 2875155
               ->  Hash  (cost=456.00..456.00 rows=9902 width=52) (actual time=4.174..4.174 rows=8977 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 900kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=9902 width=52) (actual time=0.006..2.982 rows=8977 loops=1)
                           Filter: ((manufact_id <= '331'::double precision) AND (manufact_id >= '55'::double precision))
                           Rows Removed by Filter: 9023
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=32.782..32.782 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..10.435 rows=100000 loops=1)
   ->  Hash  (cost=30.40..30.40 rows=1039 width=32) (actual time=0.020..0.020 rows=8 loops=1)
         Buckets: 2048  Batches: 1  Memory Usage: 17kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=1039 width=32) (actual time=0.013..0.016 rows=8 loops=1)
               Filter: ((market_id <= 10) AND (market_id >= 6))
               Rows Removed by Filter: 4
 Planning Time: 558.489 ms
 Execution Time: 594.544 ms
(24 rows)

                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=115280.30..144921.23 rows=2609 width=244) (actual time=673.910..674.373 rows=623 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=110535.87..110550.76 rows=5956 width=212) (actual time=673.878..673.922 rows=624 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 382kB
         ->  Hash Join  (cost=106482.17..110162.43 rows=5956 width=212) (actual time=648.758..673.090 rows=1254 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.019..10.650 rows=100000 loops=1)
               ->  Hash  (cost=106407.72..106407.72 rows=5956 width=184) (actual time=648.706..648.708 rows=1254 loops=1)
                     Buckets: 8192  Batches: 1  Memory Usage: 338kB
                     ->  Hash Join  (cost=472.99..106407.72 rows=5956 width=184) (actual time=7.192..647.754 rows=1267 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=71628 width=132) (actual time=0.064..603.667 rows=248746 loops=1)
                                 Filter: ((list_price <= '172.49'::double precision) AND (list_price >= '137.61'::double precision))
                                 Rows Removed by Filter: 2631658
                           ->  Hash  (cost=456.00..456.00 rows=1359 width=52) (actual time=6.803..6.803 rows=3591 loops=1)
                                 Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 341kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=1359 width=52) (actual time=0.011..5.728 rows=3593 loops=1)
                                       Filter: ((category_id <= '3'::double precision) AND (category_id >= '2'::double precision))
                                       Rows Removed by Filter: 14407
   ->  Sort  (cost=4744.43..4893.05 rows=59448 width=32) (actual time=0.024..0.063 rows=626 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=59448 width=32) (actual time=0.012..0.015 rows=6 loops=1)
               Filter: ((tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.03'::double precision))
               Rows Removed by Filter: 6
 Planning Time: 526.973 ms
 Execution Time: 674.512 ms
(28 rows)

                                                                                                                                                                                                    QUERY PLAN                                                                                                                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=154437.03..187274.43 rows=26520 width=244) (actual time=1650.262..1973.121 rows=369634 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.026..0.031 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.014..0.018 rows=12 loops=1)
   ->  Materialize  (cost=153357.12..153485.58 rows=25693 width=212) (actual time=1650.212..1854.938 rows=369635 loops=1)
         ->  Sort  (cost=153357.12..153421.35 rows=25693 width=212) (actual time=1650.204..1724.769 rows=369635 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 84592kB
               ->  Hash Join  (cost=148150.23..148839.73 rows=25693 width=212) (actual time=991.131..1371.191 rows=370186 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Merge Join  (cost=147594.15..147959.51 rows=26572 width=160) (actual time=986.153..1252.499 rows=370186 loops=1)
                           Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                           ->  Sort  (cost=144810.83..144874.21 rows=25352 width=132) (actual time=927.724..1004.712 rows=370187 loops=1)
                                 Sort Key: store_sales.customer_sk
                                 Sort Method: external merge  Disk: 53032kB
                                 ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=25352 width=132) (actual time=0.041..697.239 rows=371294 loops=1)
                                       Filter: ((quantity <= '68'::double precision) AND (quantity >= '10'::double precision) AND (ext_sales_price <= '1305.87'::double precision) AND (ext_sales_price >= '95'::double precision) AND (ext_tax <= '70.64'::double precision) AND (ext_tax >= '-1'::double precision) AND (net_paid <= '3273.26'::double precision) AND (net_paid >= '418.88'::double precision))
                                       Rows Removed by Filter: 2509110
                           ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=58.419..98.375 rows=385015 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: external sort  Disk: 5216kB
                                 ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.018..13.196 rows=100000 loops=1)
                     ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.951..4.951 rows=18000 loops=1)
                           Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..2.170 rows=18000 loops=1)
 Planning Time: 601.804 ms
 Execution Time: 2025.784 ms
(29 rows)

                                                                                                                                              QUERY PLAN                                                                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=133681.92..141525.68 rows=9703 width=244) (actual time=713.447..742.402 rows=36202 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=132907.63..132928.65 rows=8406 width=212) (actual time=713.387..723.682 rows=60512 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 16680kB
         ->  Merge Join  (cost=131340.18..132359.71 rows=8406 width=212) (actual time=637.478..667.795 rows=72831 loops=1)
               Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
               ->  Sort  (cost=908.14..909.91 rows=711 width=80) (actual time=4.245..4.304 rows=291 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 65kB
                     ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.129..4.120 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.013..1.805 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.100..0.103 rows=291 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.010..0.064 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                       Rows Removed by Filter: 6
               ->  Sort  (cost=130432.05..130496.12 rows=25629 width=132) (actual time=633.225..643.366 rows=75157 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: external sort  Disk: 11088kB
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=25629 width=132) (actual time=0.043..579.551 rows=75624 loops=1)
                           Filter: ((quantity <= '93'::double precision) AND (quantity >= '59'::double precision) AND (ext_tax <= '12.13'::double precision) AND (ext_tax >= '1.81'::double precision) AND (net_profit <= '-259'::double precision) AND (net_profit >= '-5656.65'::double precision))
                           Rows Removed by Filter: 2804780
   ->  Sort  (cost=774.29..801.97 rows=11074 width=32) (actual time=0.044..1.594 rows=36205 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=11074 width=32) (actual time=0.025..0.027 rows=6 loops=1)
               Filter: ((number_employees <= 288) AND (number_employees >= 236))
               Rows Removed by Filter: 6
 Planning Time: 506.051 ms
 Execution Time: 748.563 ms
(32 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=115411.74..116610.93 rows=103224 width=240) (actual time=9382.451..10150.484 rows=640420 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=13126.70..13381.10 rows=101759 width=28) (actual time=17.682..19.062 rows=23833 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: quicksort  Memory: 2630kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=101759 width=28) (actual time=0.017..13.546 rows=23833 loops=1)
               Filter: ((birth_month <= '4'::double precision) AND (birth_month >= '2'::double precision))
               Rows Removed by Filter: 76167
   ->  Sort  (cost=102285.04..102323.62 rows=15432 width=212) (actual time=9364.755..9778.498 rows=2685660 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external sort  Disk: 633056kB
         ->  Hash Join  (cost=88026.83..101211.50 rows=15432 width=212) (actual time=2302.181..4726.915 rows=2750920 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=87470.74..100464.36 rows=15662 width=160) (actual time=2297.551..3875.209 rows=2750920 loops=1)
                     Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2297.423..2750.191 rows=2750921 loops=1)
                           Sort Key: store_sales.promo_sk
                           Sort Method: external merge  Disk: 397328kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..328.872 rows=2880404 loops=1)
                     ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.116..124.622 rows=2741682 loops=1)
                           Sort Key: ((promotion.promo_sk)::double precision)
                           Sort Method: quicksort  Memory: 48kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.018..0.060 rows=300 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.608..4.609 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.007..1.913 rows=18000 loops=1)
 Planning Time: 523.937 ms
 Execution Time: 10340.029 ms
(28 rows)

                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=149633.42..443651.63 rows=107250 width=244) (actual time=788.988..792.021 rows=4951 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1557.92..1611.05 rows=21252 width=32) (actual time=0.027..0.029 rows=2 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=21252 width=32) (actual time=0.015..0.018 rows=2 loops=1)
               Filter: ((tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.08'::double precision))
               Rows Removed by Filter: 10
   ->  Materialize  (cost=148075.50..148901.44 rows=165189 width=212) (actual time=781.257..788.336 rows=24505 loops=1)
         ->  Sort  (cost=148075.50..148488.47 rows=165189 width=212) (actual time=781.254..785.147 rows=24505 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 6864kB
               ->  Hash Join  (cost=6263.48..116818.80 rows=165189 width=212) (actual time=4.384..751.534 rows=30237 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1149805 width=132) (actual time=0.031..543.116 rows=2612279 loops=1)
                           Filter: ((ext_discount_amt <= '1190.63'::double precision) AND (ext_discount_amt >= '0'::double precision))
                           Rows Removed by Filter: 268125
                     ->  Hash  (cost=6136.47..6136.47 rows=10161 width=80) (actual time=4.323..4.325 rows=150 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 146kB
                           ->  Hash Join  (cost=196.09..6136.47 rows=10161 width=80) (actual time=0.117..4.278 rows=150 loops=1)
                                 Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=10590 width=52) (actual time=0.006..2.970 rows=10765 loops=1)
                                       Filter: ((class_id <= '8'::double precision) AND (class_id >= '2'::double precision))
                                       Rows Removed by Filter: 7235
                                 ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.081..0.082 rows=293 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                       ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.040 rows=300 loops=1)
 Planning Time: 517.964 ms
 Execution Time: 793.461 ms
(29 rows)

                                                                                                         QUERY PLAN                                                                                                          
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop  (cost=589.09..86920.15 rows=14457 width=244) (actual time=3.166..1318.667 rows=113713 loops=1)
   Join Filter: (store_sales.store_sk = (store.store_sk)::double precision)
   Rows Removed by Join Filter: 1283423
   ->  Seq Scan on store  (cost=0.00..37.20 rows=334 width=32) (actual time=0.015..0.027 rows=4 loops=1)
         Filter: ((market_id <= 10) AND (market_id >= 8) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
         Rows Removed by Filter: 8
   ->  Materialize  (cost=589.09..86364.75 rows=89 width=212) (actual time=0.787..293.012 rows=349284 loops=4)
         ->  Hash Join  (cost=589.09..86364.31 rows=89 width=212) (actual time=3.133..720.269 rows=349284 loops=1)
               Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.037..332.224 rows=2880404 loops=1)
               ->  Hash  (cost=587.98..587.98 rows=89 width=80) (actual time=3.085..3.087 rows=38 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 13kB
                     ->  Hash Join  (cost=24.64..587.98 rows=89 width=80) (actual time=0.142..3.072 rows=38 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=324 width=52) (actual time=0.007..2.727 rows=2067 loops=1)
                                 Filter: ((brand_id <= '6001008'::double precision) AND (brand_id >= '1004001'::double precision) AND (manufact_id <= '594'::double precision) AND (manufact_id >= '317'::double precision))
                                 Rows Removed by Filter: 15933
                           ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.094..0.095 rows=291 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 35kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.057 rows=293 loops=1)
                                       Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                       Rows Removed by Filter: 7
 Planning Time: 512.845 ms
 Execution Time: 1336.628 ms
(24 rows)

                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=848.60..126640.08 rows=6680 width=244) (actual time=3.035..455.017 rows=3796 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=635.53..124014.87 rows=554 width=212) (actual time=2.992..453.137 rows=3837 loops=1)
         Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
         ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=350182 width=132) (actual time=0.035..438.524 rows=128850 loops=1)
               Filter: ((ext_sales_price <= '230'::double precision) AND (ext_sales_price >= '156.92'::double precision))
               Rows Removed by Filter: 2751554
         ->  Hash  (cost=632.60..632.60 rows=235 width=80) (actual time=2.391..2.393 rows=9 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 10kB
               ->  Hash Join  (cost=16.75..632.60 rows=235 width=80) (actual time=0.494..2.387 rows=9 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=2160 width=52) (actual time=0.010..2.234 rows=363 loops=1)
                           Filter: ((current_price <= '2.52'::double precision) AND (current_price >= '2.26'::double precision) AND (manufact_id <= '552'::double precision) AND (manufact_id >= '118'::double precision))
                           Rows Removed by Filter: 17637
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.095..0.095 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.006..0.058 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=30.40..30.40 rows=14613 width=32) (actual time=0.022..0.022 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.013..0.017 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
 Planning Time: 498.459 ms
 Execution Time: 455.266 ms
(25 rows)

                                                                                                               QUERY PLAN                                                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=118130.22..122081.92 rows=17479 width=244) (actual time=459.397..475.790 rows=9 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=118044.40..120421.50 rows=1575 width=212) (actual time=459.366..475.751 rows=21 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..7.645 rows=100000 loops=1)
         ->  Hash  (cost=118024.71..118024.71 rows=1575 width=184) (actual time=459.343..459.344 rows=21 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 21kB
               ->  Hash Join  (cost=116058.28..118024.71 rows=1575 width=184) (actual time=457.075..459.332 rows=21 loops=1)
                     Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=177 width=52) (actual time=0.012..1.833 rows=347 loops=1)
                           Filter: ((current_price <= '1.68'::double precision) AND (current_price >= '0.84'::double precision) AND (category_id <= '10'::double precision) AND (category_id >= '9'::double precision))
                           Rows Removed by Filter: 17653
                     ->  Hash  (cost=114154.24..114154.24 rows=59443 width=132) (actual time=449.293..449.294 rows=14636 loops=1)
                           Buckets: 32768  Batches: 4  Memory Usage: 852kB
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=59443 width=132) (actual time=0.134..436.985 rows=14783 loops=1)
                                 Filter: ((list_price <= '23.73'::double precision) AND (list_price >= '-1'::double precision) AND (ext_sales_price <= '1625.4'::double precision) AND (ext_sales_price >= '1130.72'::double precision))
                                 Rows Removed by Filter: 2865621
   ->  Hash  (cost=44.00..44.00 rows=3346 width=32) (actual time=0.021..0.022 rows=6 loops=1)
         Buckets: 4096  Batches: 1  Memory Usage: 33kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=3346 width=32) (actual time=0.014..0.017 rows=6 loops=1)
               Filter: ((floor_space <= 9294113) AND (floor_space >= 5250760) AND (devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 6
 Planning Time: 486.264 ms
 Execution Time: 475.862 ms
(24 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=89996.46..98214.89 rows=12371 width=240) (actual time=2360.189..5211.803 rows=65852 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=89800.37..91611.92 rows=12371 width=212) (actual time=2358.951..4945.719 rows=3067978 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Merge Join  (cost=89191.74..89456.54 rows=15998 width=160) (actual time=2354.176..4056.208 rows=2750652 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2296.325..2735.176 rows=2750653 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 397328kB
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..323.764 rows=2880404 loops=1)
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=57.841..319.137 rows=2759726 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.021..13.239 rows=100000 loops=1)
         ->  Hash  (cost=456.00..456.00 rows=12210 width=52) (actual time=4.745..4.745 rows=14337 loops=1)
               Buckets: 16384  Batches: 1  Memory Usage: 1360kB
               ->  Seq Scan on item  (cost=0.00..456.00 rows=12210 width=52) (actual time=0.008..3.032 rows=14353 loops=1)
                     Filter: ((category_id <= '9'::double precision) AND (category_id >= '2'::double precision))
                     Rows Removed by Filter: 3647
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.091..0.092 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.046 rows=300 loops=1)
 Planning Time: 509.452 ms
 Execution Time: 5282.420 ms
(24 rows)



 Hash Join  (cost=2496.88..161933.67 rows=2530 width=240) (actual time=79.893..661.245 rows=106 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=1941.73..161333.57 rows=524 width=188) (actual time=36.644..656.556 rows=1028 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=24.64..157532.49 rows=495 width=160) (actual time=1.122..615.892 rows=1030 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=2811 width=132) (actual time=0.045..609.635 rows=46771 loops=1)
                     Filter: ((quantity <= '92'::double precision) AND (quantity >= '39'::double precision) AND (sales_price <= '69.78'::double precision) AND (sales_price >= '15.82'::double precision) AND (ext_sales_price <= '6313.92'::double precision) AND (ext_sales_price >= '3314.07'::double precision) AND (ext_list_price <= '5910.96'::double precision) AND (ext_list_price >= '3980.54'::double precision) AND (net_paid_inc_tax <= '5352.69'::double precision) AND (net_paid_inc_tax >= '595.76'::double precision))
                     Rows Removed by Filter: 2833633
               ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.092..0.093 rows=291 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 35kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.006..0.055 rows=293 loops=1)
                           Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                           Rows Removed by Filter: 7
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=32.259..32.259 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..10.001 rows=100000 loops=1)
   ->  Hash  (cost=546.00..546.00 rows=732 width=52) (actual time=4.402..4.402 rows=8241 loops=1)
         Buckets: 16384 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 837kB
         ->  Seq Scan on item  (cost=0.00..546.00 rows=732 width=52) (actual time=0.043..3.328 rows=8246 loops=1)
               Filter: ((brand_id <= '9014008'::double precision) AND (brand_id >= '3001002'::double precision) AND (manufact_id <= '881'::double precision) AND (manufact_id >= '157'::double precision))
               Rows Removed by Filter: 9754
 Planning Time: 582.210 ms
 Execution Time: 661.324 ms
(24 rows)

                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=110134.97..112049.43 rows=2422 width=244) (actual time=1075.954..1457.287 rows=324129 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=109578.88..111463.79 rows=2422 width=192) (actual time=1071.346..1350.255 rows=324129 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..8.919 rows=100000 loops=1)
         ->  Hash  (cost=109548.60..109548.60 rows=2422 width=164) (actual time=1050.830..1050.832 rows=324129 loops=1)
               Buckets: 32768 (originally 4096)  Batches: 32 (originally 1)  Memory Usage: 3841kB
               ->  Hash Join  (cost=44.67..109548.60 rows=2422 width=164) (actual time=0.062..823.706 rows=328195 loops=1)
                     Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=554672 width=132) (actual time=0.037..602.473 rows=2022040 loops=1)
                           Filter: ((net_paid <= '2227.84'::double precision) AND (net_paid >= '-1'::double precision))
                           Rows Removed by Filter: 858364
                     ->  Hash  (cost=44.00..44.00 rows=54 width=32) (actual time=0.007..0.008 rows=2 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on store  (cost=0.00..44.00 rows=54 width=32) (actual time=0.004..0.006 rows=2 loops=1)
                                 Filter: ((market_id <= 8) AND (market_id >= 8) AND (devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.03'::double precision))
                                 Rows Removed by Filter: 10
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.576..4.576 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.933 rows=18000 loops=1)
 Planning Time: 480.835 ms
 Execution Time: 1468.877 ms
(22 rows)

                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=657.48..104514.88 rows=1689 width=244) (actual time=2.689..814.423 rows=1147 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=582.66..102746.60 rows=1598 width=212) (actual time=2.659..813.685 rows=1775 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Hash Join  (cost=558.02..102064.10 rows=12293 width=184) (actual time=2.450..803.430 rows=78393 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=409128 width=132) (actual time=0.034..626.974 rows=1832663 loops=1)
                     Filter: ((net_profit <= '1300.52'::double precision) AND (net_profit >= '-1272.21'::double precision))
                     Rows Removed by Filter: 1047741
               ->  Hash  (cost=546.00..546.00 rows=962 width=52) (actual time=2.408..2.409 rows=738 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 72kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=962 width=52) (actual time=0.007..2.310 rows=738 loops=1)
                           Filter: ((brand_id <= '6013007'::double precision) AND (brand_id >= '6006005'::double precision) AND (category_id <= '10'::double precision) AND (category_id >= '6'::double precision))
                           Rows Removed by Filter: 17262
         ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.091..0.092 rows=291 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 35kB
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.057 rows=293 loops=1)
                     Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                     Rows Removed by Filter: 7
   ->  Hash  (cost=30.40..30.40 rows=3553 width=32) (actual time=0.020..0.020 rows=7 loops=1)
         Buckets: 4096  Batches: 1  Memory Usage: 33kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=3553 width=32) (actual time=0.013..0.016 rows=7 loops=1)
               Filter: ((floor_space <= 8954883) AND (floor_space >= 5219562))
               Rows Removed by Filter: 5
 Planning Time: 536.670 ms
 Execution Time: 814.554 ms
(26 rows)



 Hash Join  (cost=2686.86..163784.87 rows=461 width=244) (actual time=227.412..594.460 rows=24 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=2473.18..161551.80 rows=446 width=212) (actual time=227.368..594.397 rows=24 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Hash Join  (cost=1917.09..160949.77 rows=461 width=160) (actual time=43.684..589.539 rows=267 loops=1)
               Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=440 width=132) (actual time=1.156..548.614 rows=267 loops=1)
                     Filter: ((list_price <= '155.11'::double precision) AND (list_price >= '114.47'::double precision) AND (ext_list_price <= '4635.84'::double precision) AND (ext_list_price >= '2799.48'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '1801.27'::double precision) AND (net_paid >= '118.66'::double precision) AND (net_profit <= '172.2'::double precision) AND (net_profit >= '-7.11'::double precision))
                     Rows Removed by Filter: 2880137
               ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=33.109..33.109 rows=100000 loops=1)
                     Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..10.419 rows=100000 loops=1)
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.740..4.741 rows=17954 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.863 rows=18000 loops=1)
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.021..0.021 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.014 rows=12 loops=1)
 Planning Time: 516.542 ms
 Execution Time: 594.536 ms
(20 rows)

                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=159029.32..1489804.53 rows=464790 width=244) (actual time=488.481..488.721 rows=414 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=13159.76..13462.51 rows=121102 width=32) (actual time=0.025..0.026 rows=2 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=121102 width=32) (actual time=0.015..0.018 rows=2 loops=1)
               Filter: ((company_id <= 877) AND (company_id >= 811) AND (tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 10
   ->  Materialize  (cost=145869.57..146526.27 rows=131341 width=212) (actual time=488.026..488.435 rows=1576 loops=1)
         ->  Sort  (cost=145869.57..146197.92 rows=131341 width=212) (actual time=488.022..488.157 rows=1576 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 732kB
               ->  Hash Join  (cost=8619.80..121235.60 rows=131341 width=212) (actual time=4.654..486.329 rows=2393 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=135104 width=132) (actual time=0.036..439.913 rows=498242 loops=1)
                           Filter: ((list_price <= '60.32'::double precision) AND (list_price >= '34.43'::double precision))
                           Rows Removed by Filter: 2382162
                     ->  Hash  (cost=8437.55..8437.55 rows=14580 width=80) (actual time=4.407..4.409 rows=292 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 163kB
                           ->  Hash Join  (cost=196.09..8437.55 rows=14580 width=80) (actual time=0.114..4.319 rows=293 loops=1)
                                 Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                                 ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.999 rows=18000 loops=1)
                                 ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.081..0.082 rows=293 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                       ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.005..0.036 rows=300 loops=1)
 Planning Time: 639.820 ms
 Execution Time: 488.813 ms
(27 rows)

                                                                                                                                                                                                               QUERY PLAN                                                                                                                                                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=146201.58..146658.22 rows=2627 width=244) (actual time=626.990..634.907 rows=12814 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=145746.67..145748.68 rows=807 width=212) (actual time=626.970..628.867 rows=15351 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 3528kB
         ->  Hash Join  (cost=144787.09..145707.72 rows=807 width=212) (actual time=605.300..612.599 rows=15361 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.013..1.593 rows=18000 loops=1)
               ->  Hash  (cost=144776.30..144776.30 rows=863 width=160) (actual time=605.272..605.273 rows=15361 loops=1)
                     Buckets: 16384 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 3128kB
                     ->  Merge Join  (cost=144059.42..144776.30 rows=863 width=160) (actual time=592.621..600.405 rows=15739 loops=1)
                           Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
                           ->  Sort  (cost=142997.10..142999.20 rows=839 width=132) (actual time=592.514..594.148 rows=15740 loops=1)
                                 Sort Key: store_sales.promo_sk
                                 Sort Method: external merge  Disk: 2264kB
                                 ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=839 width=132) (actual time=0.059..581.001 rows=15772 loops=1)
                                       Filter: ((quantity <= '88'::double precision) AND (quantity >= '26'::double precision) AND (ext_list_price <= '1905.6'::double precision) AND (ext_list_price >= '1815.42'::double precision) AND (net_paid_inc_tax <= '3984.47'::double precision) AND (net_paid_inc_tax >= '-1'::double precision) AND (net_profit <= '-1'::double precision) AND (net_profit >= '-3235.48'::double precision))
                                       Rows Removed by Filter: 2864632
                           ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.100..0.789 rows=15685 loops=1)
                                 Sort Key: ((promotion.promo_sk)::double precision)
                                 Sort Method: quicksort  Memory: 48kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.013..0.051 rows=300 loops=1)
   ->  Sort  (cost=454.91..471.61 rows=6682 width=32) (actual time=0.015..0.560 rows=12818 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=6682 width=32) (actual time=0.008..0.010 rows=10 loops=1)
               Filter: ((market_id <= 8) AND (market_id >= 2))
               Rows Removed by Filter: 2
 Planning Time: 470.207 ms
 Execution Time: 636.557 ms
(30 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=91609.52..94645.25 rows=3553 width=240) (actual time=7533.666..8902.152 rows=2202704 loops=1)
   Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
   ->  Sort  (cost=90547.20..90556.09 rows=3553 width=212) (actual time=7533.540..7932.334 rows=2202705 loops=1)
         Sort Key: store_sales.promo_sk
         Sort Method: external merge  Disk: 507016kB
         ->  Merge Join  (cost=90188.41..90337.68 rows=3553 width=212) (actual time=3575.883..5106.823 rows=2228647 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=87405.10..87413.98 rows=3553 width=184) (actual time=3518.412..3948.915 rows=2228648 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 445952kB
                     ->  Hash Join  (cost=499.82..87195.57 rows=3553 width=184) (actual time=3.976..1166.278 rows=2284057 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.043..340.190 rows=2880404 loops=1)
                           ->  Hash  (cost=456.00..456.00 rows=3506 width=52) (actual time=3.918..3.919 rows=8663 loops=1)
                                 Buckets: 16384 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 873kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=3506 width=52) (actual time=0.008..2.587 rows=8674 loops=1)
                                       Filter: ((current_price <= '58.19'::double precision) AND (current_price >= '3.98'::double precision))
                                       Rows Removed by Filter: 9326
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=57.461..267.932 rows=2242821 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.020..13.174 rows=100000 loops=1)
   ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.114..94.833 rows=2195110 loops=1)
         Sort Key: ((promotion.promo_sk)::double precision)
         Sort Method: quicksort  Memory: 48kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.021..0.063 rows=300 loops=1)
 Planning Time: 467.801 ms
 Execution Time: 9134.418 ms
(28 rows)

                                                                                                                                                                                                                                                                     QUERY PLAN                                                                                                                                                                                                                                                                      

 Merge Join  (cost=162935.50..168665.39 rows=6706 width=240) (actual time=767.603..768.348 rows=1430 loops=1)
   Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
   ->  Sort  (cost=161873.19..161889.95 rows=6706 width=212) (actual time=767.508..767.583 rows=1431 loops=1)
         Sort Key: store_sales.promo_sk
         Sort Method: quicksort  Memory: 429kB
         ->  Merge Join  (cost=161266.46..161446.98 rows=6706 width=212) (actual time=748.221..766.823 rows=1431 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=158483.15..158499.91 rows=6706 width=184) (actual time=693.307..693.440 rows=1432 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: quicksort  Memory: 430kB
                     ->  Hash Join  (cost=559.14..158056.94 rows=6706 width=184) (actual time=3.521..692.374 rows=1438 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=32393 width=132) (actual time=0.047..677.071 rows=149202 loops=1)
                                 Filter: ((quantity <= '96'::double precision) AND (quantity >= '-1'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '1412.84'::double precision) AND (ext_wholesale_cost >= '684.08'::double precision) AND (ext_coupon_amt <= '2614.42'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid_inc_tax <= '1566.51'::double precision) AND (net_paid_inc_tax >= '702.58'::double precision))
                                 Rows Removed by Filter: 2731202
                           ->  Hash  (cost=546.00..546.00 rows=1051 width=52) (actual time=2.303..2.304 rows=168 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 31kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=1051 width=52) (actual time=0.025..2.278 rows=168 loops=1)
                                       Filter: ((current_price <= '9.75'::double precision) AND (current_price >= '9.5'::double precision) AND (category_id <= '10'::double precision) AND (category_id >= '5'::double precision))
                                       Rows Removed by Filter: 17832
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.901..64.256 rows=99844 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..13.087 rows=100000 loops=1)
   ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.091..0.152 rows=1428 loops=1)
         Sort Key: ((promotion.promo_sk)::double precision)
         Sort Method: quicksort  Memory: 48kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.010..0.047 rows=300 loops=1)
 Planning Time: 501.045 ms
 Execution Time: 769.291 ms
(30 rows)

                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=107099.37..130263.13 rows=7227 width=244) (actual time=578.994..579.507 rows=687 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=829.28..858.58 rows=11720 width=32) (actual time=0.024..0.026 rows=3 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=11720 width=32) (actual time=0.015..0.018 rows=3 loops=1)
               Filter: ((floor_space <= 8954883) AND (floor_space >= 5285950) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 9
   ->  Materialize  (cost=106270.09..106387.57 rows=23495 width=212) (actual time=578.815..579.181 rows=1380 loops=1)
         ->  Sort  (cost=106270.09..106328.83 rows=23495 width=212) (actual time=578.812..578.929 rows=1380 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 659kB
               ->  Hash Join  (cost=1546.52..102152.84 rows=23495 width=212) (actual time=3.525..577.628 rows=2116 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=183490 width=132) (actual time=0.038..536.706 rows=494231 loops=1)
                           Filter: ((net_profit <= '-1798.08'::double precision) AND (net_profit >= '-5166.9'::double precision))
                           Rows Removed by Filter: 2386173
                     ->  Hash  (cost=1526.28..1526.28 rows=1619 width=80) (actual time=3.170..3.172 rows=55 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 23kB
                           ->  Hash Join  (cost=196.09..1526.28 rows=1619 width=80) (actual time=0.182..3.153 rows=55 loops=1)
                                 Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=1688 width=52) (actual time=0.005..2.627 rows=3602 loops=1)
                                       Filter: ((category_id <= '6'::double precision) AND (category_id >= '5'::double precision))
                                       Rows Removed by Filter: 14398
                                 ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.079..0.080 rows=293 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                       ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.005..0.036 rows=300 loops=1)
 Planning Time: 475.249 ms
 Execution Time: 579.607 ms
(29 rows)

                                                                                                                                                                                                       QUERY PLAN                                                                                                                                                                                                        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=2666.29..147529.96 rows=174 width=240) (actual time=41.923..657.571 rows=39 loops=1)
   Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
   ->  Hash Join  (cost=2470.20..146587.09 rows=174 width=212) (actual time=41.801..657.418 rows=39 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=553.11..144007.06 rows=174 width=184) (actual time=8.585..616.915 rows=39 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=5733 width=132) (actual time=0.041..605.524 rows=108658 loops=1)
                     Filter: ((list_price <= '96.45'::double precision) AND (list_price >= '14.6'::double precision) AND (ext_sales_price <= '2032.8'::double precision) AND (ext_sales_price >= '133.2'::double precision) AND (ext_coupon_amt <= '1333.46'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '265.43'::double precision) AND (net_paid >= '162.09'::double precision))
                     Rows Removed by Filter: 2771746
               ->  Hash  (cost=546.00..546.00 rows=569 width=52) (actual time=2.164..2.164 rows=66 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 14kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=569 width=52) (actual time=0.010..2.153 rows=66 loops=1)
                           Filter: ((current_price <= '0.98'::double precision) AND (current_price >= '0.15'::double precision) AND (manufact_id <= '505'::double precision) AND (manufact_id >= '454'::double precision))
                           Rows Removed by Filter: 17934
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=33.193..33.193 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..10.263 rows=100000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.099..0.099 rows=300 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.048 rows=300 loops=1)
 Planning Time: 491.859 ms
 Execution Time: 657.640 ms
(22 rows)

                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=99718.06..100448.60 rows=86778 width=244) (actual time=2435.641..2636.951 rows=11586 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=11740.05..11963.98 rows=89571 width=28) (actual time=12.365..12.475 rows=1438 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: quicksort  Memory: 161kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=89571 width=28) (actual time=0.018..12.088 rows=1438 loops=1)
               Filter: ((birth_year <= '1985'::double precision) AND (birth_year >= '1985'::double precision))
               Rows Removed by Filter: 98562
   ->  Sort  (cost=87978.01..87983.91 rows=2363 width=216) (actual time=2423.259..2556.864 rows=791718 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external sort  Disk: 185976kB
         ->  Hash Join  (cost=603.79..87845.60 rows=2363 width=216) (actual time=3.818..1311.665 rows=802335 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Hash Join  (cost=49.02..87251.86 rows=421 width=164) (actual time=0.061..979.973 rows=1373327 loops=1)
                     Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.035..340.509 rows=2880404 loops=1)
                     ->  Hash  (cost=44.00..44.00 rows=402 width=32) (actual time=0.012..0.012 rows=6 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on store  (cost=0.00..44.00 rows=402 width=32) (actual time=0.005..0.008 rows=6 loops=1)
                                 Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 877) AND (company_id >= 27) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.03'::double precision))
                                 Rows Removed by Filter: 6
               ->  Hash  (cost=456.00..456.00 rows=7901 width=52) (actual time=3.738..3.739 rows=7496 loops=1)
                     Buckets: 8192  Batches: 1  Memory Usage: 708kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=7901 width=52) (actual time=0.005..2.805 rows=7509 loops=1)
                           Filter: ((manufact_id <= '422'::double precision) AND (manufact_id >= '148'::double precision))
                           Rows Removed by Filter: 10491
 Planning Time: 518.665 ms
 Execution Time: 2671.161 ms
(28 rows)

                                                                                                                                                                QUERY PLAN                                                                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=137129.83..139087.25 rows=959 width=240) (actual time=970.551..990.867 rows=4907 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.019..8.299 rows=100000 loops=1)
   ->  Hash  (cost=137117.84..137117.84 rows=959 width=212) (actual time=970.506..970.509 rows=4907 loops=1)
         Buckets: 8192 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 1288kB
         ->  Merge Join  (cost=136298.04..137117.84 rows=959 width=212) (actual time=965.781..968.754 rows=4916 loops=1)
               Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
               ->  Sort  (cost=135235.72..135238.12 rows=959 width=184) (actual time=965.668..966.074 rows=4917 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: quicksort  Memory: 1502kB
                     ->  Hash Join  (cost=132072.49..135188.20 rows=959 width=184) (actual time=824.263..963.629 rows=4930 loops=1)
                           Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=281 width=52) (actual time=0.022..2.192 rows=375 loops=1)
                                 Filter: ((brand_id <= '7014004'::double precision) AND (brand_id >= '3001001'::double precision) AND (manufact_id <= '311'::double precision) AND (manufact_id >= '288'::double precision))
                                 Rows Removed by Filter: 17625
                           ->  Hash  (cost=128555.30..128555.30 rows=109775 width=132) (actual time=769.634..769.635 rows=528449 loops=1)
                                 Buckets: 32768 (originally 32768)  Batches: 32 (originally 8)  Memory Usage: 3841kB
                                 ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=109775 width=132) (actual time=0.053..545.513 rows=531707 loops=1)
                                       Filter: ((list_price <= '59.7'::double precision) AND (list_price >= '24.09'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '6183.24'::double precision) AND (ext_list_price >= '-1'::double precision))
                                       Rows Removed by Filter: 2348697
               ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.106..0.322 rows=4900 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 48kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.018..0.058 rows=300 loops=1)
 Planning Time: 489.289 ms
 Execution Time: 991.140 ms
(26 rows)

                                                                                                                                                                                                                                               QUERY PLAN                                                                                                                                                                                                                                               
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=161042.97..165782.43 rows=156 width=244) (actual time=1088.932..1380.389 rows=260782 loops=1)
   Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
   ->  Hash Join  (cost=159125.88..163273.19 rows=156 width=216) (actual time=1031.799..1132.566 rows=260932 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Merge Join  (cost=158569.79..162701.63 rows=156 width=164) (actual time=1027.101..1057.866 rows=76576 loops=1)
               Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
               ->  Sort  (cost=251.22..260.01 rows=3518 width=32) (actual time=0.017..0.018 rows=1 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..44.00 rows=3518 width=32) (actual time=0.009..0.011 rows=1 loops=1)
                           Filter: ((floor_space <= 9294113) AND (floor_space >= 9294113) AND (devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.03'::double precision))
                           Rows Removed by Filter: 11
               ->  Sort  (cost=158318.57..158353.48 rows=13961 width=132) (actual time=952.905..1008.655 rows=457962 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external sort  Disk: 67376kB
                     ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=13961 width=132) (actual time=0.035..668.390 rows=459376 loops=1)
                           Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_tax <= '25.4'::double precision) AND (ext_tax >= '0'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '506.11'::double precision) AND (net_paid >= '49.68'::double precision) AND (net_profit <= '2347.95'::double precision) AND (net_profit >= '-2392.92'::double precision))
                           Rows Removed by Filter: 2421028
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.679..4.680 rows=17954 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.008..1.900 rows=18000 loops=1)
   ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=57.107..57.108 rows=100000 loops=1)
         Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.018..17.558 rows=100000 loops=1)
 Planning Time: 529.608 ms
 Execution Time: 1401.484 ms
(26 rows)

                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=184658.17..862370.58 rows=379945 width=244) (actual time=908.585..1388.427 rows=13525 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=176038.37..657162.00 rows=395685 width=164) (actual time=903.770..1323.855 rows=623696 loops=1)
         Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
         ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.016..0.024 rows=11 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.004..0.008 rows=12 loops=1)
         ->  Materialize  (cost=174958.46..176846.80 rows=377667 width=132) (actual time=903.745..1167.380 rows=623697 loops=1)
               ->  Sort  (cost=174958.46..175902.63 rows=377667 width=132) (actual time=903.741..1001.829 rows=623697 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 89608kB
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=377667 width=132) (actual time=0.044..623.004 rows=631239 loops=1)
                           Filter: ((ext_sales_price <= '7828.8'::double precision) AND (ext_sales_price >= '2022.93'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                           Rows Removed by Filter: 2249165
   ->  Hash  (cost=8437.55..8437.55 rows=14580 width=80) (actual time=4.754..4.757 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 163kB
         ->  Hash Join  (cost=196.09..8437.55 rows=14580 width=80) (actual time=0.136..4.659 rows=293 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.015..2.055 rows=18000 loops=1)
               ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.088..0.089 rows=293 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 147kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.040 rows=300 loops=1)
 Planning Time: 564.206 ms
 Execution Time: 1420.487 ms
(25 rows)

                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=104544.68..106350.32 rows=1078 width=240) (actual time=980.962..1081.594 rows=91267 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..9.522 rows=100000 loops=1)
   ->  Hash  (cost=104531.21..104531.21 rows=1078 width=212) (actual time=974.342..974.346 rows=91267 loops=1)
         Buckets: 16384 (originally 2048)  Batches: 8 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=103923.64..104531.21 rows=1078 width=212) (actual time=794.483..907.121 rows=92417 loops=1)
               Hash Cond: ((promotion.promo_sk)::double precision = store_sales.promo_sk)
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.010..0.114 rows=293 loops=1)
                     Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                     Rows Removed by Filter: 7
               ->  Hash  (cost=103844.04..103844.04 rows=6369 width=184) (actual time=794.457..794.459 rows=94559 loops=1)
                     Buckets: 32768 (originally 8192)  Batches: 8 (originally 1)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=554.73..103844.04 rows=6369 width=184) (actual time=3.050..727.904 rows=96847 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=854598 width=132) (actual time=0.037..514.360 rows=2122320 loops=1)
                                 Filter: ((sales_price <= '82.28'::double precision) AND (sales_price >= '3.34'::double precision))
                                 Rows Removed by Filter: 758084
                           ->  Hash  (cost=546.00..546.00 rows=698 width=52) (actual time=3.002..3.003 rows=835 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 80kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=698 width=52) (actual time=0.010..2.876 rows=835 loops=1)
                                       Filter: ((current_price <= '4.52'::double precision) AND (current_price >= '2.81'::double precision) AND (manufact_id <= '413'::double precision) AND (manufact_id >= '253'::double precision))
                                       Rows Removed by Filter: 17165
 Planning Time: 542.650 ms
 Execution Time: 1084.937 ms
(24 rows)

                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=139052.09..140977.13 rows=7638 width=244) (actual time=727.358..741.286 rows=20978 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=138593.36..138601.80 rows=3374 width=212) (actual time=727.325..730.718 rows=25144 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 5768kB
         ->  Hash Join  (cost=136280.33..138395.64 rows=3374 width=212) (actual time=665.738..710.197 rows=25216 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..8.569 rows=100000 loops=1)
               ->  Hash  (cost=136238.15..136238.15 rows=3374 width=184) (actual time=665.586..665.588 rows=25216 loops=1)
                     Buckets: 32768 (originally 4096)  Batches: 2 (originally 1)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=660.40..136238.15 rows=3374 width=184) (actual time=2.991..652.619 rows=25387 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=228493 width=132) (actual time=0.039..589.407 rows=597792 loops=1)
                                 Filter: ((ext_list_price <= '9299.7'::double precision) AND (ext_list_price >= '584.06'::double precision) AND (ext_tax <= '23'::double precision) AND (ext_tax >= '0.06'::double precision))
                                 Rows Removed by Filter: 2282612
                           ->  Hash  (cost=546.00..546.00 rows=9152 width=52) (actual time=2.851..2.852 rows=1616 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 267kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=9152 width=52) (actual time=0.007..2.625 rows=1616 loops=1)
                                       Filter: ((class_id <= '2'::double precision) AND (class_id >= '1'::double precision) AND (category_id <= '3'::double precision) AND (category_id >= '2'::double precision))
                                       Rows Removed by Filter: 16384
   ->  Sort  (cost=458.73..475.57 rows=6736 width=32) (actual time=0.026..0.975 rows=20983 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=6736 width=32) (actual time=0.013..0.016 rows=10 loops=1)
               Filter: ((floor_space <= 9294113) AND (floor_space >= 5250760))
               Rows Removed by Filter: 2
 Planning Time: 524.904 ms
 Execution Time: 743.435 ms
(28 rows)



 Hash Join  (cost=839.10..174477.01 rows=65 width=244) (actual time=543.896..543.899 rows=0 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Nested Loop  (cost=643.01..174246.24 rows=67 width=216) (actual time=13.222..543.759 rows=37 loops=1)
         Join Filter: (store_sales.store_sk = (store.store_sk)::double precision)
         Rows Removed by Join Filter: 269
         ->  Hash Join  (cost=643.01..172576.49 rows=1352 width=184) (actual time=10.218..543.637 rows=153 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=1762 width=132) (actual time=0.164..536.724 rows=13410 loops=1)
                     Filter: ((quantity <= '29'::double precision) AND (quantity >= '24'::double precision) AND (list_price <= '173.76'::double precision) AND (list_price >= '-1'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '2616.84'::double precision) AND (ext_wholesale_cost >= '2119.68'::double precision) AND (ext_list_price <= '4062.26'::double precision) AND (ext_list_price >= '235.98'::double precision) AND (net_profit <= '451.5'::double precision) AND (net_profit >= '-2536.11'::double precision))
                     Rows Removed by Filter: 2866994
               ->  Hash  (cost=456.00..456.00 rows=14961 width=52) (actual time=4.363..4.363 rows=12242 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 1180kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=14961 width=52) (actual time=0.006..2.845 rows=12256 loops=1)
                           Filter: ((brand_id <= '8016001'::double precision) AND (brand_id >= '2001002'::double precision))
                           Rows Removed by Filter: 5744
         ->  Materialize  (cost=0.00..37.55 rows=69 width=32) (actual time=0.000..0.000 rows=2 loops=153)
               ->  Seq Scan on store  (cost=0.00..37.20 rows=69 width=32) (actual time=0.006..0.008 rows=2 loops=1)
                     Filter: ((floor_space <= 8954883) AND (floor_space >= 5285950) AND (market_id <= 8) AND (market_id >= 7))
                     Rows Removed by Filter: 10
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.107..0.107 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.048 rows=300 loops=1)
 Planning Time: 591.459 ms
 Execution Time: 543.971 ms
(24 rows)

                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=102419.87..108395.83 rows=4826 width=244) (actual time=461.120..462.421 rows=2196 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=101339.96..101351.64 rows=4674 width=212) (actual time=461.089..461.261 rows=2197 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 692kB
         ->  Hash Join  (cost=668.94..101055.09 rows=4674 width=212) (actual time=3.897..459.725 rows=2242 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=153796 width=132) (actual time=0.044..426.843 rows=377320 loops=1)
                     Filter: ((sales_price <= '4.62'::double precision) AND (sales_price >= '-1'::double precision))
                     Rows Removed by Filter: 2503084
               ->  Hash  (cost=660.72..660.72 rows=658 width=80) (actual time=3.066..3.068 rows=86 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 19kB
                     ->  Hash Join  (cost=16.75..660.72 rows=658 width=80) (actual time=0.154..3.041 rows=86 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=5813 width=52) (actual time=0.008..2.480 rows=3829 loops=1)
                                 Filter: ((class_id <= '16'::double precision) AND (class_id >= '10'::double precision))
                                 Rows Removed by Filter: 14171
                           ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.098..0.098 rows=291 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.006..0.060 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                       Rows Removed by Filter: 6
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.022..0.116 rows=2201 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
 Planning Time: 486.168 ms
 Execution Time: 462.567 ms
(28 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=92053.47..110857.19 rows=13594 width=244) (actual time=7347.621..8740.454 rows=1896885 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Merge Join  (cost=91497.38..108947.76 rows=13594 width=192) (actual time=7342.905..8206.622 rows=1341917 loops=1)
         Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
         ->  Sort  (cost=923.77..956.21 rows=12977 width=32) (actual time=0.018..0.024 rows=6 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..37.20 rows=12977 width=32) (actual time=0.007..0.011 rows=6 loops=1)
                     Filter: ((number_employees <= 294) AND (number_employees >= 229) AND (company_id <= 877) AND (company_id >= 226))
                     Rows Removed by Filter: 6
         ->  Sort  (cost=90573.61..90613.61 rows=15998 width=160) (actual time=7342.877..7728.000 rows=2685548 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external sort  Disk: 482200kB
               ->  Merge Join  (cost=89191.74..89456.54 rows=15998 width=160) (actual time=2368.952..4062.144 rows=2750652 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2313.204..2750.835 rows=2750653 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 397328kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.033..326.059 rows=2880404 loops=1)
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=55.738..314.538 rows=2759726 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.020..13.066 rows=100000 loops=1)
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.689..4.689 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.918 rows=18000 loops=1)
 Planning Time: 533.049 ms
 Execution Time: 8941.995 ms
(28 rows)

                                                                                                                                                            QUERY PLAN                                                                                                                                                             
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=899088.56..1013987.04 rows=695585 width=240) (actual time=2411.731..3157.737 rows=384321 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=898532.48..941693.49 rows=720576 width=188) (actual time=2377.530..2975.853 rows=1025485 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..8.609 rows=100000 loops=1)
         ->  Hash  (cost=873824.51..873824.51 rows=706717 width=160) (actual time=2377.480..2377.483 rows=1025485 loops=1)
               Buckets: 32768  Batches: 64  Memory Usage: 3383kB
               ->  Merge Join  (cost=290147.05..873824.51 rows=706717 width=160) (actual time=1278.813..1850.740 rows=1031897 loops=1)
                     Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
                     ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.115..0.163 rows=300 loops=1)
                           Sort Key: ((promotion.promo_sk)::double precision)
                           Sort Method: quicksort  Memory: 48kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.009..0.057 rows=300 loops=1)
                     ->  Materialize  (cost=289084.74..292519.69 rows=686990 width=132) (actual time=1278.690..1580.801 rows=1031898 loops=1)
                           ->  Sort  (cost=289084.74..290802.21 rows=686990 width=132) (actual time=1278.686..1447.220 rows=1031898 loops=1)
                                 Sort Key: store_sales.promo_sk
                                 Sort Method: external merge  Disk: 148184kB
                                 ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=686990 width=132) (actual time=0.038..687.137 rows=1044460 loops=1)
                                       Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '2814.35'::double precision) AND (net_paid >= '363.3'::double precision))
                                       Rows Removed by Filter: 1835944
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.786..4.786 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.839 rows=18000 loops=1)
 Planning Time: 485.432 ms
 Execution Time: 3197.550 ms
(25 rows)

                                                                                                                                                                                                                                                                          QUERY PLAN                                                                                                                                                                                                                                                                          

 Merge Join  (cost=166532.43..187779.62 rows=4432 width=244) (actual time=707.272..707.648 rows=698 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=161787.99..161798.67 rows=4269 width=212) (actual time=707.253..707.289 rows=699 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 431kB
         ->  Merge Join  (cost=161374.19..161530.56 rows=4269 width=212) (actual time=687.356..706.703 rows=1439 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=158590.88..158601.55 rows=4269 width=184) (actual time=631.961..632.101 rows=1440 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: quicksort  Memory: 432kB
                     ->  Hash Join  (cost=556.09..158333.44 rows=4269 width=184) (actual time=6.446..631.091 rows=1443 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=4218 width=132) (actual time=0.052..622.840 rows=14324 loops=1)
                                 Filter: ((sales_price <= '43.84'::double precision) AND (sales_price >= '3.89'::double precision) AND (ext_discount_amt <= '293.41'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '4847.55'::double precision) AND (ext_wholesale_cost >= '2620.74'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid_inc_tax <= '410.35'::double precision) AND (net_paid_inc_tax >= '72.24'::double precision))
                                 Rows Removed by Filter: 2866080
                           ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.768..4.769 rows=17954 loops=1)
                                 Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                                 ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.948 rows=18000 loops=1)
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=55.386..65.211 rows=100352 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..13.096 rows=100000 loops=1)
   ->  Sort  (cost=4744.43..4893.05 rows=59448 width=32) (actual time=0.015..0.046 rows=701 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=59448 width=32) (actual time=0.008..0.010 rows=6 loops=1)
               Filter: ((tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.03'::double precision))
               Rows Removed by Filter: 6
 Planning Time: 540.088 ms
 Execution Time: 708.569 ms
(30 rows)



 Hash Join  (cost=5133.39..169774.24 rows=343 width=244) (actual time=52.572..682.466 rows=79 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=4577.30..169213.97 rows=343 width=192) (actual time=43.934..673.757 rows=79 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=42.69..157785.96 rows=203 width=164) (actual time=0.339..626.115 rows=2583 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=2891 width=132) (actual time=0.237..623.479 rows=14880 loops=1)
                     Filter: ((list_price <= '140.93'::double precision) AND (list_price >= '66.1'::double precision) AND (sales_price <= '17.31'::double precision) AND (sales_price >= '5.82'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '260.49'::double precision) AND (ext_sales_price >= '18.81'::double precision) AND (net_paid_inc_tax <= '1487.98'::double precision) AND (net_paid_inc_tax >= '125.37'::double precision))
                     Rows Removed by Filter: 2865524
               ->  Hash  (cost=37.20..37.20 rows=439 width=32) (actual time=0.009..0.010 rows=1 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on store  (cost=0.00..37.20 rows=439 width=32) (actual time=0.006..0.007 rows=1 loops=1)
                           Filter: ((number_employees <= 278) AND (number_employees >= 278) AND (devision_id <= 1) AND (devision_id >= 1))
                           Rows Removed by Filter: 11
         ->  Hash  (cost=2227.00..2227.00 rows=119329 width=28) (actual time=36.254..36.254 rows=3236 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 563kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=119329 width=28) (actual time=0.013..21.308 rows=3236 loops=1)
                     Filter: ((birth_day <= '1'::double precision) AND (birth_day >= '-1'::double precision))
                     Rows Removed by Filter: 96764
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=8.613..8.613 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.017..3.485 rows=18000 loops=1)
 Planning Time: 503.127 ms
 Execution Time: 682.567 ms
(24 rows)

                                                                                                                                                           QUERY PLAN                                                                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=146337.96..149137.19 rows=2262 width=244) (actual time=985.842..1009.827 rows=38729 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=145258.04..145263.52 rows=2189 width=212) (actual time=985.788..991.855 rows=38730 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 8888kB
         ->  Merge Join  (cost=144350.75..145136.58 rows=2189 width=212) (actual time=901.097..959.680 rows=38803 loops=1)
               Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
               ->  Sort  (cost=11793.59..12018.72 rows=90052 width=28) (actual time=34.500..35.702 rows=19660 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: quicksort  Memory: 2305kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=90052 width=28) (actual time=0.023..28.192 rows=19661 loops=1)
                           Filter: ((birth_year <= '1988'::double precision) AND (birth_year >= '1975'::double precision))
                           Rows Removed by Filter: 80339
               ->  Sort  (cost=132557.16..132568.20 rows=4417 width=184) (actual time=866.573..898.111 rows=198168 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external sort  Disk: 40080kB
                     ->  Hash Join  (cost=553.23..132289.74 rows=4417 width=184) (actual time=7.360..664.265 rows=198784 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=34412 width=132) (actual time=0.058..590.685 rows=192211 loops=1)
                                 Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '382.4'::double precision) AND (ext_sales_price >= '16.28'::double precision) AND (ext_tax <= '78.7'::double precision) AND (ext_tax >= '8.28'::double precision))
                                 Rows Removed by Filter: 2688193
                           ->  Hash  (cost=456.00..456.00 rows=7778 width=52) (actual time=7.199..7.200 rows=7743 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 730kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=7778 width=52) (actual time=0.008..5.496 rows=7753 loops=1)
                                       Filter: ((manufact_id <= '552'::double precision) AND (manufact_id >= '204'::double precision))
                                       Rows Removed by Filter: 10247
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.041..1.733 rows=38734 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.019..0.023 rows=12 loops=1)
 Planning Time: 526.677 ms
 Execution Time: 1020.592 ms
(32 rows)

                                                                                       QUERY PLAN                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=800.20..119512.43 rows=1516 width=244) (actual time=5.199..1125.561 rows=17015 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=604.11..118499.86 rows=1577 width=216) (actual time=5.062..1015.536 rows=1046713 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Hash Join  (cost=48.02..117786.81 rows=1577 width=164) (actual time=0.054..738.884 rows=222834 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=183751 width=132) (actual time=0.037..626.775 rows=683781 loops=1)
                     Filter: ((net_profit <= '88.8'::double precision) AND (net_profit >= '-262.71'::double precision))
                     Rows Removed by Filter: 2196623
               ->  Hash  (cost=44.00..44.00 rows=322 width=32) (actual time=0.009..0.010 rows=4 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on store  (cost=0.00..44.00 rows=322 width=32) (actual time=0.005..0.007 rows=4 loops=1)
                           Filter: ((number_employees <= 297) AND (number_employees >= 294) AND (market_id <= 10) AND (market_id >= 6) AND (company_id <= 811) AND (company_id >= 175))
                           Rows Removed by Filter: 8
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.982..4.982 rows=17954 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.004..1.974 rows=18000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.097..0.098 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.049 rows=300 loops=1)
 Planning Time: 525.371 ms
 Execution Time: 1126.611 ms
(22 rows)

                                                                                                                                                                                                                                           QUERY PLAN                                                                                                                                                                                                                                            
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=709.07..158810.26 rows=86 width=244) (actual time=6.410..607.869 rows=49 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Nested Loop  (cost=512.99..158567.88 rows=89 width=216) (actual time=5.133..607.356 rows=1767 loops=1)
         Join Filter: (store_sales.store_sk = (store.store_sk)::double precision)
         Rows Removed by Join Filter: 28290
         ->  Hash Join  (cost=512.99..157977.65 rows=709 width=184) (actual time=4.556..601.341 rows=10019 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=1200 width=132) (actual time=0.098..587.783 rows=46667 loops=1)
                     Filter: ((quantity <= '45'::double precision) AND (quantity >= '5'::double precision) AND (list_price <= '119.59'::double precision) AND (list_price >= '14.72'::double precision) AND (sales_price <= '11.61'::double precision) AND (sales_price >= '5.34'::double precision) AND (net_paid <= '3900.65'::double precision) AND (net_paid >= '154.71'::double precision) AND (net_profit <= '338.24'::double precision) AND (net_profit >= '-1724.15'::double precision))
                     Rows Removed by Filter: 2833737
               ->  Hash  (cost=456.00..456.00 rows=4559 width=52) (actual time=4.266..4.266 rows=10825 loops=1)
                     Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 1059kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=4559 width=52) (actual time=0.005..2.867 rows=10837 loops=1)
                           Filter: ((category_id <= '7'::double precision) AND (category_id >= '2'::double precision))
                           Rows Removed by Filter: 7163
         ->  Materialize  (cost=0.00..44.22 rows=44 width=32) (actual time=0.000..0.000 rows=3 loops=10019)
               ->  Seq Scan on store  (cost=0.00..44.00 rows=44 width=32) (actual time=0.004..0.006 rows=3 loops=1)
                     Filter: ((floor_space <= 9294113) AND (floor_space >= 9078805) AND (devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 226) AND (company_id >= 27))
                     Rows Removed by Filter: 9
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.096..0.096 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.048 rows=300 loops=1)
 Planning Time: 473.723 ms
 Execution Time: 607.945 ms
(24 rows)

                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=93905.96..98703.06 rows=3932 width=244) (actual time=3870.368..4061.782 rows=294505 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=92826.05..92835.43 rows=3752 width=212) (actual time=3870.327..3924.376 rows=294506 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 68256kB
         ->  Merge Join  (cost=89397.66..92603.32 rows=3752 width=212) (actual time=3085.780..3660.493 rows=301663 loops=1)
               Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
               ->  Sort  (cost=2989.22..2998.60 rows=3752 width=80) (actual time=3.085..3.101 rows=33 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 29kB
                     ->  Hash Join  (cost=196.09..2766.50 rows=3752 width=80) (actual time=0.219..3.063 rows=33 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=3909 width=52) (actual time=0.019..2.664 rows=2372 loops=1)
                                 Filter: ((class_id <= '6'::double precision) AND (class_id >= '4'::double precision) AND (category_id <= '8'::double precision) AND (category_id >= '3'::double precision))
                                 Rows Removed by Filter: 15628
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.080..0.081 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.038 rows=300 loops=1)
               ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=3032.652..3371.065 rows=2750921 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: external sort  Disk: 408576kB
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.034..326.025 rows=2880404 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.032..12.766 rows=294510 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.017..0.020 rows=12 loops=1)
 Planning Time: 508.311 ms
 Execution Time: 4153.466 ms
(28 rows)

                                                                                                                                                                                                               QUERY PLAN                                                                                                                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=155037.03..155079.67 rows=980 width=240) (actual time=767.337..768.623 rows=3251 loops=1)
   Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
   ->  Sort  (cost=42.77..44.62 rows=740 width=28) (actual time=0.140..0.167 rows=294 loops=1)
         Sort Key: ((promotion.promo_sk)::double precision)
         Sort Method: quicksort  Memory: 47kB
         ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.017..0.082 rows=294 loops=1)
               Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
               Rows Removed by Filter: 6
   ->  Sort  (cost=154994.26..154996.51 rows=900 width=212) (actual time=767.193..767.361 rows=3328 loops=1)
         Sort Key: store_sales.promo_sk
         Sort Method: quicksort  Memory: 981kB
         ->  Merge Join  (cost=154354.70..154950.08 rows=900 width=212) (actual time=757.931..765.367 rows=3331 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=147221.24..147240.45 rows=7687 width=184) (actual time=744.605..747.153 rows=20807 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 4120kB
                     ->  Hash Join  (cost=688.92..146725.12 rows=7687 width=184) (actual time=5.763..721.127 rows=20846 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=29949 width=132) (actual time=0.044..680.948 rows=256643 loops=1)
                                 Filter: ((quantity <= '67'::double precision) AND (quantity >= '28'::double precision) AND (sales_price <= '74.09'::double precision) AND (sales_price >= '12.66'::double precision) AND (ext_wholesale_cost <= '5894.64'::double precision) AND (ext_wholesale_cost >= '2464.83'::double precision) AND (net_profit <= '1652.62'::double precision) AND (net_profit >= '-4198.19'::double precision))
                                 Rows Removed by Filter: 2623761
                           ->  Hash  (cost=456.00..456.00 rows=18634 width=52) (actual time=5.495..5.496 rows=16125 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 1642kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=18634 width=52) (actual time=0.007..3.314 rows=16144 loops=1)
                                       Filter: ((category_id <= '9'::double precision) AND (category_id >= '1'::double precision))
                                       Rows Removed by Filter: 1856
               ->  Sort  (cost=7133.47..7287.64 rows=61669 width=28) (actual time=13.312..14.029 rows=17198 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: quicksort  Memory: 1641kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=61669 width=28) (actual time=0.015..10.800 rows=16089 loops=1)
                           Filter: ((birth_month <= '11'::double precision) AND (birth_month >= '10'::double precision))
                           Rows Removed by Filter: 83911
 Planning Time: 527.792 ms
 Execution Time: 769.883 ms
(34 rows)

                                                                                                                                                                 QUERY PLAN                                                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=132450.32..142551.70 rows=255 width=240) (actual time=793.283..805.439 rows=4 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=132254.23..142223.69 rows=255 width=212) (actual time=790.292..805.284 rows=137 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=85708 width=28) (actual time=0.008..11.626 rows=40505 loops=1)
               Filter: ((birth_year <= '1972'::double precision) AND (birth_year >= '1944'::double precision))
               Rows Removed by Filter: 59495
         ->  Hash  (cost=132227.81..132227.81 rows=2114 width=184) (actual time=790.212..790.214 rows=330 loops=1)
               Buckets: 4096  Batches: 1  Memory Usage: 105kB
               ->  Hash Join  (cost=564.33..132227.81 rows=2114 width=184) (actual time=4.212..789.949 rows=332 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=35973 width=132) (actual time=0.040..761.817 rows=246187 loops=1)
                           Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (net_paid_inc_tax <= '7106.94'::double precision) AND (net_paid_inc_tax >= '9.02'::double precision) AND (net_profit <= '-1119.72'::double precision) AND (net_profit >= '-2111.34'::double precision))
                           Rows Removed by Filter: 2634217
                     ->  Hash  (cost=546.00..546.00 rows=1466 width=52) (actual time=2.671..2.672 rows=580 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 66kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=1466 width=52) (actual time=0.023..2.587 rows=581 loops=1)
                                 Filter: ((current_price <= '9.55'::double precision) AND (current_price >= '6.02'::double precision) AND (class_id <= '2'::double precision) AND (class_id >= '2'::double precision))
                                 Rows Removed by Filter: 17419
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.103..0.103 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.055 rows=300 loops=1)
 Planning Time: 551.243 ms
 Execution Time: 805.510 ms
(24 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=86498.88..93532.83 rows=20077 width=240) (actual time=799.298..884.276 rows=19817 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=61930 width=28) (actual time=0.017..21.226 rows=24399 loops=1)
         Filter: ((birth_month <= '9'::double precision) AND (birth_month >= '7'::double precision))
         Rows Removed by Filter: 75601
   ->  Hash  (cost=86489.51..86489.51 rows=750 width=212) (actual time=734.113..734.117 rows=82040 loops=1)
         Buckets: 16384 (originally 1024)  Batches: 8 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=572.84..86489.51 rows=750 width=212) (actual time=7.596..671.634 rows=83960 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Hash Join  (cost=16.75..85860.60 rows=731 width=160) (actual time=0.169..633.136 rows=62316 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.037..328.705 rows=2880404 loops=1)
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.120..0.121 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.072 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=7.405..7.406 rows=17954 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.005..2.868 rows=18000 loops=1)
 Planning Time: 497.729 ms
 Execution Time: 885.490 ms
(22 rows)



 Hash Join  (cost=1097.05..176164.73 rows=715 width=244) (actual time=5.290..720.216 rows=2728 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=883.36..172847.67 rows=685 width=212) (actual time=5.234..718.896 rows=2732 loops=1)
         Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
         ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=6566 width=132) (actual time=0.045..698.306 rows=124935 loops=1)
               Filter: ((list_price <= '139.13'::double precision) AND (list_price >= '13.86'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '2567.07'::double precision) AND (ext_sales_price >= '74.25'::double precision) AND (ext_wholesale_cost <= '6809.61'::double precision) AND (ext_wholesale_cost >= '3164.79'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '2668.95'::double precision) AND (net_paid >= '914.85'::double precision))
               Rows Removed by Filter: 2755469
         ->  Hash  (cost=874.48..874.48 rows=711 width=80) (actual time=5.050..5.052 rows=291 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 43kB
               ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.135..4.942 rows=291 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..2.152 rows=18000 loops=1)
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.112..0.113 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.066 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.031..0.032 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.012..0.024 rows=12 loops=1)
 Planning Time: 567.383 ms
 Execution Time: 720.429 ms
(22 rows)

                                                                                                                                                                                                                                             QUERY PLAN                                                                                                                                                                                                                                             
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=2620.39..160714.53 rows=167 width=240) (actual time=41.602..742.427 rows=889 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=2424.30..160431.93 rows=167 width=212) (actual time=39.684..736.465 rows=42617 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=507.21..157878.82 rows=167 width=184) (actual time=3.510..658.519 rows=42700 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=2353 width=132) (actual time=0.038..628.631 rows=130177 loops=1)
                     Filter: ((quantity <= '55'::double precision) AND (quantity >= '15'::double precision) AND (list_price <= '113.21'::double precision) AND (list_price >= '22.82'::double precision) AND (ext_list_price <= '9770.4'::double precision) AND (ext_list_price >= '1342.2'::double precision) AND (ext_tax <= '401.54'::double precision) AND (ext_tax >= '63'::double precision) AND (net_profit <= '539.06'::double precision) AND (net_profit >= '-2018.41'::double precision))
                     Rows Removed by Filter: 2750227
               ->  Hash  (cost=456.00..456.00 rows=4097 width=52) (actual time=3.427..3.428 rows=5856 loops=1)
                     Buckets: 8192  Batches: 1  Memory Usage: 568kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=4097 width=52) (actual time=0.006..2.723 rows=5856 loops=1)
                           Filter: ((manufact_id <= '675'::double precision) AND (manufact_id >= '320'::double precision))
                           Rows Removed by Filter: 12144
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=33.567..33.567 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.005..10.424 rows=100000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.094..0.094 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.047 rows=300 loops=1)
 Planning Time: 485.959 ms
 Execution Time: 742.584 ms
(22 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=99941.73..176814.32 rows=92080 width=244) (actual time=1945.956..2636.332 rows=18791 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=99903.94..154541.37 rows=250335 width=216) (actual time=1945.812..2553.896 rows=897545 loops=1)
         Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
         ->  Sort  (cost=86292.84..86305.82 rows=5193 width=184) (actual time=1945.767..2145.612 rows=1076615 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 217304kB
               ->  Hash Join  (cost=519.99..85972.38 rows=5193 width=184) (actual time=3.749..999.811 rows=1127245 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.035..339.476 rows=2880404 loops=1)
                     ->  Hash  (cost=456.00..456.00 rows=5119 width=52) (actual time=3.698..3.699 rows=7026 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 668kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=5119 width=52) (actual time=0.006..2.826 rows=7026 loops=1)
                                 Filter: ((manufact_id <= '978'::double precision) AND (manufact_id >= '336'::double precision))
                                 Rows Removed by Filter: 10974
         ->  Materialize  (cost=13611.10..14236.43 rows=125065 width=32) (actual time=0.035..39.415 rows=717537 loops=1)
               ->  Sort  (cost=13611.10..13923.76 rows=125065 width=32) (actual time=0.032..0.035 rows=9 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..30.40 rows=125065 width=32) (actual time=0.018..0.021 rows=9 loops=1)
                           Filter: ((tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.03'::double precision))
                           Rows Removed by Filter: 3
   ->  Hash  (cost=7.50..7.50 rows=2423 width=28) (actual time=0.106..0.106 rows=291 loops=1)
         Buckets: 4096  Batches: 1  Memory Usage: 51kB
         ->  Seq Scan on promotion  (cost=0.00..7.50 rows=2423 width=28) (actual time=0.016..0.068 rows=294 loops=1)
               Filter: ((cost <= '1000'::double precision) AND (cost >= '-1'::double precision))
               Rows Removed by Filter: 6
 Planning Time: 523.258 ms
 Execution Time: 2674.101 ms
(29 rows)

                                                                                                                                                                                                          QUERY PLAN                                                                                                                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=145054.07..150985.78 rows=4915 width=244) (actual time=642.493..670.361 rows=24 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=144857.98..148142.02 rows=5112 width=216) (actual time=642.264..669.681 rows=4605 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Merge Join  (cost=144169.06..147198.14 rows=2479 width=164) (actual time=636.934..659.024 rows=41476 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=143089.14..143095.07 rows=2369 width=132) (actual time=636.905..642.246 rows=41477 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 5944kB
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=2369 width=132) (actual time=0.054..616.680 rows=41592 loops=1)
                           Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '8571.96'::double precision) AND (ext_list_price >= '5468.04'::double precision) AND (ext_tax <= '87.07'::double precision) AND (ext_tax >= '4.92'::double precision) AND (net_profit <= '-194.91'::double precision) AND (net_profit >= '-2985.7'::double precision))
                           Rows Removed by Filter: 2838812
               ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.022..1.803 rows=41481 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.009..0.011 rows=12 loops=1)
         ->  Hash  (cost=456.00..456.00 rows=18634 width=52) (actual time=5.288..5.288 rows=16125 loops=1)
               Buckets: 32768  Batches: 1  Memory Usage: 1642kB
               ->  Seq Scan on item  (cost=0.00..456.00 rows=18634 width=52) (actual time=0.008..3.288 rows=16144 loops=1)
                     Filter: ((category_id <= '9'::double precision) AND (category_id >= '1'::double precision))
                     Rows Removed by Filter: 1856
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.103..0.103 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.024..0.056 rows=300 loops=1)
 Planning Time: 517.244 ms
 Execution Time: 671.373 ms
(26 rows)

                                                                                                                  QUERY PLAN                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=125017.79..132900.94 rows=3596 width=244) (actual time=696.581..714.871 rows=6385 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=68156 width=28) (actual time=0.017..11.399 rows=41365 loops=1)
         Filter: ((birth_day <= '17'::double precision) AND (birth_day >= '5'::double precision))
         Rows Removed by Filter: 58635
   ->  Hash  (cost=124979.32..124979.32 rows=3077 width=216) (actual time=696.545..696.548 rows=15308 loops=1)
         Buckets: 16384 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 3954kB
         ->  Merge Join  (cost=121174.60..124979.32 rows=3077 width=216) (actual time=680.689..690.047 rows=15354 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=120094.69..120102.13 rows=2976 width=184) (actual time=680.660..682.720 rows=15355 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 3056kB
                     ->  Hash Join  (cost=514.10..119923.01 rows=2976 width=184) (actual time=2.853..665.669 rows=15451 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=58745 width=132) (actual time=0.035..613.665 rows=505132 loops=1)
                                 Filter: ((ext_list_price <= '4197.76'::double precision) AND (ext_list_price >= '1086.84'::double precision) AND (net_profit <= '-6.86'::double precision) AND (net_profit >= '-1161.84'::double precision))
                                 Rows Removed by Filter: 2375272
                           ->  Hash  (cost=456.00..456.00 rows=4648 width=52) (actual time=2.592..2.593 rows=2104 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 245kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=4648 width=52) (actual time=0.007..2.324 rows=2106 loops=1)
                                       Filter: ((manufact_id <= '158'::double precision) AND (manufact_id >= '95'::double precision))
                                       Rows Removed by Filter: 15894
               ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.022..0.709 rows=15359 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
 Planning Time: 478.430 ms
 Execution Time: 715.816 ms
(28 rows)

                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=150127.51..205090.94 rows=64570 width=240) (actual time=2702.091..3197.564 rows=763457 loops=1)
   Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
   ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.122..0.159 rows=300 loops=1)
         Sort Key: ((promotion.promo_sk)::double precision)
         Sort Method: quicksort  Memory: 48kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.065 rows=300 loops=1)
   ->  Materialize  (cost=149065.20..149388.05 rows=64570 width=212) (actual time=2701.959..2953.015 rows=763458 loops=1)
         ->  Sort  (cost=149065.20..149226.63 rows=64570 width=212) (actual time=2701.956..2855.554 rows=763458 loops=1)
               Sort Key: store_sales.promo_sk
               Sort Method: external merge  Disk: 175232kB
               ->  Hash Join  (cost=127927.09..137284.47 rows=64570 width=212) (actual time=1356.689..2005.271 rows=768035 loops=1)
                     Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..9.176 rows=100000 loops=1)
                     ->  Hash  (cost=125479.96..125479.96 rows=64570 width=184) (actual time=1356.638..1356.640 rows=768035 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 64 (originally 4)  Memory Usage: 3841kB
                           ->  Hash Join  (cost=588.54..125479.96 rows=64570 width=184) (actual time=5.148..836.873 rows=777523 loops=1)
                                 Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=264199 width=132) (actual time=0.037..575.181 rows=825465 loops=1)
                                       Filter: ((ext_tax <= '40.06'::double precision) AND (ext_tax >= '5.96'::double precision))
                                       Rows Removed by Filter: 2054939
                                 ->  Hash  (cost=456.00..456.00 rows=10603 width=52) (actual time=5.083..5.084 rows=14395 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 1365kB
                                       ->  Seq Scan on item  (cost=0.00..456.00 rows=10603 width=52) (actual time=0.006..3.087 rows=14411 loops=1)
                                             Filter: ((category_id <= '8'::double precision) AND (category_id >= '1'::double precision))
                                             Rows Removed by Filter: 3589
 Planning Time: 666.898 ms
 Execution Time: 3258.289 ms
(27 rows)

                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=121401.39..136730.84 rows=12384 width=244) (actual time=663.827..664.593 rows=1331 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=120321.48..120351.45 rows=11989 width=212) (actual time=663.796..663.899 rows=1332 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 404kB
         ->  Hash Join  (cost=866.43..119509.27 rows=11989 width=212) (actual time=3.993..663.035 rows=1340 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=477177 width=132) (actual time=0.062..590.708 rows=883474 loops=1)
                     Filter: ((ext_discount_amt <= '299.87'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '3164.7'::double precision) AND (ext_list_price >= '668.1'::double precision))
                     Rows Removed by Filter: 1996930
               ->  Hash  (cost=857.86..857.86 rows=686 width=80) (actual time=3.577..3.579 rows=73 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 17kB
                     ->  Hash Join  (cost=16.75..857.86 rows=686 width=80) (actual time=0.158..3.556 rows=73 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=9126 width=52) (actual time=0.009..2.941 rows=4263 loops=1)
                                 Filter: ((current_price <= '8.8'::double precision) AND (current_price >= '4.44'::double precision) AND (category_id <= '9'::double precision) AND (category_id >= '2'::double precision))
                                 Rows Removed by Filter: 13737
                           ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.098..0.098 rows=291 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.009..0.061 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                       Rows Removed by Filter: 6
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.023..0.080 rows=1336 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.013 rows=12 loops=1)
 Planning Time: 527.366 ms
 Execution Time: 664.715 ms
(28 rows)

                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=720956.10..816325.02 rows=78290 width=244) (actual time=865.442..870.220 rows=8242 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.037..0.039 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.019..0.025 rows=12 loops=1)
   ->  Materialize  (cost=719876.18..720250.13 rows=74790 width=212) (actual time=865.396..867.372 rows=8243 loops=1)
         ->  Sort  (cost=719876.18..720063.16 rows=74790 width=212) (actual time=865.393..866.022 rows=8243 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 2574kB
               ->  Hash Join  (cost=28443.87..706149.74 rows=74790 width=212) (actual time=16.691..860.124 rows=8438 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=338424 width=132) (actual time=0.054..517.539 rows=834670 loops=1)
                           Filter: ((ext_sales_price <= '1478.52'::double precision) AND (ext_sales_price >= '382.63'::double precision))
                           Rows Removed by Filter: 2045734
                     ->  Hash  (cost=27207.51..27207.51 rows=49069 width=80) (actual time=11.481..11.483 rows=130 loops=1)
                           Buckets: 65536  Batches: 2  Memory Usage: 520kB
                           ->  Hash Join  (cost=196.09..27207.51 rows=49069 width=80) (actual time=0.184..6.610 rows=130 loops=1)
                                 Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=51103 width=52) (actual time=0.010..4.986 rows=7914 loops=1)
                                       Filter: ((class_id <= '3'::double precision) AND (class_id >= '1'::double precision) AND (category_id <= '9'::double precision) AND (category_id >= '1'::double precision))
                                       Rows Removed by Filter: 10086
                                 ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.133..0.133 rows=293 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                       ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.009..0.056 rows=300 loops=1)
 Planning Time: 496.354 ms
 Execution Time: 870.637 ms
(27 rows)

                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=786865.62..870034.37 rows=455863 width=244) (actual time=3987.278..5273.866 rows=367190 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=786309.53..824094.49 rows=455863 width=192) (actual time=3830.606..5034.556 rows=1624430 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.010..9.880 rows=100000 loops=1)
         ->  Hash  (cost=769926.24..769926.24 rows=455863 width=164) (actual time=3830.538..3830.541 rows=1624430 loops=1)
               Buckets: 32768 (originally 32768)  Batches: 128 (originally 32)  Memory Usage: 3841kB
               ->  Merge Join  (cost=215502.42..769926.24 rows=455863 width=164) (actual time=1678.436..2793.612 rows=1634457 loops=1)
                     Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                     ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.025..0.031 rows=11 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.007..0.012 rows=12 loops=1)
                     ->  Materialize  (cost=214422.51..216598.60 rows=435219 width=132) (actual time=1678.402..2370.411 rows=1634458 loops=1)
                           ->  Sort  (cost=214422.51..215510.55 rows=435219 width=132) (actual time=1678.398..1949.683 rows=1634458 loops=1)
                                 Sort Key: store_sales.store_sk
                                 Sort Method: external merge  Disk: 234656kB
                                 ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=435219 width=132) (actual time=0.052..729.977 rows=1654371 loops=1)
                                       Filter: ((sales_price <= '129.07'::double precision) AND (sales_price >= '8.02'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                       Rows Removed by Filter: 1226033
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=8.317..8.318 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.018..3.246 rows=18000 loops=1)
 Planning Time: 555.970 ms
 Execution Time: 5365.925 ms
(25 rows)

                                                                                                                                                              QUERY PLAN                                                                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=133633.28..139456.80 rows=2175 width=240) (actual time=579.967..592.408 rows=3 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=79363 width=28) (actual time=0.022..10.156 rows=29325 loops=1)
         Filter: ((birth_year <= '1944'::double precision) AND (birth_year >= '1924'::double precision))
         Rows Removed by Filter: 70675
   ->  Hash  (cost=133608.29..133608.29 rows=1999 width=212) (actual time=579.844..579.847 rows=12 loops=1)
         Buckets: 2048  Batches: 1  Memory Usage: 19kB
         ->  Hash Join  (cost=571.61..133608.29 rows=1999 width=212) (actual time=73.142..579.820 rows=12 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Hash Join  (cost=16.75..130925.35 rows=24838 width=160) (actual time=0.375..574.623 rows=5544 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=72776 width=132) (actual time=0.052..545.836 rows=254087 loops=1)
                           Filter: ((sales_price <= '33.18'::double precision) AND (sales_price >= '0.39'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '1685.76'::double precision) AND (ext_sales_price >= '813.51'::double precision))
                           Rows Removed by Filter: 2626317
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.163..0.164 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.010..0.095 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
               ->  Hash  (cost=546.00..546.00 rows=709 width=52) (actual time=4.353..4.354 rows=427 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 45kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=709 width=52) (actual time=0.021..4.232 rows=427 loops=1)
                           Filter: ((current_price <= '3.99'::double precision) AND (current_price >= '2.87'::double precision) AND (manufact_id <= '497'::double precision) AND (manufact_id >= '309'::double precision))
                           Rows Removed by Filter: 17573
 Planning Time: 511.566 ms
 Execution Time: 592.500 ms
(26 rows)

                                                               QUERY PLAN                                                                
-----------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=545.30..86128.58 rows=7461 width=244) (actual time=5.599..942.073 rows=4707 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=504.29..86032.14 rows=602 width=212) (actual time=5.558..938.750 rows=14429 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Hash Join  (cost=479.65..85904.78 rows=1920 width=184) (actual time=5.367..871.377 rows=654471 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.048..341.556 rows=2880404 loops=1)
               ->  Hash  (cost=456.00..456.00 rows=1892 width=52) (actual time=5.306..5.307 rows=4092 loops=1)
                     Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 384kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=1892 width=52) (actual time=0.008..4.302 rows=4092 loops=1)
                           Filter: ((brand_id <= '4004002'::double precision) AND (brand_id >= '2004001'::double precision))
                           Rows Removed by Filter: 13908
         ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.169..0.169 rows=291 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 35kB
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.010..0.102 rows=293 loops=1)
                     Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                     Rows Removed by Filter: 7
   ->  Hash  (cost=37.20..37.20 rows=305 width=32) (actual time=0.030..0.030 rows=4 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=305 width=32) (actual time=0.020..0.024 rows=4 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 175) AND (company_id >= 27))
               Rows Removed by Filter: 8
 Planning Time: 507.424 ms
 Execution Time: 942.382 ms
(24 rows)

                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=113563.87..120463.03 rows=8260 width=240) (actual time=2672.289..3152.740 rows=12657 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=113367.79..115989.12 rows=8260 width=212) (actual time=2595.659..3100.268 rows=587255 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.008..8.923 rows=100000 loops=1)
         ->  Hash  (cost=113264.53..113264.53 rows=8260 width=184) (actual time=2595.056..2595.058 rows=587255 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 64 (originally 1)  Memory Usage: 3841kB
               ->  Hash Join  (cost=106934.68..113264.53 rows=8260 width=184) (actual time=1318.785..2222.244 rows=594801 loops=1)
                     Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=867 width=52) (actual time=0.010..2.960 rows=3628 loops=1)
                           Filter: ((category_id <= '10'::double precision) AND (category_id >= '4'::double precision) AND (manufact_id <= '189'::double precision) AND (manufact_id >= '30'::double precision))
                           Rows Removed by Filter: 14372
                     ->  Hash  (cost=99753.18..99753.18 rows=224200 width=132) (actual time=1318.709..1318.709 rows=1317042 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 128 (originally 16)  Memory Usage: 3841kB
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=224200 width=132) (actual time=0.051..723.069 rows=1348563 loops=1)
                                 Filter: ((net_paid_inc_tax <= '1026.21'::double precision) AND (net_paid_inc_tax >= '15.48'::double precision))
                                 Rows Removed by Filter: 1531841
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.147..0.147 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.018..0.066 rows=300 loops=1)
 Planning Time: 539.737 ms
 Execution Time: 3153.698 ms
(22 rows)

                                                                                                                                       QUERY PLAN                                                                                                                                       
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=928.69..132546.12 rows=3086 width=244) (actual time=7.378..708.840 rows=1642 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=45.33..131537.79 rows=3987 width=164) (actual time=0.100..692.385 rows=75215 loops=1)
         Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
         ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=83768 width=132) (actual time=0.058..640.082 rows=454480 loops=1)
               Filter: ((quantity <= '88'::double precision) AND (quantity >= '27'::double precision) AND (ext_tax <= '35.05'::double precision) AND (ext_tax >= '0.96'::double precision) AND (net_profit <= '-1'::double precision) AND (net_profit >= '-3815.71'::double precision))
               Rows Removed by Filter: 2425924
         ->  Hash  (cost=44.00..44.00 rows=106 width=32) (actual time=0.017..0.018 rows=2 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on store  (cost=0.00..44.00 rows=106 width=32) (actual time=0.007..0.012 rows=2 loops=1)
                     Filter: ((number_employees <= 294) AND (number_employees >= 245) AND (company_id <= 877) AND (company_id >= 175) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
                     Rows Removed by Filter: 10
   ->  Hash  (cost=874.48..874.48 rows=711 width=80) (actual time=7.174..7.176 rows=291 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 43kB
         ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.178..7.024 rows=291 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..3.016 rows=18000 loops=1)
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.155..0.155 rows=291 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.009..0.092 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
 Planning Time: 530.239 ms
 Execution Time: 709.057 ms
(24 rows)

                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=122045.80..174225.65 rows=90941 width=244) (actual time=659.175..661.937 rows=4547 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=117109.55..117134.82 rows=10109 width=212) (actual time=659.143..659.566 rows=5399 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 1644kB
         ->  Hash Join  (cost=538.46..116437.13 rows=10109 width=212) (actual time=3.540..656.178 rows=5465 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=441492 width=132) (actual time=0.049..579.454 rows=926507 loops=1)
                     Filter: ((list_price <= '170.64'::double precision) AND (list_price >= '47.72'::double precision) AND (ext_sales_price <= '3078'::double precision) AND (ext_sales_price >= '357.24'::double precision))
                     Rows Removed by Filter: 1953897
               ->  Hash  (cost=533.93..533.93 rows=362 width=80) (actual time=3.264..3.266 rows=77 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 18kB
                     ->  Hash Join  (cost=16.75..533.93 rows=362 width=80) (actual time=0.124..3.238 rows=77 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=1892 width=52) (actual time=0.007..2.520 rows=4822 loops=1)
                                 Filter: ((brand_id <= '4003001'::double precision) AND (brand_id >= '2001001'::double precision))
                                 Rows Removed by Filter: 13178
                           ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.104..0.105 rows=291 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.062 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                       Rows Removed by Filter: 6
   ->  Sort  (cost=4936.26..5090.41 rows=61662 width=32) (actual time=0.024..0.217 rows=4551 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=61662 width=32) (actual time=0.011..0.013 rows=10 loops=1)
               Filter: ((company_id <= 767) AND (company_id >= 27))
               Rows Removed by Filter: 2
 Planning Time: 519.233 ms
 Execution Time: 662.169 ms
(30 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=90856.61..93120.86 rows=62674 width=244) (actual time=667.981..693.459 rows=39456 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=90367.94..90377.41 rows=3788 width=212) (actual time=667.949..674.462 rows=39457 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 9264kB
         ->  Hash Join  (cost=2743.52..90142.83 rows=3788 width=212) (actual time=8.650..631.761 rows=41310 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.066..326.718 rows=2880404 loops=1)
               ->  Hash  (cost=2696.18..2696.18 rows=3788 width=80) (actual time=8.538..8.540 rows=192 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 55kB
                     ->  Hash Join  (cost=196.09..2696.18 rows=3788 width=80) (actual time=0.256..8.420 rows=192 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=3947 width=52) (actual time=0.010..5.657 rows=11773 loops=1)
                                 Filter: ((current_price <= '8.04'::double precision) AND (current_price >= '1.1'::double precision))
                                 Rows Removed by Filter: 6227
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.148..0.148 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.008..0.059 rows=300 loops=1)
   ->  Sort  (cost=488.67..506.32 rows=7062 width=32) (actual time=0.024..1.718 rows=39461 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=7062 width=32) (actual time=0.011..0.014 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 877) AND (company_id >= 27))
 Planning Time: 508.152 ms
 Execution Time: 696.442 ms
(25 rows)

                                                                                                                                                                                                              QUERY PLAN                                                                                                                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=144973.32..153085.38 rows=581 width=240) (actual time=720.334..733.214 rows=155 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=144417.24..152469.48 rows=601 width=188) (actual time=706.428..719.231 rows=106 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=129106 width=28) (actual time=0.017..10.381 rows=31924 loops=1)
               Filter: ((birth_month <= '4'::double precision) AND (birth_month >= '1'::double precision))
               Rows Removed by Filter: 68076
         ->  Hash  (cost=144407.79..144407.79 rows=755 width=160) (actual time=705.982..705.984 rows=393 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 85kB
               ->  Hash Join  (cost=24.64..144407.79 rows=755 width=160) (actual time=1.218..705.729 rows=396 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=26662 width=132) (actual time=0.255..702.637 rows=19258 loops=1)
                           Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid_inc_tax <= '1099.51'::double precision) AND (net_paid_inc_tax >= '39.19'::double precision) AND (net_profit <= '-233.73'::double precision) AND (net_profit >= '-264.6'::double precision))
                           Rows Removed by Filter: 2861146
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.251..0.251 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.010..0.153 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=13.876..13.876 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.022..5.075 rows=18000 loops=1)
 Planning Time: 547.363 ms
 Execution Time: 733.339 ms
(24 rows)

                                                                                                                     QUERY PLAN                                                                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=190340.80..296835.66 rows=82582 width=244) (actual time=2177.306..2554.519 rows=345175 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=189784.71..295272.21 rows=82582 width=192) (actual time=2172.304..2442.839 rows=345175 loops=1)
         Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
         ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.021..0.026 rows=11 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.006..0.009 rows=12 loops=1)
         ->  Materialize  (cost=188704.80..189118.47 rows=82734 width=160) (actual time=2172.275..2343.501 rows=345176 loops=1)
               ->  Sort  (cost=188704.80..188911.63 rows=82734 width=160) (actual time=2172.272..2236.447 rows=345176 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 60352kB
                     ->  Merge Join  (cost=169851.19..175440.46 rows=82734 width=160) (actual time=1422.798..1966.067 rows=347327 loops=1)
                           Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                           ->  Sort  (cost=5505.41..5611.99 rows=42633 width=28) (actual time=21.183..22.685 rows=28451 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: quicksort  Memory: 2991kB
                                 ->  Seq Scan on customer  (cost=0.00..2227.00 rows=42633 width=28) (actual time=0.014..15.796 rows=28451 loops=1)
                                       Filter: ((birth_day <= '20'::double precision) AND (birth_day >= '12'::double precision))
                                       Rows Removed by Filter: 71549
                           ->  Materialize  (cost=164345.78..165917.44 rows=314332 width=132) (actual time=1401.596..1759.723 rows=1213610 loops=1)
                                 ->  Sort  (cost=164345.78..165131.61 rows=314332 width=132) (actual time=1401.592..1606.378 rows=1213610 loops=1)
                                       Sort Key: store_sales.customer_sk
                                       Sort Method: external merge  Disk: 174280kB
                                       ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=314332 width=132) (actual time=0.037..613.652 rows=1228506 loops=1)
                                             Filter: ((ext_list_price <= '3617.79'::double precision) AND (ext_list_price >= '64.9'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                             Rows Removed by Filter: 1651898
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.975..4.976 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.029..2.158 rows=18000 loops=1)
 Planning Time: 517.375 ms
 Execution Time: 2617.607 ms
(32 rows)


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=184745.95..186522.48 rows=1165 width=240) (actual time=712.588..720.011 rows=187 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Merge Join  (cost=184189.86..185846.38 rows=1205 width=188) (actual time=707.113..714.069 rows=2512 loops=1)
         Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
         ->  Sort  (cost=25726.59..26249.68 rows=209237 width=28) (actual time=22.793..24.218 rows=31921 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: quicksort  Memory: 3263kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=209237 width=28) (actual time=0.012..16.079 rows=31924 loops=1)
                     Filter: ((birth_month <= '4'::double precision) AND (birth_month >= '-1'::double precision))
                     Rows Removed by Filter: 68076
         ->  Sort  (cost=158463.27..158467.03 rows=1502 width=160) (actual time=684.311..685.235 rows=7928 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: quicksort  Memory: 2300kB
               ->  Hash Join  (cost=16.75..158384.05 rows=1502 width=160) (actual time=0.198..678.616 rows=7934 loops=1)
                     Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=4785 width=132) (actual time=0.085..675.225 rows=8089 loops=1)
                           Filter: ((list_price <= '145.76'::double precision) AND (list_price >= '96.8'::double precision) AND (ext_sales_price <= '7452.72'::double precision) AND (ext_sales_price >= '-1'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid_inc_tax <= '2883.36'::double precision) AND (net_paid_inc_tax >= '1914.57'::double precision) AND (net_profit <= '518.67'::double precision) AND (net_profit >= '108.32'::double precision))
                           Rows Removed by Filter: 2872315
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.105..0.105 rows=294 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.010..0.063 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.438..5.438 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.015..2.155 rows=18000 loops=1)
 Planning Time: 647.668 ms
 Execution Time: 720.295 ms
(28 rows)

                                                                                                                                                                 QUERY PLAN                                                                                                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=129410.38..135332.75 rows=695 width=244) (actual time=708.576..728.139 rows=1640 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=129196.69..132065.85 rows=674 width=212) (actual time=708.531..727.589 rows=1648 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..8.113 rows=100000 loops=1)
         ->  Hash  (cost=129188.27..129188.27 rows=674 width=184) (actual time=708.512..708.514 rows=1648 loops=1)
               Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 376kB
               ->  Hash Join  (cost=566.95..129188.27 rows=674 width=184) (actual time=4.684..707.401 rows=1660 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=14104 width=132) (actual time=0.045..698.169 rows=44809 loops=1)
                           Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (net_paid_inc_tax <= '405.52'::double precision) AND (net_paid_inc_tax >= '190.12'::double precision) AND (net_profit <= '-458.28'::double precision) AND (net_profit >= '-1120.14'::double precision))
                           Rows Removed by Filter: 2835595
                     ->  Hash  (cost=546.00..546.00 rows=1676 width=52) (actual time=3.153..3.154 rows=650 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 72kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=1676 width=52) (actual time=0.011..3.058 rows=650 loops=1)
                                 Filter: ((class_id <= '8'::double precision) AND (class_id >= '1'::double precision) AND (manufact_id <= '331'::double precision) AND (manufact_id >= '306'::double precision))
                                 Rows Removed by Filter: 17350
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.021..0.021 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.012..0.014 rows=12 loops=1)
 Planning Time: 526.486 ms
 Execution Time: 728.274 ms
(22 rows)

                                                                                                                                            QUERY PLAN                                                                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=644.54..130176.50 rows=29 width=244) (actual time=308.213..530.830 rows=1 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=537.92..129208.66 rows=520 width=212) (actual time=61.036..530.777 rows=14 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Hash Join  (cost=521.17..129135.93 rows=1731 width=184) (actual time=14.851..530.445 rows=357 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=8944 width=132) (actual time=1.910..521.061 rows=683 loops=1)
                     Filter: ((quantity <= '11'::double precision) AND (quantity >= '9'::double precision) AND (net_paid <= '2181.52'::double precision) AND (net_paid >= '843.54'::double precision) AND (net_profit <= '-1'::double precision) AND (net_profit >= '-189.54'::double precision))
                     Rows Removed by Filter: 2879721
               ->  Hash  (cost=456.00..456.00 rows=5214 width=52) (actual time=8.951..8.952 rows=8878 loops=1)
                     Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 891kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=5214 width=52) (actual time=0.008..6.553 rows=8878 loops=1)
                           Filter: ((category_id <= '10'::double precision) AND (category_id >= '6'::double precision))
                           Rows Removed by Filter: 9122
         ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.212..0.213 rows=291 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 27kB
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.010..0.126 rows=294 loops=1)
                     Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                     Rows Removed by Filter: 6
   ->  Hash  (cost=37.20..37.20 rows=5553 width=32) (actual time=0.028..0.029 rows=4 loops=1)
         Buckets: 8192  Batches: 1  Memory Usage: 65kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=5553 width=32) (actual time=0.019..0.023 rows=4 loops=1)
               Filter: ((floor_space <= 9341467) AND (floor_space >= 9078805) AND (tax_percentage <= '0.11'::double precision) AND (tax_percentage >= '0.03'::double precision))
               Rows Removed by Filter: 8
 Planning Time: 493.641 ms
 Execution Time: 530.932 ms
(26 rows)

                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=115892.19..119505.91 rows=2921 width=244) (actual time=948.362..948.978 rows=1124 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=114812.28..114819.35 rows=2826 width=212) (actual time=948.336..948.422 rows=1125 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 348kB
         ->  Hash Join  (cost=110351.53..114650.27 rows=2826 width=212) (actual time=935.278..947.881 rows=1129 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=67916 width=28) (actual time=0.017..10.463 rows=16218 loops=1)
                     Filter: ((birth_month <= '5'::double precision) AND (birth_month >= '4'::double precision))
                     Rows Removed by Filter: 83782
               ->  Hash  (cost=110311.79..110311.79 rows=3179 width=184) (actual time=935.216..935.219 rows=7209 loops=1)
                     Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 1638kB
                     ->  Hash Join  (cost=105553.39..110311.79 rows=3179 width=184) (actual time=791.288..932.647 rows=7302 loops=1)
                           Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=427 width=52) (actual time=0.005..2.132 rows=1153 loops=1)
                                 Filter: ((category_id <= '6'::double precision) AND (category_id >= '3'::double precision) AND (manufact_id <= '102'::double precision) AND (manufact_id >= '15'::double precision))
                                 Rows Removed by Filter: 16847
                           ->  Hash  (cost=99753.18..99753.18 rows=181057 width=132) (actual time=791.230..791.231 rows=546446 loops=1)
                                 Buckets: 32768 (originally 32768)  Batches: 32 (originally 8)  Memory Usage: 3841kB
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=181057 width=132) (actual time=0.037..584.566 rows=559771 loops=1)
                                       Filter: ((net_paid_inc_tax <= '2841.06'::double precision) AND (net_paid_inc_tax >= '1260.63'::double precision))
                                       Rows Removed by Filter: 2320633
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.019..0.069 rows=1129 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.008..0.010 rows=12 loops=1)
 Planning Time: 528.132 ms
 Execution Time: 949.099 ms
(28 rows)

                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=90055.57..91031.39 rows=1517 width=244) (actual time=1065.451..1129.536 rows=86198 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=88682.93..88684.46 rows=615 width=212) (actual time=1049.515..1082.361 rows=172384 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 40000kB
         ->  Hash Join  (cost=85975.53..88654.44 rows=615 width=212) (actual time=790.502..950.033 rows=176658 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..8.788 rows=100000 loops=1)
               ->  Hash  (cost=85967.84..85967.84 rows=615 width=184) (actual time=790.476..790.478 rows=176658 loops=1)
                     Buckets: 32768 (originally 1024)  Batches: 16 (originally 1)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=553.58..85967.84 rows=615 width=184) (actual time=3.118..673.353 rows=185058 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.037..333.253 rows=2880404 loops=1)
                           ->  Hash  (cost=546.00..546.00 rows=606 width=52) (actual time=3.072..3.073 rows=1168 loops=1)
                                 Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 117kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=606 width=52) (actual time=0.009..2.892 rows=1168 loops=1)
                                       Filter: ((current_price <= '5.49'::double precision) AND (current_price >= '2.34'::double precision) AND (manufact_id <= '303'::double precision) AND (manufact_id >= '205'::double precision))
                                       Rows Removed by Filter: 16832
   ->  Sort  (cost=1372.64..1419.88 rows=18897 width=32) (actual time=0.029..3.731 rows=86201 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=18897 width=32) (actual time=0.018..0.021 rows=6 loops=1)
               Filter: ((floor_space <= 9341467) AND (floor_space >= 8954883))
               Rows Removed by Filter: 6
 Planning Time: 492.736 ms
 Execution Time: 1139.767 ms
(26 rows)

                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=102059.16..102749.77 rows=20365 width=244) (actual time=1209.266..1292.656 rows=88780 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=11001.60..11209.24 rows=83058 width=28) (actual time=27.658..31.951 rows=43452 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: external merge  Disk: 2128kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=83058 width=28) (actual time=0.017..16.002 rows=43452 loops=1)
               Filter: ((birth_year <= '1961'::double precision) AND (birth_year >= '1931'::double precision))
               Rows Removed by Filter: 56548
   ->  Sort  (cost=91057.56..91064.90 rows=2934 width=216) (actual time=1181.598..1215.514 rows=203009 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external sort  Disk: 47984kB
         ->  Merge Join  (cost=87256.66..90888.56 rows=2934 width=216) (actual time=798.161..932.245 rows=207876 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=86176.75..86183.85 rows=2840 width=184) (actual time=798.132..838.474 rows=207877 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 42024kB
                     ->  Hash Join  (cost=581.01..86013.82 rows=2840 width=184) (actual time=2.884..659.032 rows=217608 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.032..330.684 rows=2880404 loops=1)
                           ->  Hash  (cost=546.00..546.00 rows=2801 width=52) (actual time=2.843..2.844 rows=1371 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 150kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=2801 width=52) (actual time=0.009..2.678 rows=1371 loops=1)
                                       Filter: ((class_id <= '12'::double precision) AND (class_id >= '4'::double precision) AND (manufact_id <= '213'::double precision) AND (manufact_id >= '113'::double precision))
                                       Rows Removed by Filter: 16629
               ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.022..9.250 rows=207881 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
 Planning Time: 479.445 ms
 Execution Time: 1313.363 ms
(30 rows)

                                                                                                                                                                  QUERY PLAN                                                                                                                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=185310.32..192367.05 rows=7499 width=240) (actual time=1905.330..1925.245 rows=41043 loops=1)
   Hash Cond: ((promotion.promo_sk)::double precision = store_sales.promo_sk)
   ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.013..0.054 rows=300 loops=1)
   ->  Hash  (cost=185216.58..185216.58 rows=7499 width=212) (actual time=1905.298..1905.302 rows=41043 loops=1)
         Buckets: 16384 (originally 8192)  Batches: 4 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=183281.41..185216.58 rows=7499 width=212) (actual time=1821.439..1884.226 rows=41170 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..8.856 rows=100000 loops=1)
               ->  Hash  (cost=183187.67..183187.67 rows=7499 width=184) (actual time=1821.417..1821.419 rows=41170 loops=1)
                     Buckets: 32768 (originally 8192)  Batches: 4 (originally 1)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=162068.58..183187.67 rows=7499 width=184) (actual time=1338.528..1801.152 rows=41439 loops=1)
                           Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=57 width=52) (actual time=0.069..2.391 rows=263 loops=1)
                                 Filter: ((brand_id <= '6013008'::double precision) AND (brand_id >= '3004002'::double precision) AND (manufact_id <= '597'::double precision) AND (manufact_id >= '543'::double precision))
                                 Rows Removed by Filter: 17737
                           ->  Hash  (cost=128555.30..128555.30 rows=1046262 width=132) (actual time=1336.080..1336.081 rows=1726483 loops=1)
                                 Buckets: 32768 (originally 32768)  Batches: 128 (originally 64)  Memory Usage: 3841kB
                                 ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=1046262 width=132) (actual time=0.038..736.658 rows=1747561 loops=1)
                                       Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '6855.96'::double precision) AND (ext_list_price >= '28.2'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                       Rows Removed by Filter: 1132843
 Planning Time: 521.815 ms
 Execution Time: 1927.272 ms
(22 rows)

                                                                                                             QUERY PLAN                                                                                                              
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=103272.50..105229.50 rows=783 width=244) (actual time=524.497..541.979 rows=321 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.022..8.054 rows=100000 loops=1)
   ->  Hash  (cost=103262.72..103262.72 rows=783 width=216) (actual time=524.380..524.383 rows=321 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 89kB
         ->  Merge Join  (cost=101666.75..103262.72 rows=783 width=216) (actual time=524.021..524.261 rows=325 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=100780.60..100784.40 rows=1519 width=184) (actual time=523.989..524.043 rows=642 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: quicksort  Memory: 197kB
                     ->  Hash Join  (cost=552.26..100700.32 rows=1519 width=184) (actual time=4.754..523.605 rows=651 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=98026 width=132) (actual time=0.055..491.543 rows=347844 loops=1)
                                 Filter: ((ext_wholesale_cost <= '3247.1'::double precision) AND (ext_wholesale_cost >= '2280.8'::double precision))
                                 Rows Removed by Filter: 2532560
                           ->  Hash  (cost=546.00..546.00 rows=501 width=52) (actual time=4.617..4.618 rows=35 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 12kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=501 width=52) (actual time=0.082..4.603 rows=35 loops=1)
                                       Filter: ((current_price <= '6.84'::double precision) AND (current_price >= '0.46'::double precision) AND (manufact_id <= '39'::double precision) AND (manufact_id >= '38'::double precision))
                                       Rows Removed by Filter: 17965
               ->  Sort  (cost=886.15..917.34 rows=12478 width=32) (actual time=0.025..0.040 rows=328 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..37.20 rows=12478 width=32) (actual time=0.013..0.015 rows=6 loops=1)
                           Filter: ((number_employees <= 294) AND (number_employees >= 236) AND (company_id <= 877) AND (company_id >= 226))
                           Rows Removed by Filter: 6
 Planning Time: 512.877 ms
 Execution Time: 542.095 ms
(28 rows)

                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=106451.16..127932.09 rows=137238 width=244) (actual time=641.363..656.169 rows=24618 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=105409.90..105453.60 rows=17479 width=212) (actual time=641.330..644.595 rows=24619 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 5712kB
         ->  Hash Join  (cost=883.36..102382.75 rows=17479 width=212) (actual time=7.739..618.874 rows=25181 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=421307 width=132) (actual time=0.070..509.612 rows=1162929 loops=1)
                     Filter: ((sales_price <= '140.26'::double precision) AND (sales_price >= '33.77'::double precision))
                     Rows Removed by Filter: 1717475
               ->  Hash  (cost=874.48..874.48 rows=711 width=80) (actual time=7.621..7.623 rows=291 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 43kB
                     ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.204..7.463 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.008..3.110 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.173..0.174 rows=291 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.011..0.104 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                       Rows Removed by Filter: 6
   ->  Sort  (cost=1041.25..1077.78 rows=14613 width=32) (actual time=0.024..1.116 rows=24623 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.012..0.014 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
 Planning Time: 512.827 ms
 Execution Time: 658.112 ms
(27 rows)

                                                                                                                                                                                                           QUERY PLAN                                                                                                                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=2659.98..145909.72 rows=32 width=240) (actual time=57.733..667.190 rows=456 loops=1)
   Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
   ->  Hash Join  (cost=2463.89..145576.36 rows=32 width=212) (actual time=57.512..666.743 rows=457 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=546.80..143537.40 rows=32 width=184) (actual time=6.605..610.222 rows=459 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=9046 width=132) (actual time=0.096..602.311 rows=11193 loops=1)
                     Filter: ((list_price <= '108.44'::double precision) AND (list_price >= '18.86'::double precision) AND (ext_wholesale_cost <= '6215.76'::double precision) AND (ext_wholesale_cost >= '3601.26'::double precision) AND (net_paid <= '4660.21'::double precision) AND (net_paid >= '1184.43'::double precision) AND (net_profit <= '641.76'::double precision) AND (net_profit >= '-29.7'::double precision))
                     Rows Removed by Filter: 2869211
               ->  Hash  (cost=546.00..546.00 rows=64 width=52) (actual time=6.069..6.070 rows=696 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 68kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=64 width=52) (actual time=0.018..5.882 rows=696 loops=1)
                           Filter: ((brand_id <= '8003003'::double precision) AND (brand_id >= '6012007'::double precision) AND (manufact_id <= '632'::double precision) AND (manufact_id >= '336'::double precision))
                           Rows Removed by Filter: 17304
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=50.879..50.880 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.010..16.987 rows=100000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.195..0.195 rows=300 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.019..0.080 rows=300 loops=1)
 Planning Time: 521.055 ms
 Execution Time: 667.313 ms
(22 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=92440.68..113390.89 rows=16935 width=244) (actual time=7854.477..9148.302 rows=1789446 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=91281.31..91319.88 rows=15432 width=212) (actual time=7854.436..8259.176 rows=2236948 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 621936kB
         ->  Hash Join  (cost=89747.83..90207.77 rows=15432 width=212) (actual time=2385.399..4965.065 rows=2750652 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=89191.74..89456.54 rows=15998 width=160) (actual time=2380.698..4150.386 rows=2750652 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2323.841..2779.181 rows=2750653 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 397328kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.035..326.902 rows=2880404 loops=1)
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=56.848..320.513 rows=2759726 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.021..13.379 rows=100000 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.676..4.677 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..2.001 rows=18000 loops=1)
   ->  Sort  (cost=1159.38..1199.76 rows=16152 width=32) (actual time=0.032..79.112 rows=1789449 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=16152 width=32) (actual time=0.018..0.021 rows=7 loops=1)
               Filter: ((number_employees <= 278) AND (number_employees >= 218))
               Rows Removed by Filter: 5
 Planning Time: 536.741 ms
 Execution Time: 9372.302 ms
(28 rows)

                                                                                                                                                            QUERY PLAN                                                                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=130920.22..137250.80 rows=3464 width=244) (actual time=643.609..676.892 rows=1288 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=130724.14..135188.76 rows=3603 width=216) (actual time=643.442..672.183 rows=47541 loops=1)
         Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
         ->  Sort  (cost=129644.22..129652.95 rows=3492 width=184) (actual time=643.415..651.327 rows=47542 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 9448kB
               ->  Hash Join  (cost=564.42..129438.74 rows=3492 width=184) (actual time=4.681..608.666 rows=47830 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=69823 width=132) (actual time=0.046..570.787 rows=188793 loops=1)
                           Filter: ((ext_wholesale_cost <= '4732.52'::double precision) AND (ext_wholesale_cost >= '912.24'::double precision) AND (ext_tax <= '19.51'::double precision) AND (ext_tax >= '1.57'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '-1'::double precision))
                           Rows Removed by Filter: 2691611
                     ->  Hash  (cost=546.00..546.00 rows=1474 width=52) (actual time=4.612..4.613 rows=4331 loops=1)
                           Buckets: 8192 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 437kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=1474 width=52) (actual time=0.007..3.720 rows=4331 loops=1)
                                 Filter: ((brand_id <= '4004001'::double precision) AND (brand_id >= '1004002'::double precision) AND (category_id <= '4'::double precision) AND (category_id >= '2'::double precision))
                                 Rows Removed by Filter: 13669
         ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.020..2.136 rows=47546 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.009..0.011 rows=12 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.121..0.121 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.017..0.058 rows=300 loops=1)
 Planning Time: 570.271 ms
 Execution Time: 678.625 ms
(26 rows)

                                                                                                                                                                                                                                              QUERY PLAN                                                                                                                                                                                                                                              
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=4339.89..162799.54 rows=9 width=240) (actual time=82.796..566.672 rows=12 loops=1)
   Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
   ->  Hash Join  (cost=532.96..158016.74 rows=20 width=212) (actual time=5.816..546.939 rows=51 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Hash Join  (cost=16.75..157483.40 rows=191 width=160) (actual time=0.342..543.407 rows=673 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=3378 width=132) (actual time=0.091..538.853 rows=32157 loops=1)
                     Filter: ((quantity <= '77'::double precision) AND (quantity >= '73'::double precision) AND (sales_price <= '68.13'::double precision) AND (sales_price >= '3.37'::double precision) AND (ext_tax <= '485.72'::double precision) AND (ext_tax >= '26.86'::double precision) AND (net_paid <= '2839.1'::double precision) AND (net_paid >= '251.55'::double precision) AND (net_paid_inc_tax <= '8132.88'::double precision) AND (net_paid_inc_tax >= '897.45'::double precision))
                     Rows Removed by Filter: 2848247
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.097..0.097 rows=291 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.008..0.059 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
         ->  Hash  (cost=456.00..456.00 rows=4817 width=52) (actual time=3.287..3.288 rows=4663 loops=1)
               Buckets: 8192  Batches: 1  Memory Usage: 465kB
               ->  Seq Scan on item  (cost=0.00..456.00 rows=4817 width=52) (actual time=0.005..2.660 rows=4671 loops=1)
                     Filter: ((manufact_id <= '410'::double precision) AND (manufact_id >= '231'::double precision))
                     Rows Removed by Filter: 13329
   ->  Hash  (cost=2227.00..2227.00 rows=81674 width=28) (actual time=18.056..18.056 rows=22360 loops=1)
         Buckets: 65536  Batches: 2  Memory Usage: 1203kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=81674 width=28) (actual time=0.008..13.851 rows=22360 loops=1)
               Filter: ((birth_year <= '1954'::double precision) AND (birth_year >= '1939'::double precision))
               Rows Removed by Filter: 77640
 Planning Time: 495.001 ms
 Execution Time: 566.744 ms
(26 rows)

                                                                                                                      QUERY PLAN                                                                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=124712.28..149482.65 rows=20010 width=244) (actual time=1350.265..1501.870 rows=230231 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=123632.37..123680.80 rows=19373 width=212) (actual time=1350.226..1393.414 rows=230232 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 52920kB
         ->  Merge Join  (cost=119958.79..120264.88 rows=19373 width=212) (actual time=1012.165..1198.018 rows=231644 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=117175.48..117223.91 rows=19373 width=184) (actual time=954.857..1011.694 rows=231645 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 46160kB
                     ->  Hash Join  (cost=541.55..115795.99 rows=19373 width=184) (actual time=3.318..756.430 rows=234545 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=145679 width=132) (actual time=0.048..625.412 rows=733290 loops=1)
                                 Filter: ((ext_wholesale_cost <= '3545.9'::double precision) AND (ext_wholesale_cost >= '1004.18'::double precision) AND (net_profit <= '-53.97'::double precision) AND (net_profit >= '-2709.97'::double precision))
                                 Rows Removed by Filter: 2147114
                           ->  Hash  (cost=456.00..456.00 rows=6844 width=52) (actual time=3.250..3.251 rows=5668 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 551kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=6844 width=52) (actual time=0.007..2.543 rows=5668 loops=1)
                                       Filter: ((brand_id <= '7010001'::double precision) AND (brand_id >= '4002002'::double precision))
                                       Rows Removed by Filter: 12332
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=57.298..83.622 rows=254081 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.016..13.467 rows=100000 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.032..10.004 rows=230236 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.018..0.021 rows=12 loops=1)
 Planning Time: 504.639 ms
 Execution Time: 1528.649 ms
(30 rows)

                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                             
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=660.01..144470.55 rows=744 width=244) (actual time=5.646..635.961 rows=161 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=612.63..143782.56 rows=7728 width=212) (actual time=5.618..635.779 rows=475 loops=1)
         Hash Cond: (store_sales.item_sk = item.item_sk)
         ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=55210 width=132) (actual time=0.035..607.317 rows=343447 loops=1)
               Filter: ((ext_discount_amt <= '151.11'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '865.48'::double precision) AND (ext_wholesale_cost >= '327.76'::double precision) AND (ext_coupon_amt <= '432.58'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '2931.06'::double precision) AND (net_paid >= '37.23'::double precision))
               Rows Removed by Filter: 2536957
         ->  Hash  (cost=609.97..609.97 rows=213 width=80) (actual time=2.710..2.712 rows=18 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 11kB
               ->  Hash Join  (cost=24.64..609.97 rows=213 width=80) (actual time=0.197..2.703 rows=18 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=735 width=52) (actual time=0.008..2.475 rows=1061 loops=1)
                           Filter: ((brand_id <= '5002002'::double precision) AND (brand_id >= '4004001'::double precision) AND (manufact_id <= '747'::double precision) AND (manufact_id >= '54'::double precision))
                           Rows Removed by Filter: 16939
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.094..0.094 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.058 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=44.00..44.00 rows=270 width=32) (actual time=0.021..0.021 rows=4 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=270 width=32) (actual time=0.013..0.017 rows=4 loops=1)
               Filter: ((number_employees <= 294) AND (number_employees >= 218) AND (company_id <= 767) AND (company_id >= 220) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 8
 Planning Time: 547.038 ms
 Execution Time: 636.041 ms
(26 rows)

                                                                                                                            QUERY PLAN                                                                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=153604.86..156350.97 rows=7641 width=240) (actual time=1873.482..2415.116 rows=1275951 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Merge Join  (cost=153048.77..155007.36 rows=7910 width=188) (actual time=1868.459..2113.088 rows=426857 loops=1)
         Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
         ->  Sort  (cost=22417.74..22871.32 rows=181432 width=28) (actual time=40.106..50.068 rows=73334 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external merge  Disk: 3576kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=181432 width=28) (actual time=0.010..18.743 rows=73334 loops=1)
                     Filter: ((birth_day <= '23'::double precision) AND (birth_day >= '1'::double precision))
                     Rows Removed by Filter: 26666
         ->  Sort  (cost=130631.03..130660.70 rows=11868 width=160) (actual time=1828.341..1919.787 rows=582389 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: external sort  Disk: 104064kB
               ->  Merge Join  (cost=124416.90..129827.89 rows=11868 width=160) (actual time=800.710..1123.056 rows=585982 loops=1)
                     Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
                     ->  Sort  (cost=78.94..82.36 rows=1371 width=28) (actual time=0.122..0.161 rows=293 loops=1)
                           Sort Key: ((promotion.promo_sk)::double precision)
                           Sort Method: quicksort  Memory: 47kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.011..0.069 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
                     ->  Materialize  (cost=124337.96..124680.39 rows=68487 width=132) (actual time=800.580..970.198 rows=599888 loops=1)
                           ->  Sort  (cost=124337.96..124509.18 rows=68487 width=132) (actual time=800.576..893.409 rows=599888 loops=1)
                                 Sort Key: store_sales.promo_sk
                                 Sort Method: external merge  Disk: 86104kB
                                 ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=68487 width=132) (actual time=0.042..497.937 rows=607242 loops=1)
                                       Filter: ((ext_wholesale_cost <= '857.46'::double precision) AND (ext_wholesale_cost >= '117.81'::double precision) AND (ext_list_price <= '1420.56'::double precision) AND (ext_list_price >= '148.92'::double precision))
                                       Rows Removed by Filter: 2273162
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.998..4.999 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.015..2.029 rows=18000 loops=1)
 Planning Time: 483.344 ms
 Execution Time: 2494.471 ms
(33 rows)

                                                                                                 QUERY PLAN                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=86509.75..91930.50 rows=9445 width=240) (actual time=679.042..708.079 rows=8829 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=38652 width=28) (actual time=0.018..10.632 rows=25261 loops=1)
         Filter: ((birth_day <= '19'::double precision) AND (birth_day >= '12'::double precision))
         Rows Removed by Filter: 74739
   ->  Hash  (cost=86499.63..86499.63 rows=809 width=212) (actual time=678.796..678.799 rows=35643 loops=1)
         Buckets: 16384 (originally 1024)  Batches: 4 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=591.98..86499.63 rows=809 width=212) (actual time=4.174..657.943 rows=36460 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Hash Join  (cost=16.75..85860.60 rows=731 width=160) (actual time=0.146..635.721 rows=62316 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..338.428 rows=2880404 loops=1)
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.099..0.100 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.008..0.060 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
               ->  Hash  (cost=546.00..546.00 rows=2338 width=52) (actual time=4.018..4.018 rows=7815 loops=1)
                     Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 736kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=2338 width=52) (actual time=0.006..2.989 rows=7821 loops=1)
                           Filter: ((brand_id <= '6007006'::double precision) AND (brand_id >= '1003002'::double precision) AND (class_id <= '6'::double precision) AND (class_id >= '1'::double precision))
                           Rows Removed by Filter: 10179
 Planning Time: 529.808 ms
 Execution Time: 708.456 ms
(24 rows)

                                                                 QUERY PLAN                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=106186.75..129576.70 rows=18900 width=244) (actual time=683.829..695.683 rows=20299 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=105106.84..105152.57 rows=18293 width=212) (actual time=683.778..686.334 rows=20300 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 4720kB
         ->  Hash Join  (cost=1220.88..101935.79 rows=18293 width=212) (actual time=4.614..662.569 rows=20793 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=214618 width=132) (actual time=0.053..560.227 rows=965182 loops=1)
                     Filter: ((sales_price <= '23.16'::double precision) AND (sales_price >= '3'::double precision))
                     Rows Removed by Filter: 1915222
               ->  Hash  (cost=1204.43..1204.43 rows=1316 width=80) (actual time=4.548..4.554 rows=291 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 51kB
                     ->  Hash Join  (cost=24.64..1204.43 rows=1316 width=80) (actual time=0.128..4.461 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.005..1.939 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.107..0.110 rows=291 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 35kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.008..0.065 rows=293 loops=1)
                                       Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                       Rows Removed by Filter: 7
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.036..0.906 rows=20304 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.014..0.016 rows=12 loops=1)
 Planning Time: 538.180 ms
 Execution Time: 697.295 ms
(26 rows)



 Hash Join  (cost=161062.86..161219.83 rows=19956 width=244) (actual time=693.548..712.011 rows=139 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Merge Join  (cost=161023.84..161145.73 rows=790 width=212) (actual time=693.180..711.869 rows=805 loops=1)
         Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
         ->  Sort  (cost=158240.53..158242.51 rows=790 width=184) (actual time=639.154..639.229 rows=806 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: quicksort  Memory: 239kB
               ->  Hash Join  (cost=546.59..158202.52 rows=790 width=184) (actual time=7.102..638.610 rows=807 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=3247 width=132) (actual time=0.037..631.452 rows=23382 loops=1)
                           Filter: ((quantity <= '95'::double precision) AND (quantity >= '46'::double precision) AND (ext_wholesale_cost <= '6951.6'::double precision) AND (ext_wholesale_cost >= '224.94'::double precision) AND (ext_list_price <= '8147.76'::double precision) AND (ext_list_price >= '6127.92'::double precision) AND (net_paid_inc_tax <= '9571.16'::double precision) AND (net_paid_inc_tax >= '1149.3'::double precision) AND (net_profit <= '-1189.81'::double precision) AND (net_profit >= '-1990.14'::double precision))
                           Rows Removed by Filter: 2857022
                     ->  Hash  (cost=456.00..456.00 rows=7247 width=52) (actual time=3.340..3.340 rows=5873 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 569kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=7247 width=52) (actual time=0.006..2.619 rows=5880 loops=1)
                                 Filter: ((manufact_id <= '229'::double precision) AND (manufact_id >= '47'::double precision))
                                 Rows Removed by Filter: 12120
         ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=53.987..63.537 rows=100032 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external sort  Disk: 5216kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.015..13.216 rows=100000 loops=1)
   ->  Hash  (cost=37.20..37.20 rows=145 width=32) (actual time=0.020..0.021 rows=2 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=145 width=32) (actual time=0.014..0.016 rows=2 loops=1)
               Filter: ((number_employees <= 288) AND (number_employees >= 278) AND (floor_space <= 9341467) AND (floor_space >= 5219562))
               Rows Removed by Filter: 10
 Planning Time: 532.972 ms
 Execution Time: 712.941 ms
(28 rows)

                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=170504.73..174262.89 rows=25588 width=240) (actual time=772.029..793.766 rows=15586 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=41337.99..42182.65 rows=337862 width=28) (actual time=50.946..56.589 rows=69918 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: external merge  Disk: 3408kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=337862 width=28) (actual time=0.018..25.207 rows=69918 loops=1)
               Filter: ((birth_year <= '1973'::double precision) AND (birth_year >= '-1'::double precision))
               Rows Removed by Filter: 30082
   ->  Sort  (cost=129166.74..129199.36 rows=13050 width=212) (actual time=721.074..724.361 rows=22256 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external sort  Disk: 5208kB
         ->  Merge Join  (cost=117124.19..128274.66 rows=13050 width=212) (actual time=682.994..695.423 rows=22380 loops=1)
               Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
               ->  Sort  (cost=116061.88..116094.50 rows=13050 width=184) (actual time=682.884..685.820 rows=22381 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: external merge  Disk: 4456kB
                     ->  Hash Join  (cost=560.70..115169.80 rows=13050 width=184) (actual time=4.944..661.936 rows=22618 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=103300 width=132) (actual time=0.048..589.983 rows=771147 loops=1)
                                 Filter: ((quantity <= '69'::double precision) AND (quantity >= '39'::double precision) AND (net_paid_inc_tax <= '5276.88'::double precision) AND (net_paid_inc_tax >= '0'::double precision))
                                 Rows Removed by Filter: 2109257
                           ->  Hash  (cost=546.00..546.00 rows=1176 width=52) (actual time=4.881..4.882 rows=620 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 70kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=1176 width=52) (actual time=0.040..4.765 rows=620 loops=1)
                                       Filter: ((brand_id <= '9013005'::double precision) AND (brand_id >= '8003006'::double precision) AND (class_id <= '3'::double precision) AND (class_id >= '1'::double precision))
                                       Rows Removed by Filter: 17380
               ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.103..1.080 rows=22313 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 48kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.051 rows=300 loops=1)
 Planning Time: 538.671 ms
 Execution Time: 797.311 ms
(32 rows)

                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=141425.34..148732.50 rows=52447 width=240) (actual time=619.154..621.435 rows=35 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Merge Join  (cost=140869.25..142769.37 rows=54312 width=188) (actual time=613.541..616.005 rows=206 loops=1)
         Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
         ->  Sort  (cost=129918.16..130048.46 rows=52121 width=160) (actual time=603.419..604.276 rows=7330 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: quicksort  Memory: 2150kB
               ->  Hash Join  (cost=24.64..121736.08 rows=52121 width=160) (actual time=0.279..598.888 rows=7408 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=141219 width=132) (actual time=0.041..562.976 rows=345907 loops=1)
                           Filter: ((ext_list_price <= '8630.44'::double precision) AND (ext_list_price >= '2001.92'::double precision) AND (ext_tax <= '79.44'::double precision) AND (ext_tax >= '26.21'::double precision))
                           Rows Removed by Filter: 2534497
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.108..0.109 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.063 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
         ->  Materialize  (cost=10951.09..11364.13 rows=82608 width=28) (actual time=10.113..10.556 rows=2750 loops=1)
               ->  Sort  (cost=10951.09..11157.61 rows=82608 width=28) (actual time=10.108..10.232 rows=2735 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: quicksort  Memory: 310kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=82608 width=28) (actual time=0.016..9.718 rows=2735 loops=1)
                           Filter: ((birth_year <= '1957'::double precision) AND (birth_year >= '1956'::double precision))
                           Rows Removed by Filter: 97265
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.333..5.333 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..2.140 rows=18000 loops=1)
 Planning Time: 522.344 ms
 Execution Time: 621.515 ms
(29 rows)

                                                                                                                                                                                                                                                QUERY PLAN                                                                                                                                                                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=183215.05..202935.90 rows=16133 width=244) (actual time=587.742..588.243 rows=1405 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.033..0.035 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.016..0.021 rows=12 loops=1)
   ->  Sort  (cost=182135.14..182173.70 rows=15425 width=212) (actual time=587.703..587.774 rows=1406 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 423kB
         ->  Merge Join  (cost=167924.01..181062.13 rows=15425 width=212) (actual time=586.380..587.187 rows=1408 loops=1)
               Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
               ->  Sort  (cost=9445.86..9482.31 rows=14580 width=80) (actual time=8.322..8.351 rows=293 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 66kB
                     ->  Hash Join  (cost=196.09..8437.55 rows=14580 width=80) (actual time=0.202..8.081 rows=293 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.007..3.443 rows=18000 loops=1)
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.156..0.157 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.009..0.061 rows=300 loops=1)
               ->  Sort  (cost=158478.15..158518.26 rows=16045 width=132) (actual time=578.050..578.218 rows=1435 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: quicksort  Memory: 430kB
                     ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=16045 width=132) (actual time=1.581..577.461 rows=1437 loops=1)
                           Filter: ((quantity <= '88'::double precision) AND (quantity >= '58'::double precision) AND (list_price <= '26.76'::double precision) AND (list_price >= '23.97'::double precision) AND (sales_price <= '96.18'::double precision) AND (sales_price >= '1.1'::double precision) AND (ext_coupon_amt <= '5.87'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '-1087.92'::double precision) AND (net_profit >= '-2300.6'::double precision))
                           Rows Removed by Filter: 2878967
 Planning Time: 499.915 ms
 Execution Time: 588.386 ms
(28 rows)

                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=103672.35..105477.46 rows=864 width=240) (actual time=1096.831..1242.627 rows=154970 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.018..8.614 rows=100000 loops=1)
   ->  Hash  (cost=103661.55..103661.55 rows=864 width=212) (actual time=1096.388..1096.391 rows=154970 loops=1)
         Buckets: 16384 (originally 1024)  Batches: 16 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=102577.69..103661.55 rows=864 width=212) (actual time=928.501..1016.980 rows=156908 loops=1)
               Hash Cond: ((promotion.promo_sk)::double precision = store_sales.promo_sk)
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.012..0.074 rows=293 loops=1)
                     Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                     Rows Removed by Filter: 7
               ->  Hash  (cost=102472.59..102472.59 rows=8408 width=184) (actual time=928.464..928.466 rows=160733 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 16 (originally 1)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=557.30..102472.59 rows=8408 width=184) (actual time=6.563..833.880 rows=164682 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=508466 width=132) (actual time=0.052..621.689 rows=1618549 loops=1)
                                 Filter: ((net_paid <= '1704.82'::double precision) AND (net_paid >= '40.95'::double precision))
                                 Rows Removed by Filter: 1261855
                           ->  Hash  (cost=546.00..546.00 rows=904 width=52) (actual time=6.487..6.488 rows=1839 loops=1)
                                 Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 175kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=904 width=52) (actual time=0.010..6.002 rows=1839 loops=1)
                                       Filter: ((current_price <= '7.66'::double precision) AND (current_price >= '3.79'::double precision) AND (manufact_id <= '590'::double precision) AND (manufact_id >= '278'::double precision))
                                       Rows Removed by Filter: 16161
 Planning Time: 509.570 ms
 Execution Time: 1248.272 ms
(24 rows)



 Hash Join  (cost=2489.93..161395.16 rows=387 width=240) (actual time=58.272..556.443 rows=65 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=1933.84..160834.19 rows=400 width=188) (actual time=53.594..551.709 rows=65 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=16.75..157481.56 rows=377 width=160) (actual time=11.168..515.690 rows=65 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=3321 width=132) (actual time=0.360..514.999 rows=2995 loops=1)
                     Filter: ((quantity <= '82'::double precision) AND (quantity >= '50'::double precision) AND (list_price <= '139.72'::double precision) AND (list_price >= '6.95'::double precision) AND (sales_price <= '109.12'::double precision) AND (sales_price >= '72.11'::double precision) AND (ext_sales_price <= '4645.72'::double precision) AND (ext_sales_price >= '1620.8'::double precision) AND (ext_list_price <= '4766.85'::double precision) AND (ext_list_price >= '745.8'::double precision))
                     Rows Removed by Filter: 2877409
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.092..0.092 rows=291 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.008..0.055 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=31.020..31.020 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..10.813 rows=100000 loops=1)
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.654..4.655 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..2.063 rows=18000 loops=1)
 Planning Time: 543.266 ms
 Execution Time: 556.518 ms
(22 rows)

                                                                                                                                                                                                 QUERY PLAN                                                                                                                                                                                                 
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=3499.09..149614.18 rows=55 width=244) (actual time=25.989..559.957 rows=60 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=3285.40..149160.20 rows=53 width=212) (actual time=25.949..559.872 rows=60 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=550.52..143538.92 rows=284 width=184) (actual time=3.221..546.093 rows=872 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=8107 width=132) (actual time=0.039..538.386 rows=51684 loops=1)
                     Filter: ((quantity <= '62'::double precision) AND (quantity >= '48'::double precision) AND (ext_list_price <= '8085.2'::double precision) AND (ext_list_price >= '5602.35'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '9789.12'::double precision) AND (net_paid >= '1599.93'::double precision))
                     Rows Removed by Filter: 2828720
               ->  Hash  (cost=546.00..546.00 rows=362 width=52) (actual time=2.536..2.537 rows=301 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 34kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=362 width=52) (actual time=0.011..2.493 rows=301 loops=1)
                           Filter: ((class_id <= '11'::double precision) AND (class_id >= '9'::double precision) AND (manufact_id <= '457'::double precision) AND (manufact_id >= '297'::double precision))
                           Rows Removed by Filter: 17699
         ->  Hash  (cost=2227.00..2227.00 rows=40630 width=28) (actual time=13.449..13.450 rows=9424 loops=1)
               Buckets: 65536  Batches: 1  Memory Usage: 1099kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=40630 width=28) (actual time=0.008..12.042 rows=9424 loops=1)
                     Filter: ((birth_day <= '25'::double precision) AND (birth_day >= '23'::double precision))
                     Rows Removed by Filter: 90576
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.019..0.020 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.013 rows=12 loops=1)
 Planning Time: 483.867 ms
 Execution Time: 560.033 ms
(24 rows)

                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=106830.43..112289.12 rows=6003 width=240) (actual time=1607.533..1776.016 rows=277266 loops=1)
   Hash Cond: ((promotion.promo_sk)::double precision = store_sales.promo_sk)
   ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.063 rows=300 loops=1)
   ->  Hash  (cost=106755.38..106755.38 rows=6003 width=212) (actual time=1607.500..1607.503 rows=277266 loops=1)
         Buckets: 16384 (originally 8192)  Batches: 32 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=104861.83..106755.38 rows=6003 width=212) (actual time=1228.234..1464.526 rows=280625 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.005..8.757 rows=100000 loops=1)
               ->  Hash  (cost=104786.79..104786.79 rows=6003 width=184) (actual time=1227.816..1227.818 rows=280625 loops=1)
                     Buckets: 32768 (originally 8192)  Batches: 32 (originally 1)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=550.27..104786.79 rows=6003 width=184) (actual time=3.042..917.708 rows=287476 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1137903 width=132) (actual time=0.037..579.176 rows=2546356 loops=1)
                                 Filter: ((ext_discount_amt <= '690.33'::double precision) AND (ext_discount_amt >= '0'::double precision))
                                 Rows Removed by Filter: 334048
                           ->  Hash  (cost=546.00..546.00 rows=342 width=52) (actual time=2.995..2.995 rows=2031 loops=1)
                                 Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 191kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=342 width=52) (actual time=0.009..2.711 rows=2031 loops=1)
                                       Filter: ((category_id <= '10'::double precision) AND (category_id >= '8'::double precision) AND (manufact_id <= '340'::double precision) AND (manufact_id >= '129'::double precision))
                                       Rows Removed by Filter: 15969
 Planning Time: 502.700 ms
 Execution Time: 1786.025 ms
(22 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=90491.36..95977.93 rows=4436 width=244) (actual time=1824.393..2096.673 rows=409240 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=89411.45..89422.18 rows=4291 width=212) (actual time=1824.353..1904.226 rows=409241 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 94856kB
         ->  Merge Join  (cost=88995.97..89152.55 rows=4291 width=212) (actual time=1186.360..1502.504 rows=419161 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=86212.66..86223.39 rows=4291 width=184) (actual time=1130.279..1223.873 rows=419162 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 84648kB
                     ->  Hash Join  (cost=508.88..85953.76 rows=4291 width=184) (actual time=2.556..737.076 rows=438904 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.043..329.984 rows=2880404 loops=1)
                           ->  Hash  (cost=456.00..456.00 rows=4230 width=52) (actual time=2.492..2.493 rows=2772 loops=1)
                                 Buckets: 8192  Batches: 1  Memory Usage: 303kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=4230 width=52) (actual time=0.008..2.155 rows=2772 loops=1)
                                       Filter: ((class_id <= '1'::double precision) AND (class_id >= '1'::double precision))
                                       Rows Removed by Filter: 15228
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=56.067..99.152 rows=432566 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.020..13.364 rows=100000 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.032..17.725 rows=409245 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.017..0.021 rows=12 loops=1)
 Planning Time: 669.963 ms
 Execution Time: 2144.980 ms
(28 rows)

                                                                                                                                                                                                                     QUERY PLAN                                                                                                                                                                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=151603.57..153302.80 rows=2369 width=244) (actual time=656.015..661.147 rows=6886 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.427 rows=18000 loops=1)
   ->  Hash  (cost=151572.78..151572.78 rows=2463 width=192) (actual time=655.980..655.982 rows=6886 loops=1)
         Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 1624kB
         ->  Merge Join  (cost=149468.06..151572.78 rows=2463 width=192) (actual time=650.024..653.505 rows=7069 loops=1)
               Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
               ->  Sort  (cost=148405.75..148411.90 rows=2463 width=164) (actual time=649.924..650.320 rows=7070 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: quicksort  Memory: 2072kB
                     ->  Merge Join  (cost=143912.19..148266.99 rows=2463 width=164) (actual time=644.648..647.197 rows=7079 loops=1)
                           Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                           ->  Sort  (cost=440.08..456.26 rows=6472 width=32) (actual time=0.015..0.016 rows=2 loops=1)
                                 Sort Key: ((store.store_sk)::double precision)
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Seq Scan on store  (cost=0.00..30.40 rows=6472 width=32) (actual time=0.007..0.009 rows=2 loops=1)
                                       Filter: ((company_id <= 27) AND (company_id >= 27))
                                       Rows Removed by Filter: 10
                           ->  Sort  (cost=143472.11..143492.01 rows=7960 width=132) (actual time=642.067..644.348 rows=21238 loops=1)
                                 Sort Key: store_sales.store_sk
                                 Sort Method: external sort  Disk: 6224kB
                                 ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=7960 width=132) (actual time=0.069..616.247 rows=42360 loops=1)
                                       Filter: ((list_price <= '163.1'::double precision) AND (list_price >= '54.78'::double precision) AND (ext_wholesale_cost <= '4133.36'::double precision) AND (ext_wholesale_cost >= '-1'::double precision) AND (ext_list_price <= '367.25'::double precision) AND (ext_list_price >= '-1'::double precision) AND (net_profit <= '330.4'::double precision) AND (net_profit >= '-105.12'::double precision))
                                       Rows Removed by Filter: 2838044
               ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.096..0.425 rows=7046 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 48kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.012..0.049 rows=300 loops=1)
 Planning Time: 525.192 ms
 Execution Time: 662.432 ms
(30 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=87658.27..96346.21 rows=45134 width=240) (actual time=6520.239..7703.737 rows=221000 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=83239 width=28) (actual time=0.017..11.000 rows=8416 loops=1)
         Filter: ((birth_year <= '1960'::double precision) AND (birth_year >= '1955'::double precision))
         Rows Removed by Filter: 91584
   ->  Hash  (cost=87648.88..87648.88 rows=751 width=212) (actual time=6512.549..6512.552 rows=2631971 loops=1)
         Buckets: 16384 (originally 1024)  Batches: 256 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=87007.29..87648.88 rows=751 width=212) (actual time=3020.352..4940.854 rows=2695809 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=86451.20..87083.49 rows=762 width=160) (actual time=3015.579..4123.690 rows=2695809 loops=1)
                     Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
                     ->  Sort  (cost=42.77..44.62 rows=740 width=28) (actual time=0.130..0.187 rows=294 loops=1)
                           Sort Key: ((promotion.promo_sk)::double precision)
                           Sort Method: quicksort  Memory: 47kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.010..0.072 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=3015.439..3414.616 rows=2750921 loops=1)
                           Sort Key: store_sales.promo_sk
                           Sort Method: external sort  Disk: 408576kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.035..323.829 rows=2880404 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.747..4.748 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.005..1.990 rows=18000 loops=1)
 Planning Time: 561.558 ms
 Execution Time: 7777.890 ms
(26 rows)

                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=2508.55..89106.58 rows=1097 width=244) (actual time=37.314..1742.442 rows=883278 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=1962.84..88547.35 rows=147 width=192) (actual time=32.491..1459.165 rows=893398 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=45.75..86069.82 rows=147 width=164) (actual time=0.065..843.506 rows=915055 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.037..333.077 rows=2880404 loops=1)
               ->  Hash  (cost=44.00..44.00 rows=140 width=32) (actual time=0.014..0.015 rows=2 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on store  (cost=0.00..44.00 rows=140 width=32) (actual time=0.010..0.012 rows=2 loops=1)
                           Filter: ((floor_space <= 5285950) AND (floor_space >= 5219562) AND (devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.03'::double precision))
                           Rows Removed by Filter: 10
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=32.402..32.403 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..10.272 rows=100000 loops=1)
   ->  Hash  (cost=456.00..456.00 rows=7177 width=52) (actual time=4.800..4.800 rows=12607 loops=1)
         Buckets: 16384 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 1212kB
         ->  Seq Scan on item  (cost=0.00..456.00 rows=7177 width=52) (actual time=0.016..2.993 rows=12620 loops=1)
               Filter: ((category_id <= '8'::double precision) AND (category_id >= '2'::double precision))
               Rows Removed by Filter: 5380
 Planning Time: 483.722 ms
 Execution Time: 1773.839 ms
(22 rows)



 Nested Loop  (cost=393.77..173054.46 rows=2 width=244) (actual time=559.662..1138.882 rows=161 loops=1)
   Join Filter: (promotion.item_sk = (item.item_sk)::double precision)
   Rows Removed by Join Filter: 2923921
   ->  Seq Scan on item  (cost=0.00..456.00 rows=3251 width=52) (actual time=0.016..2.880 rows=9081 loops=1)
         Filter: ((current_price <= '49.66'::double precision) AND (current_price >= '3.7'::double precision))
         Rows Removed by Filter: 8919
   ->  Materialize  (cost=393.77..172399.62 rows=3 width=192) (actual time=0.000..0.074 rows=322 loops=9081)
         ->  Hash Join  (cost=393.77..172399.60 rows=3 width=192) (actual time=3.120..550.327 rows=322 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Hash Join  (cost=24.64..171971.60 rows=7 width=160) (actual time=1.272..550.060 rows=637 loops=1)
                     Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=485 width=132) (actual time=1.161..549.581 rows=651 loops=1)
                           Filter: ((quantity <= '52'::double precision) AND (quantity >= '43'::double precision) AND (sales_price <= '20.79'::double precision) AND (sales_price >= '19.31'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '5435.08'::double precision) AND (ext_wholesale_cost >= '2144.12'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '62.4'::double precision) AND (net_profit >= '-1959.36'::double precision))
                           Rows Removed by Filter: 2879753
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.101..0.101 rows=293 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.059 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
               ->  Hash  (cost=30.40..30.40 rows=27099 width=32) (actual time=0.008..0.008 rows=4 loops=1)
                     Buckets: 32768  Batches: 1  Memory Usage: 257kB
                     ->  Seq Scan on store  (cost=0.00..30.40 rows=27099 width=32) (actual time=0.004..0.006 rows=4 loops=1)
                           Filter: ((company_id <= 811) AND (company_id >= 255))
                           Rows Removed by Filter: 8
 Planning Time: 553.404 ms
 Execution Time: 1138.959 ms
(26 rows)

                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=128985.61..139653.18 rows=15106 width=240) (actual time=577.133..577.137 rows=0 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=128789.52..131634.10 rows=15106 width=212) (actual time=570.550..577.002 rows=127 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Merge Join  (cost=128233.43..129519.32 rows=15656 width=160) (actual time=565.713..571.729 rows=2177 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=121077.31..121195.84 rows=47410 width=132) (actual time=551.007..552.128 rows=9043 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: quicksort  Memory: 2737kB
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=47410 width=132) (actual time=0.044..547.360 rows=9135 loops=1)
                           Filter: ((list_price <= '131.7'::double precision) AND (list_price >= '111.11'::double precision) AND (net_profit <= '121.59'::double precision) AND (net_profit >= '14.82'::double precision))
                           Rows Removed by Filter: 2871269
               ->  Sort  (cost=7156.12..7310.94 rows=61930 width=28) (actual time=14.690..15.730 rows=24538 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: quicksort  Memory: 2675kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=61930 width=28) (actual time=0.016..11.276 rows=24399 loops=1)
                           Filter: ((birth_month <= '9'::double precision) AND (birth_month >= '7'::double precision))
                           Rows Removed by Filter: 75601
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.804..4.804 rows=17954 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.005..1.848 rows=18000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.091..0.092 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.047 rows=300 loops=1)
 Planning Time: 501.869 ms
 Execution Time: 577.208 ms
(26 rows)

                                                                                                                QUERY PLAN                                                                                                                
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=121420.16..122235.16 rows=7649 width=244) (actual time=488.179..496.270 rows=1392 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=11697.43..11920.46 rows=89212 width=28) (actual time=29.775..33.367 rows=40528 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: external merge  Disk: 1984kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=89212 width=28) (actual time=0.017..16.169 rows=40531 loops=1)
               Filter: ((birth_month <= '9'::double precision) AND (birth_month >= '5'::double precision))
               Rows Removed by Filter: 59469
   ->  Sort  (cost=109722.72..109737.45 rows=5891 width=216) (actual time=458.373..458.558 rows=3473 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: quicksort  Memory: 1032kB
         ->  Merge Join  (cost=102060.93..109353.82 rows=5891 width=216) (actual time=454.320..456.409 rows=3521 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=100981.02..100995.28 rows=5704 width=184) (actual time=454.290..454.559 rows=3522 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: quicksort  Memory: 1049kB
                     ->  Hash Join  (cost=577.36..100625.18 rows=5704 width=184) (actual time=2.768..452.355 rows=3593 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=57279 width=132) (actual time=0.035..416.209 rows=412551 loops=1)
                                 Filter: ((quantity <= '86'::double precision) AND (quantity >= '72'::double precision))
                                 Rows Removed by Filter: 2467853
                           ->  Hash  (cost=546.00..546.00 rows=2509 width=52) (actual time=2.587..2.587 rows=196 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 49kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=2509 width=52) (actual time=0.026..2.558 rows=196 loops=1)
                                       Filter: ((current_price <= '52.49'::double precision) AND (current_price >= '1.01'::double precision) AND (brand_id <= '5002001'::double precision) AND (brand_id >= '5002001'::double precision))
                                       Rows Removed by Filter: 17804
               ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.023..0.176 rows=3526 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.013 rows=12 loops=1)
 Planning Time: 526.714 ms
 Execution Time: 496.893 ms
(32 rows)

                                                                                                                                                                                                      QUERY PLAN                                                                                                                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=168321.22..169863.45 rows=9683 width=240) (actual time=546.516..556.632 rows=16 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=22959.54..23424.57 rows=186010 width=28) (actual time=36.963..42.107 rows=63205 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: external merge  Disk: 3112kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=186010 width=28) (actual time=0.018..17.484 rows=63764 loops=1)
               Filter: ((birth_day <= '20'::double precision) AND (birth_day >= '-1'::double precision))
               Rows Removed by Filter: 36236
   ->  Sort  (cost=145361.67..145368.79 rows=2849 width=212) (actual time=509.004..509.009 rows=21 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: quicksort  Memory: 30kB
         ->  Hash Join  (cost=752.17..145198.18 rows=2849 width=212) (actual time=7.368..508.970 rows=21 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Hash Join  (cost=196.09..144608.22 rows=2777 width=160) (actual time=2.969..504.542 rows=21 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=2811 width=132) (actual time=0.481..504.136 rows=1088 loops=1)
                           Filter: ((quantity <= '48'::double precision) AND (quantity >= '39'::double precision) AND (ext_discount_amt <= '286.57'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '1617.92'::double precision) AND (ext_sales_price >= '1543.53'::double precision) AND (ext_tax <= '51.43'::double precision) AND (ext_tax >= '6.59'::double precision))
                           Rows Removed by Filter: 2879316
                     ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.079..0.079 rows=293 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 147kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.008..0.035 rows=300 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.386..4.387 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.788 rows=18000 loops=1)
 Planning Time: 491.756 ms
 Execution Time: 557.428 ms
(26 rows)

                                                                                                                                                                   QUERY PLAN                                                                                                                                                                   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=136153.22..139064.13 rows=2227 width=240) (actual time=748.550..768.341 rows=4207 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..8.238 rows=100000 loops=1)
   ->  Hash  (cost=136125.37..136125.37 rows=2227 width=212) (actual time=748.516..748.519 rows=4207 loops=1)
         Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 1115kB
         ->  Merge Join  (cost=134222.15..136125.37 rows=2227 width=212) (actual time=743.961..746.889 rows=4213 loops=1)
               Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
               ->  Sort  (cost=133159.84..133165.41 rows=2227 width=184) (actual time=743.849..744.267 rows=4214 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: quicksort  Memory: 1315kB
                     ->  Hash Join  (cost=566.95..133035.99 rows=2227 width=184) (actual time=2.963..741.104 rows=4224 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=45191 width=132) (actual time=0.038..648.146 rows=960983 loops=1)
                                 Filter: ((sales_price <= '118.25'::double precision) AND (sales_price >= '11.07'::double precision) AND (ext_sales_price <= '3425.28'::double precision) AND (ext_sales_price >= '602.03'::double precision) AND (ext_coupon_amt <= '646.44'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                 Rows Removed by Filter: 1919421
                           ->  Hash  (cost=546.00..546.00 rows=1676 width=52) (actual time=2.521..2.521 rows=1414 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 138kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=1676 width=52) (actual time=0.009..2.336 rows=1414 loops=1)
                                       Filter: ((current_price <= '4.92'::double precision) AND (current_price >= '3.84'::double precision) AND (brand_id <= '10008010'::double precision) AND (brand_id >= '4002002'::double precision))
                                       Rows Removed by Filter: 16586
               ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.104..0.292 rows=4198 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 48kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.013..0.053 rows=300 loops=1)
 Planning Time: 508.724 ms
 Execution Time: 768.560 ms
(26 rows)

                                                                                                                                                                                                         QUERY PLAN                                                                                                                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=145371.47..146483.96 rows=10348 width=244) (actual time=835.437..835.538 rows=93 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=144772.90..144776.74 rows=1533 width=212) (actual time=835.382..835.413 rows=282 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 174kB
         ->  Hash Join  (cost=752.17..144691.78 rows=1533 width=212) (actual time=10.807..834.884 rows=563 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Hash Join  (cost=556.09..143669.35 rows=1596 width=184) (actual time=10.393..829.365 rows=30872 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=1576 width=132) (actual time=0.072..794.927 rows=84379 loops=1)
                           Filter: ((list_price <= '55.62'::double precision) AND (list_price >= '19.84'::double precision) AND (ext_tax <= '79.49'::double precision) AND (ext_tax >= '0.85'::double precision) AND (net_paid_inc_tax <= '1275.78'::double precision) AND (net_paid_inc_tax >= '507.99'::double precision) AND (net_profit <= '780.84'::double precision) AND (net_profit >= '-499.86'::double precision))
                           Rows Removed by Filter: 2796025
                     ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=10.229..10.229 rows=17954 loops=1)
                           Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.008..3.770 rows=18000 loops=1)
               ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.195..0.195 rows=293 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 147kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.019..0.083 rows=300 loops=1)
   ->  Sort  (cost=598.56..620.04 rows=8591 width=32) (actual time=0.025..0.029 rows=96 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=8591 width=32) (actual time=0.013..0.014 rows=4 loops=1)
               Filter: ((floor_space <= 9294113) AND (floor_space >= 5285950) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.03'::double precision))
               Rows Removed by Filter: 8
 Planning Time: 508.581 ms
 Execution Time: 835.649 ms
(26 rows)

                                                                                                                                                                                                      QUERY PLAN                                                                                                                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=147706.30..158839.58 rows=17470 width=240) (actual time=713.206..731.226 rows=7 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=147510.21..149596.15 rows=17470 width=212) (actual time=711.112..731.080 rows=148 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Merge Join  (cost=146954.12..147239.24 rows=18089 width=160) (actual time=705.952..725.758 rows=3580 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=144170.81..144213.95 rows=17257 width=132) (actual time=650.987..651.417 rows=3581 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: quicksort  Memory: 1048kB
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=17257 width=132) (actual time=0.130..649.511 rows=3593 loops=1)
                           Filter: ((quantity <= '53'::double precision) AND (quantity >= '-1'::double precision) AND (ext_list_price <= '4569.25'::double precision) AND (ext_list_price >= '132.3'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '-2991.69'::double precision) AND (net_profit >= '-5135.3'::double precision))
                           Rows Removed by Filter: 2876811
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.954..64.181 rows=100044 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..12.999 rows=100000 loops=1)
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.702..4.702 rows=17954 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.005..1.867 rows=18000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.091..0.092 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.047 rows=300 loops=1)
 Planning Time: 544.137 ms
 Execution Time: 732.146 ms
(24 rows)

                                                                                                          QUERY PLAN                                                                                                           
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=117871.32..135821.37 rows=21894 width=240) (actual time=847.011..1017.475 rows=4012 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=117675.24..124286.93 rows=21894 width=212) (actual time=818.204..999.969 rows=182959 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..8.860 rows=100000 loops=1)
         ->  Hash  (cost=116845.57..116845.57 rows=21894 width=184) (actual time=818.151..818.153 rows=182959 loops=1)
               Buckets: 32768 (originally 32768)  Batches: 16 (originally 2)  Memory Usage: 3841kB
               ->  Hash Join  (cost=726.74..116845.57 rows=21894 width=184) (actual time=7.142..666.590 rows=185258 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=124477 width=132) (actual time=0.049..573.280 rows=268132 loops=1)
                           Filter: ((quantity <= '80'::double precision) AND (quantity >= '64'::double precision) AND (ext_wholesale_cost <= '7392'::double precision) AND (ext_wholesale_cost >= '2888.1'::double precision))
                           Rows Removed by Filter: 2612272
                     ->  Hash  (cost=456.00..456.00 rows=21659 width=52) (actual time=7.052..7.053 rows=12466 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1327kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=21659 width=52) (actual time=0.008..4.777 rows=12466 loops=1)
                                 Filter: ((manufact_id <= '492'::double precision) AND (manufact_id >= '27'::double precision))
                                 Rows Removed by Filter: 5534
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.154..0.154 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.017..0.068 rows=300 loops=1)
 Planning Time: 648.311 ms
 Execution Time: 1017.709 ms
(22 rows)

                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=819.21..87568.07 rows=613 width=244) (actual time=4.297..631.424 rows=2779 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=700.64..86213.28 rows=588 width=212) (actual time=3.271..628.846 rows=17450 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.035..320.560 rows=2880404 loops=1)
         ->  Hash  (cost=693.38..693.38 rows=581 width=80) (actual time=3.096..3.099 rows=76 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 17kB
               ->  Hash Join  (cost=16.75..693.38 rows=581 width=80) (actual time=0.199..3.074 rows=76 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=6823 width=52) (actual time=0.006..2.416 rows=4659 loops=1)
                           Filter: ((brand_id <= '7004010'::double precision) AND (brand_id >= '4003002'::double precision))
                           Rows Removed by Filter: 13341
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.113..0.114 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.073 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=30.40..30.40 rows=7054 width=32) (actual time=0.019..0.020 rows=2 loops=1)
         Buckets: 8192  Batches: 1  Memory Usage: 65kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=7054 width=32) (actual time=0.014..0.016 rows=2 loops=1)
               Filter: ((floor_space <= 8954883) AND (floor_space >= 7557959))
               Rows Removed by Filter: 10
 Planning Time: 487.989 ms
 Execution Time: 631.610 ms
(24 rows)

                                                                                                                                                                                                                                                 QUERY PLAN                                                                                                                                                                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=159406.65..161544.65 rows=653 width=240) (actual time=651.507..666.907 rows=104 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=158850.57..160921.26 rows=676 width=188) (actual time=646.863..662.218 rows=41 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.011..7.569 rows=100000 loops=1)
         ->  Hash  (cost=158842.59..158842.59 rows=638 width=160) (actual time=645.865..645.866 rows=41 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 17kB
               ->  Hash Join  (cost=16.75..158842.59 rows=638 width=160) (actual time=20.819..645.823 rows=41 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=45411 width=132) (actual time=0.510..645.260 rows=2059 loops=1)
                           Filter: ((list_price <= '90.15'::double precision) AND (list_price >= '6.09'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '261.64'::double precision) AND (net_paid >= '248.16'::double precision) AND (net_profit <= '-27.2'::double precision) AND (net_profit >= '-156'::double precision))
                           Rows Removed by Filter: 2878345
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.091..0.092 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.054 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.620..4.621 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.015..1.839 rows=18000 loops=1)
 Planning Time: 532.074 ms
 Execution Time: 666.980 ms
(22 rows)

                                                                                    QUERY PLAN                                                                                     
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=204146.32..213918.32 rows=1576747 width=244) (actual time=1029.217..1069.590 rows=42346 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=116435.80..118756.25 rows=928179 width=28) (actual time=48.600..57.992 rows=96551 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: external merge  Disk: 4712kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=928179 width=28) (actual time=0.017..20.735 rows=96551 loops=1)
               Filter: ((birth_month <= '12'::double precision) AND (birth_month >= '-1'::double precision))
               Rows Removed by Filter: 3449
   ->  Sort  (cost=87710.51..87737.78 rows=10906 width=216) (actual time=980.605..987.441 rows=43881 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external sort  Disk: 10376kB
         ->  Merge Join  (cost=86333.58..86979.10 rows=10906 width=216) (actual time=887.125..928.128 rows=44941 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=85970.46..85974.06 rows=1440 width=184) (actual time=887.083..903.741 rows=89894 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 54432kB
                     ->  Hash Join  (cost=473.75..85894.90 rows=1440 width=184) (actual time=2.342..696.540 rows=282191 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.033..324.734 rows=2880404 loops=1)
                           ->  Hash  (cost=456.00..456.00 rows=1420 width=52) (actual time=2.299..2.299 rows=1786 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 170kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=1420 width=52) (actual time=0.007..2.083 rows=1786 loops=1)
                                       Filter: ((brand_id <= '3004001'::double precision) AND (brand_id >= '2004002'::double precision))
                                       Rows Removed by Filter: 16214
               ->  Sort  (cost=363.12..376.30 rows=5272 width=32) (actual time=0.034..1.995 rows=44942 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..37.20 rows=5272 width=32) (actual time=0.017..0.023 rows=2 loops=1)
                           Filter: ((company_id <= 877) AND (company_id >= 337) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.03'::double precision))
                           Rows Removed by Filter: 10
 Planning Time: 472.141 ms
 Execution Time: 1083.931 ms
(32 rows)

                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=121851.22..124448.02 rows=2099 width=244) (actual time=913.730..943.244 rows=46997 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=120771.31..120776.39 rows=2031 width=212) (actual time=913.694..921.328 rows=46998 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 10784kB
         ->  Hash Join  (cost=117369.11..120659.73 rows=2031 width=212) (actual time=818.858..883.898 rows=47153 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..8.508 rows=100000 loops=1)
               ->  Hash  (cost=117343.73..117343.73 rows=2031 width=184) (actual time=814.817..814.819 rows=47153 loops=1)
                     Buckets: 32768 (originally 2048)  Batches: 4 (originally 1)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=555.86..117343.73 rows=2031 width=184) (actual time=2.281..782.408 rows=47459 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=30711 width=132) (actual time=0.039..651.037 rows=1344281 loops=1)
                                 Filter: ((ext_tax <= '293.8'::double precision) AND (ext_tax >= '3.08'::double precision) AND (net_paid_inc_tax <= '1937.62'::double precision) AND (net_paid_inc_tax >= '33.04'::double precision))
                                 Rows Removed by Filter: 1536123
                           ->  Hash  (cost=546.00..546.00 rows=789 width=52) (actual time=2.194..2.195 rows=534 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 54kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=789 width=52) (actual time=0.009..2.122 rows=534 loops=1)
                                       Filter: ((brand_id <= '3004002'::double precision) AND (brand_id >= '3003002'::double precision) AND (class_id <= '4'::double precision) AND (class_id >= '1'::double precision))
                                       Rows Removed by Filter: 17466
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.028..2.041 rows=47002 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.016..0.019 rows=12 loops=1)
 Planning Time: 507.671 ms
 Execution Time: 946.660 ms
(26 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=97995.13..101892.00 rows=255951 width=244) (actual time=6545.918..7356.440 rows=1574132 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=454.91..471.61 rows=6682 width=32) (actual time=0.027..0.037 rows=9 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=6682 width=32) (actual time=0.015..0.019 rows=10 loops=1)
               Filter: ((market_id <= 8) AND (market_id >= 2))
               Rows Removed by Filter: 2
   ->  Sort  (cost=97540.22..97557.43 rows=6887 width=212) (actual time=6545.879..6848.012 rows=1888943 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external sort  Disk: 445752kB
         ->  Merge Join  (cost=91216.42..97101.17 rows=6887 width=212) (actual time=3016.286..3986.563 rows=1934584 loops=1)
               Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
               ->  Sort  (cost=4807.98..4825.20 rows=6887 width=80) (actual time=5.378..5.437 rows=211 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 54kB
                     ->  Hash Join  (cost=196.09..4368.93 rows=6887 width=80) (actual time=0.129..5.265 rows=211 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=7177 width=52) (actual time=0.007..3.487 rows=12620 loops=1)
                                 Filter: ((category_id <= '8'::double precision) AND (category_id >= '2'::double precision))
                                 Rows Removed by Filter: 5380
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.090..0.091 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.041 rows=300 loops=1)
               ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=3010.898..3375.688 rows=2750921 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: external sort  Disk: 408576kB
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.039..322.059 rows=2880404 loops=1)
 Planning Time: 500.613 ms
 Execution Time: 7545.158 ms
(30 rows)

                                                                                                                  QUERY PLAN                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=585726.84..624455.72 rows=334528 width=244) (actual time=889.927..1073.421 rows=127043 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=585170.75..619818.96 rows=334528 width=192) (actual time=885.184..1029.968 rows=127043 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..8.882 rows=100000 loops=1)
         ->  Hash  (cost=573148.16..573148.16 rows=334528 width=164) (actual time=863.925..863.927 rows=127043 loops=1)
               Buckets: 32768  Batches: 32  Memory Usage: 1016kB
               ->  Merge Join  (cost=166265.94..573148.16 rows=334528 width=164) (actual time=592.513..685.192 rows=127801 loops=1)
                     Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                     ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.016..0.018 rows=11 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.005..0.008 rows=12 loops=1)
                     ->  Materialize  (cost=165186.03..166782.91 rows=319376 width=132) (actual time=592.490..650.758 rows=127802 loops=1)
                           ->  Sort  (cost=165186.03..165984.47 rows=319376 width=132) (actual time=592.486..613.724 rows=127802 loops=1)
                                 Sort Key: store_sales.store_sk
                                 Sort Method: external merge  Disk: 18376kB
                                 ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=319376 width=132) (actual time=0.038..544.121 rows=129376 loops=1)
                                       Filter: ((ext_wholesale_cost <= '6297.48'::double precision) AND (ext_wholesale_cost >= '555.5'::double precision) AND (ext_tax <= '9.11'::double precision) AND (ext_tax >= '4.05'::double precision))
                                       Rows Removed by Filter: 2751028
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.719..4.719 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.976 rows=18000 loops=1)
 Planning Time: 541.637 ms
 Execution Time: 1084.771 ms
(25 rows)

                                                                   QUERY PLAN                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=161589.35..168404.51 rows=21486 width=240) (actual time=763.014..842.936 rows=45385 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=160914.54..164318.96 rows=33519 width=188) (actual time=756.655..822.783 rows=46787 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..8.647 rows=100000 loops=1)
         ->  Hash  (cost=159811.21..159811.21 rows=31546 width=160) (actual time=752.597..752.599 rows=46787 loops=1)
               Buckets: 32768 (originally 32768)  Batches: 4 (originally 2)  Memory Usage: 3841kB
               ->  Hash Join  (cost=24.64..159811.21 rows=31546 width=160) (actual time=0.150..720.700 rows=47950 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1121824 width=132) (actual time=0.035..520.589 rows=2211665 loops=1)
                           Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision))
                           Rows Removed by Filter: 668739
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.103..0.103 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.006..0.057 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=456.00..456.00 rows=17505 width=52) (actual time=4.456..4.457 rows=12526 loops=1)
         Buckets: 32768  Batches: 1  Memory Usage: 1333kB
         ->  Seq Scan on item  (cost=0.00..456.00 rows=17505 width=52) (actual time=0.016..2.951 rows=12541 loops=1)
               Filter: ((brand_id <= '8014007'::double precision) AND (brand_id >= '1004002'::double precision))
               Rows Removed by Filter: 5459
 Planning Time: 503.365 ms
 Execution Time: 844.612 ms
(24 rows)

                                                                                                                                                                                                                                                QUERY PLAN                                                                                                                                                                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=159952.75..164275.76 rows=3492 width=244) (actual time=548.139..550.024 rows=3315 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=158872.84..158881.29 rows=3381 width=212) (actual time=548.107..548.352 rows=3316 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 978kB
         ->  Hash Join  (cost=883.36..158674.66 rows=3381 width=212) (actual time=4.408..546.357 rows=3317 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=46010 width=132) (actual time=0.053..534.977 rows=60434 loops=1)
                     Filter: ((quantity <= '56'::double precision) AND (quantity >= '50'::double precision) AND (ext_discount_amt <= '23.43'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '3160.64'::double precision) AND (ext_list_price >= '26.88'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '5054.17'::double precision) AND (net_paid >= '-1'::double precision))
                     Rows Removed by Filter: 2819970
               ->  Hash  (cost=874.48..874.48 rows=711 width=80) (actual time=4.151..4.153 rows=290 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 42kB
                     ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.115..4.063 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.763 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.095..0.096 rows=291 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.059 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                       Rows Removed by Filter: 6
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.024..0.165 rows=3320 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.013 rows=12 loops=1)
 Planning Time: 497.248 ms
 Execution Time: 550.223 ms
(26 rows)



 Hash Join  (cost=999.62..174436.55 rows=11 width=244) (actual time=2.734..789.290 rows=17080 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=495.79..173552.44 rows=34 width=212) (actual time=2.609..781.494 rows=25827 loops=1)
         Hash Cond: (promotion.item_sk = (item.item_sk)::double precision)
         ->  Hash Join  (cost=24.64..173017.02 rows=186 width=160) (actual time=0.165..736.263 rows=314419 loops=1)
               Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=3175 width=132) (actual time=0.055..643.723 rows=322452 loops=1)
                     Filter: ((quantity <= '68'::double precision) AND (quantity >= '2'::double precision) AND (list_price <= '97.96'::double precision) AND (list_price >= '-1'::double precision) AND (sales_price <= '18.76'::double precision) AND (sales_price >= '2.71'::double precision) AND (ext_discount_amt <= '1144.63'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '2945.08'::double precision) AND (ext_wholesale_cost >= '90.31'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                     Rows Removed by Filter: 2557952
               ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.101..0.101 rows=293 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 35kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.061 rows=293 loops=1)
                           Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                           Rows Removed by Filter: 7
         ->  Hash  (cost=456.00..456.00 rows=1212 width=52) (actual time=2.438..2.438 rows=1811 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 172kB
               ->  Seq Scan on item  (cost=0.00..456.00 rows=1212 width=52) (actual time=0.006..2.188 rows=1811 loops=1)
                     Filter: ((category_id <= '2'::double precision) AND (category_id >= '2'::double precision))
                     Rows Removed by Filter: 16189
   ->  Hash  (cost=30.40..30.40 rows=37875 width=32) (actual time=0.021..0.021 rows=8 loops=1)
         Buckets: 65536  Batches: 1  Memory Usage: 513kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=37875 width=32) (actual time=0.013..0.016 rows=8 loops=1)
               Filter: ((company_id <= 877) AND (company_id >= 220))
               Rows Removed by Filter: 4
 Planning Time: 507.526 ms
 Execution Time: 790.209 ms
(26 rows)

                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=659150.67..1729347.43 rows=87266 width=244) (actual time=1514.318..1600.395 rows=39292 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=10000.22..10234.26 rows=93613 width=32) (actual time=0.024..0.026 rows=2 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=93613 width=32) (actual time=0.015..0.018 rows=2 loops=1)
               Filter: ((tax_percentage <= '0.01'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 10
   ->  Materialize  (cost=649150.44..649833.61 rows=136633 width=212) (actual time=1463.741..1567.683 rows=235861 loops=1)
         ->  Sort  (cost=649150.44..649492.03 rows=136633 width=212) (actual time=1463.738..1510.579 rows=235861 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 54384kB
               ->  Hash Join  (cost=296226.45..623485.18 rows=136633 width=212) (actual time=1163.592..1318.498 rows=238656 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=49098 width=52) (actual time=0.006..2.733 rows=16363 loops=1)
                           Filter: ((class_id <= '13'::double precision) AND (class_id >= '1'::double precision))
                           Rows Removed by Filter: 1637
                     ->  Hash  (cost=289474.77..289474.77 rows=193095 width=160) (actual time=1135.322..1135.324 rows=269863 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 32 (originally 16)  Memory Usage: 4066kB
                           ->  Merge Join  (cost=130060.87..289474.77 rows=193095 width=160) (actual time=681.386..855.549 rows=276336 loops=1)
                                 Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
                                 ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.115..0.166 rows=300 loops=1)
                                       Sort Key: ((promotion.promo_sk)::double precision)
                                       Sort Method: quicksort  Memory: 48kB
                                       ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.058 rows=300 loops=1)
                                 ->  Materialize  (cost=128998.56..129936.22 rows=187533 width=132) (actual time=681.263..772.898 rows=276337 loops=1)
                                       ->  Sort  (cost=128998.56..129467.39 rows=187533 width=132) (actual time=681.260..731.750 rows=276337 loops=1)
                                             Sort Key: store_sales.promo_sk
                                             Sort Method: external merge  Disk: 39816kB
                                             ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=187533 width=132) (actual time=0.041..551.110 rows=282902 loops=1)
                                                   Filter: ((net_profit <= '238.32'::double precision) AND (net_profit >= '-1'::double precision))
                                                   Rows Removed by Filter: 2597502
 Planning Time: 490.473 ms
 Execution Time: 1622.943 ms
(34 rows)

                                                                                                                QUERY PLAN                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=159392.12..197546.74 rows=110479 width=244) (actual time=1313.082..1407.079 rows=108286 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1041.25..1077.78 rows=14613 width=32) (actual time=0.027..0.029 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.014..0.018 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
   ->  Materialize  (cost=158350.87..158506.29 rows=31083 width=212) (actual time=1313.050..1372.921 rows=108287 loops=1)
         ->  Sort  (cost=158350.87..158428.58 rows=31083 width=212) (actual time=1313.047..1334.503 rows=108287 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 24880kB
               ->  Hash Join  (cost=145806.09..152842.98 rows=31083 width=212) (actual time=935.716..1245.185 rows=108622 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Merge Join  (cost=145250.01..149080.87 rows=32203 width=160) (actual time=931.049..1195.067 rows=220922 loops=1)
                           Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                           ->  Sort  (cost=10410.77..10605.32 rows=77817 width=28) (actual time=31.198..36.281 rows=44183 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: external merge  Disk: 2160kB
                                 ->  Seq Scan on customer  (cost=0.00..2227.00 rows=77817 width=28) (actual time=0.008..16.391 rows=44183 loops=1)
                                       Filter: ((birth_day <= '25'::double precision) AND (birth_day >= '12'::double precision))
                                       Rows Removed by Filter: 55817
                           ->  Materialize  (cost=134839.23..135512.76 rows=134705 width=132) (actual time=899.837..1062.633 rows=498567 loops=1)
                                 ->  Sort  (cost=134839.23..135175.99 rows=134705 width=132) (actual time=899.833..995.706 rows=498567 loops=1)
                                       Sort Key: store_sales.customer_sk
                                       Sort Method: external merge  Disk: 71568kB
                                       ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=134705 width=132) (actual time=0.037..611.697 rows=504641 loops=1)
                                             Filter: ((net_paid <= '5083.2'::double precision) AND (net_paid >= '168.3'::double precision) AND (net_profit <= '-83.76'::double precision) AND (net_profit >= '-792.54'::double precision))
                                             Rows Removed by Filter: 2375763
                     ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.640..4.641 rows=17954 loops=1)
                           Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.881 rows=18000 loops=1)
 Planning Time: 505.644 ms
 Execution Time: 1432.173 ms
(33 rows)

                                                                                                                                                                                                     QUERY PLAN                                                                                                                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=156773.65..173749.05 rows=13711 width=244) (actual time=696.323..696.877 rows=964 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=155693.74..155726.93 rows=13276 width=212) (actual time=696.291..696.365 rows=965 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 282kB
         ->  Hash Join  (cost=2718.02..154784.55 rows=13276 width=212) (actual time=6.637..695.705 rows=969 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=107588 width=132) (actual time=0.048..648.222 rows=550040 loops=1)
                     Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '2660.24'::double precision) AND (ext_sales_price >= '82.32'::double precision) AND (ext_tax <= '56.09'::double precision) AND (ext_tax >= '12.29'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                     Rows Removed by Filter: 2330364
               ->  Hash  (cost=2673.28..2673.28 rows=3580 width=80) (actual time=3.209..3.212 rows=43 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 38kB
                     ->  Hash Join  (cost=196.09..2673.28 rows=3580 width=80) (actual time=0.138..3.190 rows=43 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=3729 width=52) (actual time=0.006..2.713 rows=2882 loops=1)
                                 Filter: ((class_id <= '3'::double precision) AND (class_id >= '2'::double precision) AND (category_id <= '9'::double precision) AND (category_id >= '4'::double precision))
                                 Rows Removed by Filter: 15118
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.101..0.102 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.052 rows=300 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.024..0.065 rows=969 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.012..0.014 rows=12 loops=1)
 Planning Time: 519.610 ms
 Execution Time: 696.981 ms
(26 rows)

                                                                      QUERY PLAN                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=153954.05..237955.99 rows=113701 width=240) (actual time=1826.365..2965.885 rows=29105 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=153757.96..178876.24 rows=113701 width=212) (actual time=1825.270..2849.353 rows=1359059 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Merge Join  (cost=153069.03..163034.55 rows=147349 width=160) (actual time=1813.889..2511.194 rows=678577 loops=1)
               Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
               ->  Sort  (cost=16239.31..16561.23 rows=128768 width=28) (actual time=53.726..59.764 rows=46712 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external merge  Disk: 2280kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=128768 width=28) (actual time=0.013..30.621 rows=46712 loops=1)
                           Filter: ((birth_day <= '30'::double precision) AND (birth_day >= '16'::double precision))
                           Rows Removed by Filter: 53288
               ->  Materialize  (cost=136829.73..138006.07 rows=235268 width=132) (actual time=1760.143..2181.831 rows=1449996 loops=1)
                     ->  Sort  (cost=136829.73..137417.90 rows=235268 width=132) (actual time=1760.139..2001.376 rows=1449996 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 208632kB
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=235268 width=132) (actual time=0.049..690.624 rows=1484904 loops=1)
                                 Filter: ((net_profit <= '34.2'::double precision) AND (net_profit >= '-1631.16'::double precision))
                                 Rows Removed by Filter: 1395500
         ->  Hash  (cost=456.00..456.00 rows=18634 width=52) (actual time=11.334..11.335 rows=16125 loops=1)
               Buckets: 32768  Batches: 1  Memory Usage: 1642kB
               ->  Seq Scan on item  (cost=0.00..456.00 rows=18634 width=52) (actual time=0.012..7.077 rows=16144 loops=1)
                     Filter: ((category_id <= '9'::double precision) AND (category_id >= '1'::double precision))
                     Rows Removed by Filter: 1856
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.197..0.198 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.019..0.080 rows=300 loops=1)
 Planning Time: 503.336 ms
 Execution Time: 3003.048 ms
(29 rows)

                                                                                                                                                  QUERY PLAN                                                                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=770.84..130146.22 rows=243 width=244) (actual time=42.399..609.135 rows=26 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=629.24..129637.31 rows=138 width=212) (actual time=3.240..609.055 rows=92 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=29875 width=132) (actual time=0.057..595.813 rows=123307 loops=1)
               Filter: ((sales_price <= '48.26'::double precision) AND (sales_price >= '-1'::double precision) AND (ext_list_price <= '2055.9'::double precision) AND (ext_list_price >= '16.5'::double precision) AND (net_paid <= '2955.21'::double precision) AND (net_paid >= '766.69'::double precision))
               Rows Removed by Filter: 2757097
         ->  Hash  (cost=627.21..627.21 rows=163 width=80) (actual time=3.029..3.031 rows=43 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 14kB
               ->  Hash Join  (cost=24.64..627.21 rows=163 width=80) (actual time=0.157..3.015 rows=43 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=1057 width=52) (actual time=0.006..2.612 rows=2720 loops=1)
                           Filter: ((brand_id <= '4001001'::double precision) AND (brand_id >= '1001001'::double precision) AND (manufact_id <= '529'::double precision) AND (manufact_id >= '162'::double precision))
                           Rows Removed by Filter: 15280
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.093..0.093 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.057 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=30.40..30.40 rows=8896 width=32) (actual time=0.019..0.020 rows=4 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=8896 width=32) (actual time=0.014..0.016 rows=4 loops=1)
               Filter: ((company_id <= 175) AND (company_id >= 27))
               Rows Removed by Filter: 8
 Planning Time: 492.090 ms
 Execution Time: 609.204 ms
(26 rows)

                                                                                                              QUERY PLAN                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=131535.52..175721.80 rows=35733 width=244) (actual time=1060.819..1192.679 rows=151110 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.025..0.028 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.013..0.017 rows=12 loops=1)
   ->  Materialize  (cost=130455.61..130628.63 rows=34604 width=212) (actual time=1060.784..1144.130 rows=151111 loops=1)
         ->  Sort  (cost=130455.61..130542.12 rows=34604 width=212) (actual time=1060.781..1091.519 rows=151111 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 34752kB
               ->  Hash Join  (cost=118320.83..124297.74 rows=34604 width=212) (actual time=803.768..973.654 rows=152097 loops=1)
                     Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..8.490 rows=100000 loops=1)
                     ->  Hash  (cost=117009.29..117009.29 rows=34604 width=184) (actual time=803.717..803.719 rows=152097 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 16 (originally 2)  Memory Usage: 3841kB
                           ->  Hash Join  (cost=568.70..117009.29 rows=34604 width=184) (actual time=4.211..683.692 rows=153908 loops=1)
                                 Hash Cond: (store_sales.item_sk = item.item_sk)
                                 ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=261032 width=132) (actual time=0.039..604.984 rows=306648 loops=1)
                                       Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (net_paid <= '187.74'::double precision) AND (net_paid >= '23.84'::double precision))
                                       Rows Removed by Filter: 2573756
                                 ->  Hash  (cost=456.00..456.00 rows=9016 width=52) (actual time=4.147..4.148 rows=9040 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 905kB
                                       ->  Seq Scan on item  (cost=0.00..456.00 rows=9016 width=52) (actual time=0.006..3.019 rows=9040 loops=1)
                                             Filter: ((manufact_id <= '630'::double precision) AND (manufact_id >= '205'::double precision))
                                             Rows Removed by Filter: 8960
 Planning Time: 635.257 ms
 Execution Time: 1210.047 ms
(27 rows)

                                                                                                      QUERY PLAN                                                                                                       
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=4506.49..106567.88 rows=20865 width=244) (actual time=3.346..549.099 rows=697 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=4460.29..106013.40 rows=9092 width=212) (actual time=3.317..548.641 rows=1088 loops=1)
         Hash Cond: (store_sales.item_sk = item.item_sk)
         ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=240225 width=132) (actual time=0.036..517.438 rows=343145 loops=1)
               Filter: ((ext_tax <= '66.8'::double precision) AND (ext_tax >= '36.15'::double precision))
               Rows Removed by Filter: 2537259
         ->  Hash  (cost=4376.07..4376.07 rows=6737 width=80) (actual time=3.190..3.193 rows=40 loops=1)
               Buckets: 8192  Batches: 1  Memory Usage: 69kB
               ->  Hash Join  (cost=196.09..4376.07 rows=6737 width=80) (actual time=0.164..3.177 rows=40 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=7017 width=52) (actual time=0.006..2.719 rows=2684 loops=1)
                           Filter: ((current_price <= '4.52'::double precision) AND (current_price >= '2.03'::double precision) AND (category_id <= '5'::double precision) AND (category_id >= '1'::double precision))
                           Rows Removed by Filter: 15316
                     ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.082..0.083 rows=293 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 147kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.038 rows=300 loops=1)
   ->  Hash  (cost=44.00..44.00 rows=176 width=32) (actual time=0.023..0.023 rows=7 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=176 width=32) (actual time=0.014..0.018 rows=7 loops=1)
               Filter: ((market_id <= 9) AND (market_id >= 2) AND (devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 5
 Planning Time: 480.543 ms
 Execution Time: 549.202 ms
(24 rows)

                                                                                                                                                      QUERY PLAN                                                                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=130227.31..133002.33 rows=83 width=244) (actual time=594.299..605.203 rows=187 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=43648 width=28) (actual time=0.019..9.972 rows=8195 loops=1)
         Filter: ((birth_month <= '7'::double precision) AND (birth_month >= '7'::double precision))
         Rows Removed by Filter: 91805
   ->  Hash  (cost=130222.95..130222.95 rows=349 width=216) (actual time=594.259..594.262 rows=2135 loops=1)
         Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 566kB
         ->  Hash Join  (cost=673.96..130222.95 rows=349 width=216) (actual time=4.180..592.948 rows=2144 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Hash Join  (cost=615.34..129563.52 rows=1712 width=184) (actual time=4.033..590.712 rows=12634 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=57509 width=132) (actual time=0.061..577.238 rows=38039 loops=1)
                           Filter: ((list_price <= '96.04'::double precision) AND (list_price >= '6.29'::double precision) AND (sales_price <= '102.45'::double precision) AND (sales_price >= '45.34'::double precision) AND (net_paid <= '1139.96'::double precision) AND (net_paid >= '534.75'::double precision))
                           Rows Removed by Filter: 2842365
                     ->  Hash  (cost=546.00..546.00 rows=5547 width=52) (actual time=3.909..3.910 rows=6028 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 582kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=5547 width=52) (actual time=0.005..3.174 rows=6028 loops=1)
                                 Filter: ((class_id <= '11'::double precision) AND (class_id >= '3'::double precision) AND (manufact_id <= '816'::double precision) AND (manufact_id >= '182'::double precision))
                                 Rows Removed by Filter: 11972
               ->  Hash  (cost=44.00..44.00 rows=1170 width=32) (actual time=0.010..0.011 rows=4 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 17kB
                     ->  Seq Scan on store  (cost=0.00..44.00 rows=1170 width=32) (actual time=0.005..0.007 rows=4 loops=1)
                           Filter: ((number_employees <= 294) AND (number_employees >= 229) AND (floor_space <= 9294113) AND (floor_space >= 9026222) AND (devision_id <= 1) AND (devision_id >= 1))
                           Rows Removed by Filter: 8
 Planning Time: 477.948 ms
 Execution Time: 605.279 ms
(26 rows)

                                                                  QUERY PLAN                                                                  
----------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=122802.27..154141.50 rows=46401 width=240) (actual time=725.113..844.534 rows=59 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=122606.18..129915.05 rows=46401 width=212) (actual time=715.593..843.960 rows=2794 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Merge Join  (cost=122050.10..124570.40 rows=48099 width=160) (actual time=710.801..834.428 rows=36946 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=110783.74..110968.50 rows=73906 width=132) (actual time=699.457..775.641 rows=433926 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 62472kB
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=73906 width=132) (actual time=0.038..446.034 rows=444473 loops=1)
                           Filter: ((sales_price <= '113.7'::double precision) AND (sales_price >= '64.88'::double precision))
                           Rows Removed by Filter: 2435931
               ->  Materialize  (cost=11266.36..11693.37 rows=85403 width=28) (actual time=11.335..14.708 rows=38061 loops=1)
                     ->  Sort  (cost=11266.36..11479.87 rows=85403 width=28) (actual time=11.331..11.898 rows=8502 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: quicksort  Memory: 1049kB
                           ->  Seq Scan on customer  (cost=0.00..2227.00 rows=85403 width=28) (actual time=0.021..10.193 rows=8502 loops=1)
                                 Filter: ((birth_year <= '1969'::double precision) AND (birth_year >= '1964'::double precision))
                                 Rows Removed by Filter: 91498
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.743..4.743 rows=17954 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.839 rows=18000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.090..0.091 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.046 rows=300 loops=1)
 Planning Time: 492.482 ms
 Execution Time: 855.663 ms
(27 rows)

                                                              QUERY PLAN                                                               
---------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1262.58..87146.88 rows=960 width=244) (actual time=4.948..648.739 rows=10022 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=1220.88..86744.23 rows=1333 width=212) (actual time=4.668..640.974 rows=61928 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.033..314.121 rows=2880404 loops=1)
         ->  Hash  (cost=1204.43..1204.43 rows=1316 width=80) (actual time=4.620..4.622 rows=290 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 50kB
               ->  Hash Join  (cost=24.64..1204.43 rows=1316 width=80) (actual time=0.113..4.531 rows=291 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.976 rows=18000 loops=1)
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.094..0.095 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.057 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=30.40..30.40 rows=904 width=32) (actual time=0.019..0.020 rows=2 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=904 width=32) (actual time=0.014..0.016 rows=2 loops=1)
               Filter: ((floor_space <= 6995995) AND (floor_space >= 6995995))
               Rows Removed by Filter: 10
 Planning Time: 521.447 ms
 Execution Time: 649.212 ms
(22 rows)

                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=116462.44..117243.82 rows=1421 width=244) (actual time=670.513..670.735 rows=448 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=117.95..121.77 rows=1527 width=32) (actual time=0.023..0.024 rows=1 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=1527 width=32) (actual time=0.016..0.018 rows=1 loops=1)
               Filter: ((market_id <= 10) AND (market_id >= 8) AND (company_id <= 175) AND (company_id >= 175))
               Rows Removed by Filter: 11
   ->  Sort  (cost=116344.48..116359.56 rows=6032 width=212) (actual time=669.983..670.287 rows=2806 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 852kB
         ->  Hash Join  (cost=1347.75..115965.72 rows=6032 width=212) (actual time=3.594..668.471 rows=2844 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=106371 width=132) (actual time=0.037..590.614 rows=1019489 loops=1)
                     Filter: ((list_price <= '121.46'::double precision) AND (list_price >= '37.77'::double precision) AND (ext_tax <= '77.34'::double precision) AND (ext_tax >= '0'::double precision))
                     Rows Removed by Filter: 1860915
               ->  Hash  (cost=1334.03..1334.03 rows=1097 width=80) (actual time=3.006..3.008 rows=35 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 21kB
                     ->  Hash Join  (cost=196.09..1334.03 rows=1097 width=80) (actual time=0.155..2.995 rows=35 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=1143 width=52) (actual time=0.005..2.651 rows=1972 loops=1)
                                 Filter: ((class_id <= '2'::double precision) AND (class_id >= '1'::double precision) AND (manufact_id <= '381'::double precision) AND (manufact_id >= '158'::double precision))
                                 Rows Removed by Filter: 16028
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.079..0.080 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.037 rows=300 loops=1)
 Planning Time: 476.091 ms
 Execution Time: 670.822 ms
(28 rows)

                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=882.11..103104.95 rows=1914 width=244) (actual time=9.502..585.724 rows=289 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=832.29..102882.34 rows=570 width=212) (actual time=4.095..585.445 rows=919 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=159963 width=132) (actual time=0.037..546.186 rows=446322 loops=1)
               Filter: ((net_profit <= '-782.6'::double precision) AND (net_profit >= '-1747.45'::double precision))
               Rows Removed by Filter: 2434082
         ->  Hash  (cost=824.35..824.35 rows=636 width=80) (actual time=3.839..3.842 rows=101 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 20kB
               ->  Hash Join  (cost=24.64..824.35 rows=636 width=80) (actual time=0.161..3.810 rows=101 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=4741 width=52) (actual time=0.006..2.953 rows=6646 loops=1)
                           Filter: ((current_price <= '88.02'::double precision) AND (current_price >= '4.79'::double precision) AND (class_id <= '12'::double precision) AND (class_id >= '1'::double precision))
                           Rows Removed by Filter: 11354
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.090..0.091 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.006..0.055 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
   ->  Hash  (cost=37.20..37.20 rows=1009 width=32) (actual time=0.020..0.021 rows=4 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=1009 width=32) (actual time=0.014..0.017 rows=4 loops=1)
               Filter: ((number_employees <= 288) AND (number_employees >= 245) AND (devision_id <= 1) AND (devision_id >= 1))
               Rows Removed by Filter: 8
 Planning Time: 493.051 ms
 Execution Time: 585.804 ms
(26 rows)

                                                                                                             QUERY PLAN                                                                                                             
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=194915.87..201147.46 rows=5098 width=244) (actual time=1247.598..1418.550 rows=261370 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=193835.96..193848.15 rows=4874 width=212) (actual time=1247.557..1297.346 rows=261371 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 60112kB
         ->  Merge Join  (cost=142597.73..193537.43 rows=4874 width=212) (actual time=820.941..1059.817 rows=262995 loops=1)
               Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
               ->  Sort  (cost=4227.41..4241.89 rows=5792 width=80) (actual time=4.928..4.969 rows=173 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 49kB
                     ->  Hash Join  (cost=196.09..3865.44 rows=5792 width=80) (actual time=0.156..4.841 rows=173 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=6031 width=52) (actual time=0.016..3.584 rows=9870 loops=1)
                                 Filter: ((category_id <= '10'::double precision) AND (category_id >= '4'::double precision) AND (manufact_id <= '583'::double precision) AND (manufact_id >= '25'::double precision))
                                 Rows Removed by Filter: 8130
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.103..0.104 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.056 rows=300 loops=1)
               ->  Materialize  (cost=138370.32..139153.19 rows=156574 width=132) (actual time=816.005..952.577 rows=454444 loops=1)
                     ->  Sort  (cost=138370.32..138761.76 rows=156574 width=132) (actual time=816.001..892.730 rows=454444 loops=1)
                           Sort Key: store_sales.promo_sk
                           Sort Method: external merge  Disk: 65456kB
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=156574 width=132) (actual time=0.043..574.196 rows=461572 loops=1)
                                 Filter: ((ext_list_price <= '1209.25'::double precision) AND (ext_list_price >= '-1'::double precision) AND (net_paid <= '2552.93'::double precision) AND (net_paid >= '99.63'::double precision))
                                 Rows Removed by Filter: 2418832
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.033..11.363 rows=261375 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.019..0.022 rows=12 loops=1)
 Planning Time: 512.767 ms
 Execution Time: 1450.371 ms
(31 rows)

                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=311548.44..363379.29 rows=204258 width=240) (actual time=2121.332..3334.801 rows=2614882 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=310992.35..341737.00 rows=211803 width=188) (actual time=2115.973..2729.209 rows=769042 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..9.111 rows=100000 loops=1)
         ->  Hash  (cost=303735.98..303735.98 rows=207550 width=160) (actual time=2115.921..2115.923 rows=769042 loops=1)
               Buckets: 32768 (originally 32768)  Batches: 64 (originally 16)  Memory Usage: 3841kB
               ->  Merge Join  (cost=132361.84..303735.98 rows=207550 width=160) (actual time=982.187..1515.935 rows=778440 loops=1)
                     Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
                     ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.129..0.192 rows=300 loops=1)
                           Sort Key: ((promotion.promo_sk)::double precision)
                           Sort Method: quicksort  Memory: 48kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.009..0.064 rows=300 loops=1)
                     ->  Materialize  (cost=131299.52..132307.59 rows=201613 width=132) (actual time=982.050..1259.948 rows=778441 loops=1)
                           ->  Sort  (cost=131299.52..131803.56 rows=201613 width=132) (actual time=982.046..1136.025 rows=778441 loops=1)
                                 Sort Key: store_sales.promo_sk
                                 Sort Method: external merge  Disk: 112072kB
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=201613 width=132) (actual time=0.036..541.503 rows=797351 loops=1)
                                       Filter: ((net_paid_inc_tax <= '396.74'::double precision) AND (net_paid_inc_tax >= '14.64'::double precision))
                                       Rows Removed by Filter: 2083053
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.330..5.331 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..2.166 rows=18000 loops=1)
 Planning Time: 527.014 ms
 Execution Time: 3447.022 ms
(25 rows)

                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=145049.41..201747.56 rows=45953 width=244) (actual time=3017.284..3308.701 rows=336459 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.049..0.055 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.017..0.023 rows=12 loops=1)
   ->  Materialize  (cost=143969.50..144191.64 rows=44427 width=212) (actual time=3017.224..3201.573 rows=336460 loops=1)
         ->  Sort  (cost=143969.50..144080.57 rows=44427 width=212) (actual time=3017.220..3084.932 rows=336460 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 77272kB
               ->  Hash Join  (cost=130340.58..135982.90 rows=44427 width=212) (actual time=2513.271..2794.215 rows=338547 loops=1)
                     Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.009..8.875 rows=100000 loops=1)
                     ->  Hash  (cost=128656.23..128656.23 rows=44427 width=184) (actual time=2475.475..2475.478 rows=338547 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 32 (originally 4)  Memory Usage: 3841kB
                           ->  Hash Join  (cost=113220.38..128656.23 rows=44427 width=184) (actual time=1471.015..2265.767 rows=342878 loops=1)
                                 Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=3745 width=52) (actual time=0.010..2.486 rows=4415 loops=1)
                                       Filter: ((current_price <= '5.08'::double precision) AND (current_price >= '2.99'::double precision))
                                       Rows Removed by Filter: 13585
                                 ->  Hash  (cost=99753.18..99753.18 rows=420416 width=132) (actual time=1440.144..1440.145 rows=1771035 loops=1)
                                       Buckets: 32768 (originally 32768)  Batches: 128 (originally 32)  Memory Usage: 3841kB
                                       ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=420416 width=132) (actual time=0.043..619.117 rows=1813689 loops=1)
                                             Filter: ((ext_sales_price <= '3148.4'::double precision) AND (ext_sales_price >= '118.72'::double precision))
                                             Rows Removed by Filter: 1066715
 Planning Time: 611.339 ms
 Execution Time: 3351.612 ms
(27 rows)

                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=146889.20..156341.12 rows=101 width=244) (actual time=555.546..570.848 rows=45 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=222054 width=28) (actual time=0.016..11.760 rows=67639 loops=1)
         Filter: ((birth_day <= '31'::double precision) AND (birth_day >= '10'::double precision))
         Rows Removed by Filter: 32361
   ->  Hash  (cost=146886.30..146886.30 rows=232 width=216) (actual time=553.697..553.699 rows=62 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 24kB
         ->  Hash Join  (cost=592.71..146886.30 rows=232 width=216) (actual time=35.172..553.629 rows=62 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Hash Join  (cost=504.29..144464.26 rows=1686 width=184) (actual time=7.234..553.515 rows=150 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=11315 width=132) (actual time=0.364..545.997 rows=14452 loops=1)
                           Filter: ((list_price <= '139.65'::double precision) AND (list_price >= '91.39'::double precision) AND (ext_list_price <= '1589.28'::double precision) AND (ext_list_price >= '59.96'::double precision) AND (ext_coupon_amt <= '966.38'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid_inc_tax <= '576.65'::double precision) AND (net_paid_inc_tax >= '371.28'::double precision))
                           Rows Removed by Filter: 2865952
                     ->  Hash  (cost=456.00..456.00 rows=3863 width=52) (actual time=4.694..4.695 rows=10166 loops=1)
                           Buckets: 16384 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 1002kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=3863 width=52) (actual time=0.006..2.728 rows=10176 loops=1)
                                 Filter: ((current_price <= '7.61'::double precision) AND (current_price >= '1.62'::double precision))
                                 Rows Removed by Filter: 7824
               ->  Hash  (cost=30.40..30.40 rows=4642 width=32) (actual time=0.029..0.030 rows=4 loops=1)
                     Buckets: 8192  Batches: 1  Memory Usage: 65kB
                     ->  Seq Scan on store  (cost=0.00..30.40 rows=4642 width=32) (actual time=0.020..0.024 rows=4 loops=1)
                           Filter: ((company_id <= 255) AND (company_id >= 220))
                           Rows Removed by Filter: 8
 Planning Time: 552.959 ms
 Execution Time: 570.926 ms
(26 rows)

                                                                                                                                            QUERY PLAN                                                                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=129607.72..134140.54 rows=329 width=244) (actual time=524.169..534.114 rows=32 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=129394.03..132481.53 rows=319 width=212) (actual time=524.113..534.043 rows=32 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=42780 width=28) (actual time=0.011..9.584 rows=8319 loops=1)
               Filter: ((birth_month <= '8'::double precision) AND (birth_month >= '8'::double precision))
               Rows Removed by Filter: 91681
         ->  Hash  (cost=129385.01..129385.01 rows=722 width=184) (actual time=523.581..523.582 rows=537 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 126kB
               ->  Hash Join  (cost=563.02..129385.01 rows=722 width=184) (actual time=3.657..523.238 rows=541 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=59175 width=132) (actual time=0.081..518.822 rows=9909 loops=1)
                           Filter: ((quantity <= '48'::double precision) AND (quantity >= '46'::double precision) AND (ext_tax <= '16.55'::double precision) AND (ext_tax >= '2.94'::double precision) AND (net_paid <= '3145.8'::double precision) AND (net_paid >= '166.63'::double precision))
                           Rows Removed by Filter: 2870495
                     ->  Hash  (cost=546.00..546.00 rows=1362 width=52) (actual time=2.722..2.722 rows=1105 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 111kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=1362 width=52) (actual time=0.009..2.578 rows=1105 loops=1)
                                 Filter: ((current_price <= '7.39'::double precision) AND (current_price >= '3.53'::double precision) AND (class_id <= '5'::double precision) AND (class_id >= '4'::double precision))
                                 Rows Removed by Filter: 16895
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.020..0.021 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.014 rows=12 loops=1)
 Planning Time: 478.744 ms
 Execution Time: 534.185 ms
(24 rows)


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=793.75..158309.10 rows=32 width=244) (actual time=6.841..520.029 rows=19 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=580.06..157953.60 rows=31 width=212) (actual time=6.798..519.962 rows=19 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Hash Join  (cost=555.42..157920.84 rows=152 width=184) (actual time=3.829..519.718 rows=405 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=1920 width=132) (actual time=0.074..514.744 rows=23290 loops=1)
                     Filter: ((list_price <= '27.15'::double precision) AND (list_price >= '5.72'::double precision) AND (ext_sales_price <= '2344.75'::double precision) AND (ext_sales_price >= '102.29'::double precision) AND (ext_wholesale_cost <= '5679.44'::double precision) AND (ext_wholesale_cost >= '633.16'::double precision) AND (ext_tax <= '108.3'::double precision) AND (ext_tax >= '51.36'::double precision) AND (ext_coupon_amt <= '0.79'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                     Rows Removed by Filter: 2857114
               ->  Hash  (cost=546.00..546.00 rows=754 width=52) (actual time=2.379..2.380 rows=316 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 36kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=754 width=52) (actual time=0.010..2.334 rows=316 loops=1)
                           Filter: ((current_price <= '8.02'::double precision) AND (current_price >= '5.77'::double precision) AND (class_id <= '13'::double precision) AND (class_id >= '10'::double precision))
                           Rows Removed by Filter: 17684
         ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.114..0.114 rows=291 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 35kB
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.008..0.066 rows=293 loops=1)
                     Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                     Rows Removed by Filter: 7
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.019..0.020 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.013 rows=12 loops=1)
 Planning Time: 484.355 ms
 Execution Time: 520.104 ms
(24 rows)

                                                                                                                                                          QUERY PLAN                                                                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=136370.04..136640.38 rows=7068 width=244) (actual time=690.561..756.068 rows=48429 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=135813.95..135998.06 rows=7068 width=192) (actual time=685.632..735.192 rows=48429 loops=1)
         Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
         ->  Sort  (cost=133030.64..133048.31 rows=7068 width=164) (actual time=630.117..639.596 rows=48430 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: external merge  Disk: 8464kB
               ->  Merge Join  (cost=130317.30..132578.71 rows=7068 width=164) (actual time=575.564..594.012 rows=48590 loops=1)
                     Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                     ->  Sort  (cost=89.91..92.83 rows=1168 width=32) (actual time=0.014..0.017 rows=5 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..30.40 rows=1168 width=32) (actual time=0.006..0.009 rows=5 loops=1)
                                 Filter: ((number_employees <= 245) AND (number_employees >= 218))
                                 Rows Removed by Filter: 7
                     ->  Sort  (cost=130227.39..130285.07 rows=23073 width=132) (actual time=575.541..581.910 rows=48591 loops=1)
                           Sort Key: store_sales.store_sk
                           Sort Method: external sort  Disk: 14256kB
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=23073 width=132) (actual time=0.041..515.807 rows=97261 loops=1)
                                 Filter: ((quantity <= '9'::double precision) AND (quantity >= '-1'::double precision) AND (sales_price <= '155.98'::double precision) AND (sales_price >= '3.16'::double precision) AND (net_paid_inc_tax <= '226.29'::double precision) AND (net_paid_inc_tax >= '43.4'::double precision))
                                 Rows Removed by Filter: 2783143
         ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=55.506..67.034 rows=115458 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external sort  Disk: 5216kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.020..13.249 rows=100000 loops=1)
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.904..4.904 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.013..2.104 rows=18000 loops=1)
 Planning Time: 557.160 ms
 Execution Time: 762.939 ms
(30 rows)



 Merge Join  (cost=180784.20..192848.27 rows=9747 width=244) (actual time=629.010..629.018 rows=6 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=179704.29..179727.88 rows=9435 width=212) (actual time=628.986..628.988 rows=6 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 26kB
         ->  Hash Join  (cost=176238.12..179081.39 rows=9435 width=212) (actual time=624.468..628.981 rows=6 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Merge Join  (cost=175682.04..177553.14 rows=9765 width=160) (actual time=613.576..619.092 rows=51 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=164380.69..164500.82 rows=48054 width=132) (actual time=599.367..599.394 rows=225 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: quicksort  Memory: 84kB
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=48054 width=132) (actual time=15.800..599.252 rows=225 loops=1)
                                 Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '3551.68'::double precision) AND (ext_list_price >= '2426.16'::double precision) AND (ext_tax <= '579.32'::double precision) AND (ext_tax >= '295.68'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '-1'::double precision) AND (net_paid_inc_tax <= '4947.28'::double precision) AND (net_paid_inc_tax >= '1718.13'::double precision))
                                 Rows Removed by Filter: 2880179
                     ->  Materialize  (cost=11301.35..11729.93 rows=85717 width=28) (actual time=14.100..17.382 rows=20735 loops=1)
                           ->  Sort  (cost=11301.35..11515.64 rows=85717 width=28) (actual time=14.095..14.990 rows=20735 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: quicksort  Memory: 2406kB
                                 ->  Seq Scan on customer  (cost=0.00..2227.00 rows=85717 width=28) (actual time=0.015..11.294 rows=20959 loops=1)
                                       Filter: ((birth_year <= '1971'::double precision) AND (birth_year >= '1957'::double precision))
                                       Rows Removed by Filter: 79041
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=9.837..9.837 rows=17954 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.018..3.565 rows=18000 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.019..0.020 rows=12 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.006..0.007 rows=12 loops=1)
 Planning Time: 505.092 ms
 Execution Time: 629.130 ms
(31 rows)



 Merge Join  (cost=162946.63..171925.69 rows=6508 width=244) (actual time=764.452..777.705 rows=22728 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=161905.38..161923.65 rows=7306 width=212) (actual time=764.420..767.210 rows=22729 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 5208kB
         ->  Hash Join  (cost=161158.83..161436.52 rows=7306 width=212) (actual time=709.031..747.419 rows=22750 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=160602.74..160788.27 rows=7555 width=160) (actual time=700.041..730.637 rows=22750 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=157819.43..157837.45 rows=7210 width=132) (actual time=645.641..648.743 rows=22751 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 3264kB
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=7210 width=132) (actual time=0.056..628.321 rows=22818 loops=1)
                                 Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '598.07'::double precision) AND (ext_sales_price >= '138.32'::double precision) AND (ext_tax <= '14.99'::double precision) AND (ext_tax >= '-1'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '-643.28'::double precision) AND (net_profit >= '-962.38'::double precision))
                                 Rows Removed by Filter: 2857586
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.389..64.572 rows=103191 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.013..12.964 rows=100000 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=8.963..8.963 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.018..3.636 rows=18000 loops=1)
   ->  Sort  (cost=1041.25..1077.78 rows=14613 width=32) (actual time=0.027..1.005 rows=22733 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.015..0.018 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
 Planning Time: 479.794 ms
 Execution Time: 781.058 ms
(29 rows)

                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=94645.66..99534.30 rows=100457 width=244) (actual time=712.304..746.909 rows=50713 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=86413.05..86414.85 rows=720 width=212) (actual time=712.271..723.000 rows=60721 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 14104kB
         ->  Hash Join  (cost=883.36..86378.89 rows=720 width=212) (actual time=8.976..662.796 rows=62181 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.055..320.142 rows=2880404 loops=1)
               ->  Hash  (cost=874.48..874.48 rows=711 width=80) (actual time=8.904..8.906 rows=290 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 42kB
                     ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.233..8.736 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.008..3.583 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.201..0.202 rows=291 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.013..0.122 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                       Rows Removed by Filter: 6
   ->  Materialize  (cost=8232.61..8622.16 rows=77909 width=32) (actual time=0.025..2.151 rows=40402 loops=1)
         ->  Sort  (cost=8232.61..8427.38 rows=77909 width=32) (actual time=0.023..0.024 rows=9 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..37.20 rows=77909 width=32) (actual time=0.011..0.014 rows=9 loops=1)
                     Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.03'::double precision))
                     Rows Removed by Filter: 3
 Planning Time: 550.542 ms
 Execution Time: 751.155 ms
(27 rows)

                                                                                                                                                            QUERY PLAN                                                                                                                                                             
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=137029.51..149026.96 rows=15864 width=244) (actual time=574.929..576.483 rows=2649 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=131274.54..131279.60 rows=2020 width=212) (actual time=574.896..575.094 rows=2650 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 802kB
         ->  Hash Join  (cost=895.22..131163.64 rows=2020 width=212) (actual time=8.017..573.377 rows=2657 loops=1)
               Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=21064 width=132) (actual time=0.169..561.532 rows=41475 loops=1)
                     Filter: ((list_price <= '98.34'::double precision) AND (list_price >= '84.18'::double precision) AND (ext_wholesale_cost <= '1363.66'::double precision) AND (ext_wholesale_cost >= '120.48'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '-1'::double precision))
                     Rows Removed by Filter: 2838929
               ->  Hash  (cost=891.75..891.75 rows=277 width=80) (actual time=6.557..6.559 rows=19 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 11kB
                     ->  Hash Join  (cost=196.09..891.75 rows=277 width=80) (actual time=0.792..6.542 rows=19 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=289 width=52) (actual time=0.016..6.049 rows=1209 loops=1)
                                 Filter: ((category_id <= '10'::double precision) AND (category_id >= '7'::double precision) AND (manufact_id <= '222'::double precision) AND (manufact_id >= '128'::double precision))
                                 Rows Removed by Filter: 16791
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.179..0.179 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.008..0.067 rows=300 loops=1)
   ->  Sort  (cost=5754.97..5932.37 rows=70963 width=32) (actual time=0.026..0.140 rows=2654 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=70963 width=32) (actual time=0.012..0.015 rows=12 loops=1)
               Filter: ((floor_space <= 9341467) AND (floor_space >= 5219562) AND (devision_id <= 1) AND (devision_id >= 1))
 Planning Time: 488.186 ms
 Execution Time: 576.681 ms
(27 rows)

                                                                           QUERY PLAN                                                                            
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=132727.10..136201.58 rows=22512 width=244) (actual time=544.615..545.192 rows=443 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=108.46..111.88 rows=1368 width=32) (actual time=0.041..0.043 rows=3 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=1368 width=32) (actual time=0.030..0.034 rows=3 loops=1)
               Filter: ((market_id <= 6) AND (market_id >= 2) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 9
   ->  Materialize  (cost=132618.64..132766.87 rows=29647 width=212) (actual time=544.564..544.893 rows=1359 loops=1)
         ->  Sort  (cost=132618.64..132692.76 rows=29647 width=212) (actual time=544.554..544.655 rows=1359 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 416kB
               ->  Hash Join  (cost=2694.23..127375.04 rows=29647 width=212) (actual time=4.124..543.715 rows=1385 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=189443 width=132) (actual time=0.039..518.144 rows=199718 loops=1)
                           Filter: ((net_paid_inc_tax <= '130.06'::double precision) AND (net_paid_inc_tax >= '56.39'::double precision))
                           Rows Removed by Filter: 2680686
                     ->  Hash  (cost=2648.01..2648.01 rows=3697 width=80) (actual time=3.916..3.918 rows=92 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 43kB
                           ->  Hash Join  (cost=196.09..2648.01 rows=3697 width=80) (actual time=0.128..3.882 rows=92 loops=1)
                                 Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=3854 width=52) (actual time=0.006..3.001 rows=5683 loops=1)
                                       Filter: ((class_id <= '4'::double precision) AND (class_id >= '3'::double precision))
                                       Rows Removed by Filter: 12317
                                 ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.094..0.094 rows=293 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                       ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.042 rows=300 loops=1)
 Planning Time: 498.598 ms
 Execution Time: 545.289 ms
(29 rows)

                                                                                       QUERY PLAN                                                                                        
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=95222.87..95435.02 rows=16347 width=244) (actual time=3257.321..3676.463 rows=253383 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=94516.52..94669.80 rows=3957 width=192) (actual time=3252.226..3572.122 rows=446068 loops=1)
         Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
         ->  Sort  (cost=91733.21..91743.10 rows=3957 width=164) (actual time=3197.716..3278.853 rows=446069 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: external merge  Disk: 78504kB
               ->  Merge Join  (cost=86669.91..91496.76 rows=3957 width=164) (actual time=2683.424..2858.600 rows=456896 loops=1)
                     Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                     ->  Sort  (cost=261.48..270.92 rows=3775 width=32) (actual time=0.012..0.013 rows=1 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..37.20 rows=3775 width=32) (actual time=0.006..0.008 rows=1 loops=1)
                                 Filter: ((company_id <= 767) AND (company_id >= 337) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.03'::double precision))
                                 Rows Removed by Filter: 11
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2683.402..2743.891 rows=456897 loops=1)
                           Sort Key: store_sales.store_sk
                           Sort Method: external sort  Disk: 408576kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.039..326.910 rows=2880404 loops=1)
         ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.499..105.136 rows=513183 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external sort  Disk: 5216kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.021..13.293 rows=100000 loops=1)
   ->  Hash  (cost=456.00..456.00 rows=20028 width=52) (actual time=5.046..5.047 rows=10246 loops=1)
         Buckets: 32768  Batches: 1  Memory Usage: 1136kB
         ->  Seq Scan on item  (cost=0.00..456.00 rows=20028 width=52) (actual time=0.017..3.527 rows=10246 loops=1)
               Filter: ((class_id <= '12'::double precision) AND (class_id >= '3'::double precision))
               Rows Removed by Filter: 7754
 Planning Time: 549.042 ms
 Execution Time: 3761.896 ms
(30 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=88617.68..129185.88 rows=38410 width=244) (actual time=2016.598..4358.485 rows=43032 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=88421.59..108264.30 rows=40020 width=216) (actual time=2016.200..4174.160 rows=1854116 loops=1)
         Hash Cond: (store_sales.item_sk = item.item_sk)
         ->  Merge Join  (cost=87488.34..106932.53 rows=15966 width=164) (actual time=2002.818..3540.927 rows=2750370 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2002.777..2428.939 rows=2750371 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 397328kB
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.051..326.981 rows=2880404 loops=1)
               ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.032..118.384 rows=2750375 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.017..0.020 rows=12 loops=1)
         ->  Hash  (cost=456.00..456.00 rows=38180 width=52) (actual time=13.273..13.274 rows=12063 loops=1)
               Buckets: 65536  Batches: 1  Memory Usage: 1549kB
               ->  Seq Scan on item  (cost=0.00..456.00 rows=38180 width=52) (actual time=0.014..8.914 rows=12063 loops=1)
                     Filter: ((brand_id <= '10002015'::double precision) AND (brand_id >= '3002002'::double precision))
                     Rows Removed by Filter: 5937
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.255..0.255 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.023..0.107 rows=300 loops=1)
 Planning Time: 538.554 ms
 Execution Time: 4425.745 ms
(24 rows)



 Hash Join  (cost=2729.93..160932.32 rows=150 width=240) (actual time=203.025..593.399 rows=5 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=2533.84..160658.63 rows=150 width=212) (actual time=40.409..593.210 rows=297 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=616.75..158171.02 rows=150 width=184) (actual time=4.354..549.117 rows=297 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=2023 width=132) (actual time=0.129..542.909 rows=25112 loops=1)
                     Filter: ((list_price <= '133.67'::double precision) AND (list_price >= '84.12'::double precision) AND (sales_price <= '24.76'::double precision) AND (sales_price >= '13.37'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '3409.56'::double precision) AND (ext_wholesale_cost >= '835.77'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                     Rows Removed by Filter: 2855292
               ->  Hash  (cost=456.00..456.00 rows=12860 width=52) (actual time=2.835..2.836 rows=2210 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 318kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=12860 width=52) (actual time=0.009..2.483 rows=2213 loops=1)
                           Filter: ((brand_id <= '10006001'::double precision) AND (brand_id >= '9002009'::double precision))
                           Rows Removed by Filter: 15787
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=36.030..36.031 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..11.171 rows=100000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.100..0.100 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.051 rows=300 loops=1)
 Planning Time: 500.263 ms
 Execution Time: 593.474 ms
(22 rows)

                                                                                   QUERY PLAN                                                                                    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=316307.49..433437.07 rows=124944 width=244) (actual time=2391.049..2403.559 rows=12814 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=315751.40..431356.88 rows=124944 width=192) (actual time=2382.105..2389.933 rows=12814 loops=1)
         Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
         ->  Sort  (cost=248.51..257.20 rows=3477 width=32) (actual time=0.025..0.027 rows=2 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..44.00 rows=3477 width=32) (actual time=0.012..0.015 rows=2 loops=1)
                     Filter: ((number_employees <= 288) AND (number_employees >= 245) AND (market_id <= 4) AND (market_id >= 2) AND (company_id <= 337) AND (company_id >= 220))
                     Rows Removed by Filter: 10
         ->  Materialize  (cost=315502.89..317474.30 rows=394283 width=160) (actual time=2361.174..2380.179 rows=63957 loops=1)
               ->  Sort  (cost=315502.89..316488.60 rows=394283 width=160) (actual time=2361.171..2371.736 rows=63957 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 13480kB
                     ->  Hash Join  (cost=138553.57..216864.50 rows=394283 width=160) (actual time=1510.013..2321.906 rows=77752 loops=1)
                           Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
                           ->  Seq Scan on customer  (cost=0.00..2227.00 rows=30553 width=28) (actual time=0.010..9.162 rows=3179 loops=1)
                                 Filter: ((birth_day <= '9'::double precision) AND (birth_day >= '9'::double precision))
                                 Rows Removed by Filter: 96821
                           ->  Hash  (cost=99753.18..99753.18 rows=1211311 width=132) (actual time=1509.955..1509.956 rows=2451046 loops=1)
                                 Buckets: 32768 (originally 32768)  Batches: 128 (originally 64)  Memory Usage: 3841kB
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1211311 width=132) (actual time=0.043..628.596 rows=2510387 loops=1)
                                       Filter: ((ext_coupon_amt <= '513.26'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                       Rows Removed by Filter: 370017
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=8.918..8.919 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.017..3.571 rows=18000 loops=1)
 Planning Time: 534.408 ms
 Execution Time: 2406.733 ms
(29 rows)


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=4451.43..164355.32 rows=21 width=240) (actual time=72.488..956.053 rows=41841 loops=1)
   Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
   ->  Hash Join  (cost=572.84..158161.51 rows=81 width=212) (actual time=9.645..828.385 rows=62189 loops=1)
         Hash Cond: (store_sales.item_sk = item.item_sk)
         ->  Hash Join  (cost=16.75..157604.42 rows=82 width=160) (actual time=0.315..780.252 rows=62189 loops=1)
               Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=1091 width=132) (actual time=0.087..755.656 rows=63523 loops=1)
                     Filter: ((quantity <= '88'::double precision) AND (quantity >= '66'::double precision) AND (ext_discount_amt <= '469.62'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_list_price <= '9359.4'::double precision) AND (ext_list_price >= '2995.38'::double precision) AND (net_paid <= '2733.12'::double precision) AND (net_paid >= '1252.22'::double precision) AND (net_profit <= '-389.76'::double precision) AND (net_profit >= '-7266.36'::double precision))
                     Rows Removed by Filter: 2816881
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.213..0.214 rows=294 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.012..0.121 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=9.305..9.305 rows=18000 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.008..3.679 rows=18000 loops=1)
   ->  Hash  (cost=2227.00..2227.00 rows=85407 width=28) (actual time=58.613..58.613 rows=67095 loops=1)
         Buckets: 65536  Batches: 2  Memory Usage: 2601kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=85407 width=28) (actual time=0.017..31.061 rows=67095 loops=1)
               Filter: ((birth_year <= '1972'::double precision) AND (birth_year >= '1925'::double precision))
               Rows Removed by Filter: 32905
 Planning Time: 591.759 ms
 Execution Time: 958.290 ms
(24 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=87724.86..90632.21 rows=750 width=240) (actual time=7758.293..11978.127 rows=3723195 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.019..11.041 rows=100000 loops=1)
   ->  Hash  (cost=87715.48..87715.48 rows=750 width=212) (actual time=7758.257..7758.260 rows=3723195 loops=1)
         Buckets: 16384 (originally 1024)  Batches: 512 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=87007.29..87715.48 rows=750 width=212) (actual time=3054.953..5169.361 rows=3771107 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Merge Join  (cost=86451.20..87083.49 rows=762 width=160) (actual time=3044.812..4127.285 rows=2695809 loops=1)
                     Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
                     ->  Sort  (cost=42.77..44.62 rows=740 width=28) (actual time=0.272..0.339 rows=294 loops=1)
                           Sort Key: ((promotion.promo_sk)::double precision)
                           Sort Method: quicksort  Memory: 47kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.015..0.153 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=3044.528..3440.776 rows=2750921 loops=1)
                           Sort Key: store_sales.promo_sk
                           Sort Method: external sort  Disk: 408576kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.055..332.826 rows=2880404 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=10.113..10.114 rows=17954 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.007..3.750 rows=18000 loops=1)
 Planning Time: 564.357 ms
 Execution Time: 12181.186 ms
(24 rows)

                                                                                                       QUERY PLAN                                                                                                       
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=869.12..88506.08 rows=7111 width=244) (actual time=3.544..766.939 rows=2708 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=746.64..87606.48 rows=354 width=212) (actual time=3.102..765.431 rows=3319 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Hash Join  (cost=550.55..87219.57 rows=368 width=184) (actual time=2.830..739.549 rows=244133 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..326.319 rows=2880404 loops=1)
               ->  Hash  (cost=546.00..546.00 rows=364 width=52) (actual time=2.780..2.781 rows=919 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 87kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=364 width=52) (actual time=0.011..2.651 rows=919 loops=1)
                           Filter: ((current_price <= '5.12'::double precision) AND (current_price >= '4.01'::double precision) AND (category_id <= '10'::double precision) AND (category_id >= '7'::double precision))
                           Rows Removed by Filter: 17081
         ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.088..0.089 rows=293 loops=1)
               Buckets: 16384  Batches: 1  Memory Usage: 147kB
               ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.008..0.043 rows=300 loops=1)
   ->  Hash  (cost=30.40..30.40 rows=7367 width=32) (actual time=0.023..0.024 rows=10 loops=1)
         Buckets: 8192  Batches: 1  Memory Usage: 65kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=7367 width=32) (actual time=0.015..0.019 rows=10 loops=1)
               Filter: ((floor_space <= 9341467) AND (floor_space >= 5285950))
               Rows Removed by Filter: 2
 Planning Time: 533.412 ms
 Execution Time: 767.138 ms
(22 rows)

                                                                                                  QUERY PLAN                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=138103.52..159119.11 rows=2381 width=244) (actual time=583.618..583.684 rows=88 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=119527.75..119531.43 rows=1470 width=212) (actual time=583.585..583.598 rows=135 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 60kB
         ->  Hash Join  (cost=753.42..119450.40 rows=1470 width=212) (actual time=6.547..583.468 rows=135 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Hash Join  (cost=557.34..118461.79 rows=1530 width=184) (actual time=3.209..581.724 rows=9206 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=43674 width=132) (actual time=0.038..560.518 rows=130339 loops=1)
                           Filter: ((quantity <= '40'::double precision) AND (quantity >= '34'::double precision) AND (ext_tax <= '159.91'::double precision) AND (ext_tax >= '3.62'::double precision))
                           Rows Removed by Filter: 2750065
                     ->  Hash  (cost=546.00..546.00 rows=907 width=52) (actual time=3.003..3.004 rows=1697 loops=1)
                           Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 162kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=907 width=52) (actual time=0.009..2.755 rows=1698 loops=1)
                                 Filter: ((brand_id <= '5001001'::double precision) AND (brand_id >= '-1'::double precision) AND (class_id <= '5'::double precision) AND (class_id >= '4'::double precision))
                                 Rows Removed by Filter: 16302
               ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.105..0.106 rows=293 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 147kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.015..0.050 rows=300 loops=1)
   ->  Materialize  (cost=18575.77..19413.30 rows=167506 width=32) (actual time=0.025..0.031 rows=92 loops=1)
         ->  Sort  (cost=18575.77..18994.54 rows=167506 width=32) (actual time=0.021..0.022 rows=8 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=167506 width=32) (actual time=0.011..0.013 rows=8 loops=1)
                     Filter: ((tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
                     Rows Removed by Filter: 4
 Planning Time: 541.195 ms
 Execution Time: 583.759 ms
(29 rows)

                                                                                                                                                         QUERY PLAN                                                                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=154282.36..156372.49 rows=8694 width=240) (actual time=793.763..811.918 rows=1123 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.015..8.184 rows=100000 loops=1)
   ->  Hash  (cost=154173.68..154173.68 rows=8694 width=212) (actual time=793.694..793.697 rows=1123 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 409kB
         ->  Hash Join  (cost=568.84..154173.68 rows=8694 width=212) (actual time=4.844..793.058 rows=1128 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Hash Join  (cost=16.75..150409.30 rows=37586 width=160) (actual time=0.150..786.446 rows=22659 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=675319 width=132) (actual time=0.043..686.014 rows=1046787 loops=1)
                           Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_coupon_amt <= '105.44'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '2601.3'::double precision) AND (net_paid >= '318.74'::double precision))
                           Rows Removed by Filter: 1833617
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.096..0.096 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.060 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
               ->  Hash  (cost=546.00..546.00 rows=487 width=52) (actual time=2.858..2.858 rows=1991 loops=1)
                     Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 188kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=487 width=52) (actual time=0.006..2.573 rows=1993 loops=1)
                           Filter: ((brand_id <= '7001006'::double precision) AND (brand_id >= '5003002'::double precision) AND (manufact_id <= '581'::double precision) AND (manufact_id >= '21'::double precision))
                           Rows Removed by Filter: 16007
 Planning Time: 558.947 ms
 Execution Time: 812.031 ms
(24 rows)



 Hash Join  (cost=173777.48..176464.31 rows=738 width=244) (actual time=628.838..642.992 rows=3242 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=173700.03..175717.60 rows=696 width=212) (actual time=628.806..640.853 rows=19159 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Seq Scan on item  (cost=0.00..456.00 rows=38471 width=52) (actual time=0.006..2.543 rows=14324 loops=1)
               Filter: ((brand_id <= '10016007'::double precision) AND (brand_id >= '3001001'::double precision))
               Rows Removed by Filter: 3676
         ->  Hash  (cost=173687.71..173687.71 rows=986 width=160) (actual time=626.858..626.859 rows=22878 loops=1)
               Buckets: 32768 (originally 1024)  Batches: 2 (originally 1)  Memory Usage: 3841kB
               ->  Merge Join  (cost=172868.29..173687.71 rows=986 width=160) (actual time=603.774..615.566 rows=23426 loops=1)
                     Merge Cond: (store_sales.promo_sk = ((promotion.promo_sk)::double precision))
                     ->  Sort  (cost=171805.98..171808.37 rows=959 width=132) (actual time=603.668..606.086 rows=23427 loops=1)
                           Sort Key: store_sales.promo_sk
                           Sort Method: external merge  Disk: 3360kB
                           ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=959 width=132) (actual time=0.046..588.111 rows=23443 loops=1)
                                 Filter: ((list_price <= '77.19'::double precision) AND (list_price >= '10.26'::double precision) AND (sales_price <= '112.7'::double precision) AND (sales_price >= '37.16'::double precision) AND (ext_sales_price <= '2701.14'::double precision) AND (ext_sales_price >= '0'::double precision) AND (ext_list_price <= '2029.52'::double precision) AND (ext_list_price >= '705.87'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '1932'::double precision) AND (net_profit >= '88.88'::double precision))
                                 Rows Removed by Filter: 2856961
                     ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.099..1.126 rows=23353 loops=1)
                           Sort Key: ((promotion.promo_sk)::double precision)
                           Sort Method: quicksort  Memory: 48kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.013..0.051 rows=300 loops=1)
   ->  Hash  (cost=37.20..37.20 rows=3220 width=32) (actual time=0.020..0.020 rows=3 loops=1)
         Buckets: 4096  Batches: 1  Memory Usage: 33kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=3220 width=32) (actual time=0.014..0.017 rows=3 loops=1)
               Filter: ((floor_space <= 9294113) AND (floor_space >= 9078805) AND (company_id <= 767) AND (company_id >= 27))
               Rows Removed by Filter: 9
 Planning Time: 470.233 ms
 Execution Time: 643.779 ms
(28 rows)

                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=127758.16..134716.31 rows=5704 width=244) (actual time=571.045..585.476 rows=24557 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=126678.25..126691.85 rows=5442 width=212) (actual time=571.012..574.061 rows=24558 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 5656kB
         ->  Merge Join  (cost=110414.17..126340.58 rows=5442 width=212) (actual time=515.442..553.239 rows=24837 loops=1)
               Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
               ->  Sort  (cost=6389.03..6412.70 rows=9470 width=80) (actual time=3.339..3.355 rows=81 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 36kB
                     ->  Hash Join  (cost=196.09..5763.60 rows=9470 width=80) (actual time=0.167..3.300 rows=81 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=9870 width=52) (actual time=0.018..2.610 rows=4935 loops=1)
                                 Filter: ((brand_id <= '8008006'::double precision) AND (brand_id >= '5004001'::double precision))
                                 Rows Removed by Filter: 13065
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.084..0.084 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.041 rows=300 loops=1)
               ->  Materialize  (cost=104025.14..104174.74 rows=29921 width=132) (actual time=510.079..535.371 rows=91857 loops=1)
                     ->  Sort  (cost=104025.14..104099.94 rows=29921 width=132) (actual time=510.075..523.955 rows=91857 loops=1)
                           Sort Key: store_sales.promo_sk
                           Sort Method: external merge  Disk: 13344kB
                           ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=29921 width=132) (actual time=0.039..461.501 rows=94761 loops=1)
                                 Filter: ((ext_wholesale_cost <= '5698.68'::double precision) AND (ext_wholesale_cost >= '5145.25'::double precision))
                                 Rows Removed by Filter: 2785643
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.028..1.101 rows=24562 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.016..0.018 rows=12 loops=1)
 Planning Time: 479.712 ms
 Execution Time: 589.745 ms
(31 rows)

                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=199590.03..370161.83 rows=132317 width=244) (actual time=2454.722..3274.384 rows=740871 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=199033.95..367991.69 rows=132317 width=192) (actual time=2449.930..3021.052 rows=740871 loops=1)
         Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
         ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.017..0.021 rows=11 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.005..0.008 rows=12 loops=1)
         ->  Materialize  (cost=197954.03..198616.88 rows=132568 width=160) (actual time=2449.905..2808.095 rows=740872 loops=1)
               ->  Sort  (cost=197954.03..198285.45 rows=132568 width=160) (actual time=2449.903..2584.575 rows=740872 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 129784kB
                     ->  Merge Join  (cost=162160.92..176251.86 rows=132568 width=160) (actual time=1325.170..1924.940 rows=749872 loops=1)
                           Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                           ->  Sort  (cost=20643.84..21059.93 rows=166436 width=28) (actual time=38.038..44.911 rows=64567 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: external merge  Disk: 3152kB
                                 ->  Seq Scan on customer  (cost=0.00..2227.00 rows=166436 width=28) (actual time=0.008..18.289 rows=64567 loops=1)
                                       Filter: ((birth_month <= '11'::double precision) AND (birth_month >= '4'::double precision))
                                       Rows Removed by Filter: 35433
                           ->  Materialize  (cost=141517.09..142835.31 rows=263645 width=132) (actual time=1287.121..1633.268 rows=1161744 loops=1)
                                 ->  Sort  (cost=141517.09..142176.20 rows=263645 width=132) (actual time=1287.118..1483.992 rows=1161744 loops=1)
                                       Sort Key: store_sales.customer_sk
                                       Sort Method: external merge  Disk: 167176kB
                                       ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=263645 width=132) (actual time=0.040..532.782 rows=1189618 loops=1)
                                             Filter: ((ext_tax <= '18.21'::double precision) AND (ext_tax >= '-1'::double precision))
                                             Rows Removed by Filter: 1690786
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.765..4.766 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.015..1.966 rows=18000 loops=1)
 Planning Time: 576.916 ms
 Execution Time: 3370.148 ms
(32 rows)

                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=122322.15..276825.04 rows=234726 width=240) (actual time=1137.648..1920.671 rows=17296 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=122126.06..155068.29 rows=234726 width=212) (actual time=1010.865..1835.363 rows=789696 loops=1)
         Hash Cond: (store_sales.item_sk = item.item_sk)
         ->  Hash Join  (cost=121569.98..151548.10 rows=242993 width=160) (actual time=1006.144..1599.088 rows=789696 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..9.273 rows=100000 loops=1)
               ->  Hash  (cost=114154.24..114154.24 rows=231499 width=132) (actual time=1006.093..1006.094 rows=789696 loops=1)
                     Buckets: 32768 (originally 32768)  Batches: 64 (originally 16)  Memory Usage: 3841kB
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=231499 width=132) (actual time=0.037..587.759 rows=799390 loops=1)
                           Filter: ((quantity <= '86'::double precision) AND (quantity >= '57'::double precision) AND (ext_coupon_amt <= '5309.4'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                           Rows Removed by Filter: 2081014
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.697..4.698 rows=18000 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.926 rows=18000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.094..0.094 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.047 rows=300 loops=1)
 Planning Time: 470.086 ms
 Execution Time: 1921.387 ms
(20 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=87928.24..90806.37 rows=726 width=244) (actual time=3350.778..3806.520 rows=447330 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=87372.16..90241.43 rows=726 width=192) (actual time=3345.551..3668.690 rows=447330 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.008..8.861 rows=100000 loops=1)
         ->  Hash  (cost=87363.09..87363.09 rows=726 width=164) (actual time=3324.792..3324.794 rows=447330 loops=1)
               Buckets: 32768 (originally 1024)  Batches: 32 (originally 1)  Memory Usage: 3841kB
               ->  Merge Join  (cost=86478.28..87363.09 rows=726 width=164) (actual time=2791.760..2983.984 rows=458159 loops=1)
                     Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                     ->  Sort  (cost=69.84..71.57 rows=692 width=32) (actual time=0.017..0.018 rows=2 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..37.20 rows=692 width=32) (actual time=0.007..0.010 rows=2 loops=1)
                                 Filter: ((number_employees <= 245) AND (number_employees >= 236) AND (market_id <= 8) AND (market_id >= 7))
                                 Rows Removed by Filter: 10
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2701.651..2822.513 rows=915056 loops=1)
                           Sort Key: store_sales.store_sk
                           Sort Method: external sort  Disk: 408576kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.037..320.411 rows=2880404 loops=1)
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.203..5.203 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..2.251 rows=18000 loops=1)
 Planning Time: 485.911 ms
 Execution Time: 3886.109 ms
(24 rows)

                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=110582.77..113609.56 rows=5914 width=244) (actual time=827.558..829.908 rows=3942 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=126.38..130.26 rows=1554 width=32) (actual time=0.024..0.025 rows=2 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=1554 width=32) (actual time=0.016..0.018 rows=2 loops=1)
               Filter: ((number_employees <= 294) AND (number_employees >= 271) AND (devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.08'::double precision))
               Rows Removed by Filter: 10
   ->  Materialize  (cost=110456.39..110570.26 rows=22774 width=212) (actual time=821.786..826.879 rows=19600 loops=1)
         ->  Sort  (cost=110456.39..110513.33 rows=22774 width=212) (actual time=821.783..824.393 rows=19600 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 5472kB
               ->  Hash Join  (cost=2347.11..106470.15 rows=22774 width=212) (actual time=4.475..799.586 rows=24095 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=814398 width=132) (actual time=0.035..611.622 rows=2496872 loops=1)
                           Filter: ((net_paid <= '5675.67'::double precision) AND (net_paid >= '7.04'::double precision))
                           Rows Removed by Filter: 383532
                     ->  Hash  (cost=2310.76..2310.76 rows=2908 width=80) (actual time=4.402..4.404 rows=130 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 48kB
                           ->  Hash Join  (cost=196.09..2310.76 rows=2908 width=80) (actual time=0.138..4.363 rows=130 loops=1)
                                 Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=3029 width=52) (actual time=0.005..3.264 rows=8651 loops=1)
                                       Filter: ((current_price <= '8.32'::double precision) AND (current_price >= '1.39'::double precision) AND (class_id <= '13'::double precision) AND (class_id >= '2'::double precision))
                                       Rows Removed by Filter: 9349
                                 ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.084..0.085 rows=293 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                       ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.006..0.038 rows=300 loops=1)
 Planning Time: 472.464 ms
 Execution Time: 831.066 ms
(29 rows)



 Merge Join  (cost=176798.83..181436.53 rows=3742 width=244) (actual time=1020.062..1126.506 rows=160372 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=175718.92..175727.98 rows=3627 width=212) (actual time=1020.026..1050.460 rows=160373 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 36696kB
         ->  Hash Join  (cost=175309.20..175504.47 rows=3627 width=212) (actual time=746.847..920.849 rows=160517 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=174753.12..174902.66 rows=3749 width=160) (actual time=742.302..867.167 rows=160517 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=171969.80..171978.75 rows=3580 width=132) (actual time=688.165..724.315 rows=160518 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 23000kB
                           ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=3580 width=132) (actual time=0.042..603.224 rows=160781 loops=1)
                                 Filter: ((quantity <= '77'::double precision) AND (quantity >= '29'::double precision) AND (sales_price <= '110.19'::double precision) AND (sales_price >= '27.25'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '3720'::double precision) AND (ext_wholesale_cost >= '802.62'::double precision) AND (ext_list_price <= '6751'::double precision) AND (ext_list_price >= '3444'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                 Rows Removed by Filter: 2719623
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.128..73.694 rows=191169 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.013..12.992 rows=100000 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.518..4.519 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.950 rows=18000 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.030..7.179 rows=160377 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.017..0.020 rows=12 loops=1)
 Planning Time: 492.987 ms
 Execution Time: 1143.433 ms
(28 rows)

                                                                                                                                                 QUERY PLAN                                                                                                                                                  
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=140420.47..179992.98 rows=32418 width=244) (actual time=603.106..604.114 rows=1724 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.037..0.039 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.017..0.024 rows=12 loops=1)
   ->  Materialize  (cost=139340.56..139495.46 rows=30981 width=212) (actual time=603.061..603.495 rows=1725 loops=1)
         ->  Sort  (cost=139340.56..139418.01 rows=30981 width=212) (actual time=603.056..603.197 rows=1725 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 509kB
               ->  Hash Join  (cost=883.36..133851.52 rows=30981 width=212) (actual time=12.459..602.048 rows=1735 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=140775 width=132) (actual time=0.057..581.755 rows=81273 loops=1)
                           Filter: ((ext_tax <= '22.28'::double precision) AND (ext_tax >= '6.17'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '2391.48'::double precision) AND (net_paid >= '738.92'::double precision))
                           Rows Removed by Filter: 2799131
                     ->  Hash  (cost=874.48..874.48 rows=711 width=80) (actual time=9.082..9.084 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 43kB
                           ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.239..8.897 rows=291 loops=1)
                                 Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                                 ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.008..3.634 rows=18000 loops=1)
                                 ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.210..0.210 rows=291 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                       ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.010..0.128 rows=294 loops=1)
                                             Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                             Rows Removed by Filter: 6
 Planning Time: 523.161 ms
 Execution Time: 604.277 ms
(27 rows)

                                                                        QUERY PLAN                                                                         
-----------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=113772.70..146909.19 rows=26792 width=244) (actual time=801.459..842.198 rows=62444 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.027..0.029 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.015..0.019 rows=12 loops=1)
   ->  Materialize  (cost=112692.79..112822.43 rows=25928 width=212) (actual time=801.424..821.375 rows=62445 loops=1)
         ->  Sort  (cost=112692.79..112757.61 rows=25928 width=212) (actual time=801.421..813.209 rows=62445 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 14384kB
               ->  Hash Join  (cost=102738.18..108132.00 rows=25928 width=212) (actual time=685.134..760.814 rows=63146 loops=1)
                     Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..8.712 rows=100000 loops=1)
                     ->  Hash  (cost=101755.09..101755.09 rows=25928 width=184) (actual time=681.057..681.059 rows=63146 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 4 (originally 2)  Memory Usage: 3841kB
                           ->  Hash Join  (cost=521.71..101755.09 rows=25928 width=184) (actual time=3.041..637.603 rows=64735 loops=1)
                                 Hash Cond: (store_sales.item_sk = item.item_sk)
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=221900 width=132) (actual time=0.039..576.737 rows=401139 loops=1)
                                       Filter: ((net_paid <= '7091.52'::double precision) AND (net_paid >= '3129.45'::double precision))
                                       Rows Removed by Filter: 2479265
                                 ->  Hash  (cost=456.00..456.00 rows=5257 width=52) (actual time=2.984..2.985 rows=2897 loops=1)
                                       Buckets: 8192  Batches: 1  Memory Usage: 313kB
                                       ->  Seq Scan on item  (cost=0.00..456.00 rows=5257 width=52) (actual time=0.006..2.603 rows=2897 loops=1)
                                             Filter: ((class_id <= '12'::double precision) AND (class_id >= '8'::double precision))
                                             Rows Removed by Filter: 15103
 Planning Time: 517.278 ms
 Execution Time: 847.280 ms
(27 rows)

                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=132877.57..133762.77 rows=51430 width=244) (actual time=1762.891..1856.569 rows=91130 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=11968.86..12197.81 rows=91579 width=28) (actual time=35.330..37.004 rows=34484 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: quicksort  Memory: 3640kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=91579 width=28) (actual time=0.026..25.229 rows=34484 loops=1)
               Filter: ((birth_day <= '29'::double precision) AND (birth_day >= '19'::double precision))
               Rows Removed by Filter: 65516
   ->  Sort  (cost=120908.71..120928.21 rows=7801 width=216) (actual time=1727.548..1772.132 rows=263472 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external sort  Disk: 61912kB
         ->  Merge Join  (cost=105843.81..120404.38 rows=7801 width=216) (actual time=1199.623..1406.850 rows=266882 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=87268.03..87270.56 rows=1009 width=184) (actual time=1199.581..1275.302 rows=400217 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 80080kB
                     ->  Hash Join  (cost=558.45..87217.66 rows=1009 width=184) (actual time=4.400..892.604 rows=409851 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.047..366.971 rows=2880404 loops=1)
                           ->  Hash  (cost=546.00..546.00 rows=996 width=52) (actual time=4.337..4.338 rows=1896 loops=1)
                                 Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 179kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=996 width=52) (actual time=0.010..3.928 rows=1897 loops=1)
                                       Filter: ((class_id <= '4'::double precision) AND (class_id >= '3'::double precision) AND (manufact_id <= '250'::double precision) AND (manufact_id >= '62'::double precision))
                                       Rows Removed by Filter: 16103
               ->  Materialize  (cost=18575.77..19413.30 rows=167506 width=32) (actual time=0.034..13.477 rows=266886 loops=1)
                     ->  Sort  (cost=18575.77..18994.54 rows=167506 width=32) (actual time=0.030..0.032 rows=8 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..30.40 rows=167506 width=32) (actual time=0.015..0.019 rows=8 loops=1)
                                 Filter: ((tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
                                 Rows Removed by Filter: 4
 Planning Time: 508.653 ms
 Execution Time: 1885.379 ms
(33 rows)

                                                                                                         QUERY PLAN                                                                                                         
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=130214.29..131648.94 rows=1880 width=244) (actual time=1236.196..1238.851 rows=4186 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=129553.67..129558.13 rows=1783 width=212) (actual time=1236.168..1236.582 rows=8146 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 2364kB
         ->  Hash Join  (cost=127497.97..129457.37 rows=1783 width=212) (actual time=1209.454..1232.242 rows=8175 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.019..8.371 rows=100000 loops=1)
               ->  Hash  (cost=127475.67..127475.67 rows=1783 width=184) (actual time=1209.411..1209.413 rows=8175 loops=1)
                     Buckets: 8192 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 1851kB
                     ->  Hash Join  (cost=121635.44..127475.67 rows=1783 width=184) (actual time=884.591..1206.585 rows=8229 loops=1)
                           Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=449 width=52) (actual time=0.020..2.051 rows=929 loops=1)
                                 Filter: ((class_id <= '3'::double precision) AND (class_id >= '2'::double precision) AND (category_id <= '10'::double precision) AND (category_id >= '8'::double precision))
                                 Rows Removed by Filter: 17071
                           ->  Hash  (cost=114154.24..114154.24 rows=233536 width=132) (actual time=815.632..815.633 rows=735334 loops=1)
                                 Buckets: 32768 (originally 32768)  Batches: 64 (originally 16)  Memory Usage: 3911kB
                                 ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=233536 width=132) (actual time=0.050..510.211 rows=744511 loops=1)
                                       Filter: ((quantity <= '90'::double precision) AND (quantity >= '54'::double precision) AND (list_price <= '132.78'::double precision) AND (list_price >= '18.54'::double precision))
                                       Rows Removed by Filter: 2135893
   ->  Sort  (cost=660.62..684.45 rows=9535 width=32) (actual time=0.020..0.203 rows=4189 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=9535 width=32) (actual time=0.010..0.012 rows=7 loops=1)
               Filter: ((number_employees <= 294) AND (number_employees >= 245))
               Rows Removed by Filter: 5
 Planning Time: 525.957 ms
 Execution Time: 1239.122 ms
(28 rows)

                                                                                     QUERY PLAN                                                                                      
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=8670.91..341624.53 rows=22893 width=244) (actual time=7.498..905.259 rows=7932 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=51.11..321171.84 rows=23817 width=164) (actual time=0.095..858.777 rows=360676 loops=1)
         Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
         ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=1285688 width=132) (actual time=0.064..608.741 rows=2211665 loops=1)
               Filter: ((ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
               Rows Removed by Filter: 668739
         ->  Hash  (cost=44.00..44.00 rows=569 width=32) (actual time=0.017..0.018 rows=2 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on store  (cost=0.00..44.00 rows=569 width=32) (actual time=0.009..0.012 rows=2 loops=1)
                     Filter: ((number_employees <= 294) AND (number_employees >= 294) AND (devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 226) AND (company_id >= 175))
                     Rows Removed by Filter: 10
   ->  Hash  (cost=8437.55..8437.55 rows=14580 width=80) (actual time=7.357..7.358 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 163kB
         ->  Hash Join  (cost=196.09..8437.55 rows=14580 width=80) (actual time=0.196..7.202 rows=293 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.007..3.147 rows=18000 loops=1)
               ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.141..0.142 rows=293 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 147kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.020..0.068 rows=300 loops=1)
 Planning Time: 542.371 ms
 Execution Time: 905.792 ms
(22 rows)

                                                                                                                                                                                                                                               QUERY PLAN                                                                                                                                                                                                                                                
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=3730.20..166676.74 rows=2660 width=244) (actual time=293.486..596.302 rows=2 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=3159.71..163458.78 rows=208 width=212) (actual time=58.545..596.173 rows=16 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=493.15..158007.46 rows=317 width=184) (actual time=32.706..575.717 rows=87 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=1786 width=132) (actual time=0.296..569.840 rows=15401 loops=1)
                     Filter: ((quantity <= '87'::double precision) AND (quantity >= '7'::double precision) AND (sales_price <= '17.42'::double precision) AND (sales_price >= '16.14'::double precision) AND (ext_wholesale_cost <= '4707.66'::double precision) AND (ext_wholesale_cost >= '231.36'::double precision) AND (ext_tax <= '43.03'::double precision) AND (ext_tax >= '4.3'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                     Rows Removed by Filter: 2865003
               ->  Hash  (cost=456.00..456.00 rows=2972 width=52) (actual time=4.146..4.147 rows=237 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 53kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=2972 width=52) (actual time=0.019..4.084 rows=238 loops=1)
                           Filter: ((manufact_id <= '288'::double precision) AND (manufact_id >= '281'::double precision))
                           Rows Removed by Filter: 17762
         ->  Hash  (cost=2227.00..2227.00 rows=35165 width=28) (actual time=20.335..20.335 rows=18943 loops=1)
               Buckets: 65536  Batches: 1  Memory Usage: 1691kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=35165 width=28) (actual time=0.010..16.587 rows=18943 loops=1)
                     Filter: ((birth_day <= '21'::double precision) AND (birth_day >= '16'::double precision))
                     Rows Removed by Filter: 81057
   ->  Hash  (cost=37.20..37.20 rows=42663 width=32) (actual time=0.025..0.026 rows=2 loops=1)
         Buckets: 65536  Batches: 1  Memory Usage: 513kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=42663 width=32) (actual time=0.018..0.021 rows=2 loops=1)
               Filter: ((floor_space <= 6995995) AND (floor_space >= 5285950) AND (company_id <= 226) AND (company_id >= 27))
               Rows Removed by Filter: 10
 Planning Time: 503.080 ms
 Execution Time: 596.392 ms
(26 rows)

                                                                                                          QUERY PLAN                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=88859.03..89604.96 rows=17251 width=244) (actual time=769.489..778.525 rows=9026 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=88579.09..88584.48 rows=2155 width=212) (actual time=768.542..772.884 rows=27014 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 6344kB
         ->  Hash Join  (cost=1931.67..88459.77 rows=2155 width=212) (actual time=7.630..738.409 rows=28266 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.059..384.277 rows=2880404 loops=1)
               ->  Hash  (cost=1904.74..1904.74 rows=2155 width=80) (actual time=7.422..7.424 rows=129 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 48kB
                     ->  Hash Join  (cost=196.09..1904.74 rows=2155 width=80) (actual time=0.198..7.353 rows=129 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=2245 width=52) (actual time=0.012..5.685 rows=7316 loops=1)
                                 Filter: ((current_price <= '19.61'::double precision) AND (current_price >= '0.86'::double precision) AND (category_id <= '7'::double precision) AND (category_id >= '3'::double precision))
                                 Rows Removed by Filter: 10684
                           ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.135..0.136 rows=293 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                 ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.008..0.056 rows=300 loops=1)
   ->  Sort  (cost=279.94..290.06 rows=4051 width=32) (actual time=0.020..0.420 rows=4490 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=4051 width=32) (actual time=0.011..0.012 rows=3 loops=1)
               Filter: ((market_id <= 9) AND (market_id >= 8) AND (company_id <= 337) AND (company_id >= 27))
               Rows Removed by Filter: 9
 Planning Time: 495.806 ms
 Execution Time: 780.024 ms
(26 rows)

                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=115615.06..118518.34 rows=1676 width=240) (actual time=575.513..641.957 rows=1030 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=115418.97..117454.15 rows=1676 width=212) (actual time=575.242..637.309 rows=43083 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.009..8.628 rows=100000 loops=1)
         ->  Hash  (cost=115398.02..115398.02 rows=1676 width=184) (actual time=569.343..569.345 rows=43083 loops=1)
               Buckets: 32768 (originally 2048)  Batches: 4 (originally 1)  Memory Usage: 3841kB
               ->  Hash Join  (cost=565.00..115398.02 rows=1676 width=184) (actual time=6.316..537.773 rows=43591 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=147739 width=132) (actual time=0.058..488.311 rows=267394 loops=1)
                           Filter: ((quantity <= '87'::double precision) AND (quantity >= '38'::double precision) AND (list_price <= '50.29'::double precision) AND (list_price >= '21.9'::double precision))
                           Rows Removed by Filter: 2613010
                     ->  Hash  (cost=546.00..546.00 rows=1520 width=52) (actual time=6.225..6.226 rows=2931 loops=1)
                           Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 284kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=1520 width=52) (actual time=0.010..5.465 rows=2931 loops=1)
                                 Filter: ((category_id <= '4'::double precision) AND (category_id >= '2'::double precision) AND (manufact_id <= '435'::double precision) AND (manufact_id >= '80'::double precision))
                                 Rows Removed by Filter: 15069
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.158..0.159 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.017..0.069 rows=300 loops=1)
 Planning Time: 534.141 ms
 Execution Time: 642.084 ms
(22 rows)

                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=1013.94..88310.57 rows=19235 width=244) (actual time=7.375..775.813 rows=29731 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=883.36..86712.18 rows=711 width=212) (actual time=7.294..758.294 rows=62316 loops=1)
         Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
         ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.049..379.584 rows=2880404 loops=1)
         ->  Hash  (cost=874.48..874.48 rows=711 width=80) (actual time=7.229..7.231 rows=291 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 43kB
               ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.184..7.083 rows=291 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.007..3.007 rows=18000 loops=1)
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.156..0.157 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.009..0.092 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=44.00..44.00 rows=6926 width=32) (actual time=0.030..0.030 rows=5 loops=1)
         Buckets: 8192  Batches: 1  Memory Usage: 65kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=6926 width=32) (actual time=0.019..0.025 rows=5 loops=1)
               Filter: ((market_id <= 8) AND (market_id >= 2) AND (devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 811) AND (company_id >= 220))
               Rows Removed by Filter: 7
 Planning Time: 546.701 ms
 Execution Time: 777.324 ms
(22 rows)



 Hash Join  (cost=5542.82..168933.99 rows=51 width=244) (actual time=66.641..712.045 rows=8562 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=4773.81..168164.11 rows=49 width=192) (actual time=58.143..699.012 rows=19246 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=200.83..159678.20 rows=101 width=164) (actual time=0.127..603.405 rows=44027 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=522 width=132) (actual time=0.059..585.703 rows=88594 loops=1)
                     Filter: ((ext_sales_price <= '858.5'::double precision) AND (ext_sales_price >= '60.04'::double precision) AND (ext_wholesale_cost <= '2975.61'::double precision) AND (ext_wholesale_cost >= '172.48'::double precision) AND (ext_list_price <= '1049.07'::double precision) AND (ext_list_price >= '756.14'::double precision) AND (ext_tax <= '146.86'::double precision) AND (ext_tax >= '0.04'::double precision) AND (net_profit <= '5.4'::double precision) AND (net_profit >= '-806.56'::double precision))
                     Rows Removed by Filter: 2791810
               ->  Hash  (cost=30.40..30.40 rows=13634 width=32) (actual time=0.011..0.013 rows=6 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 129kB
                     ->  Seq Scan on store  (cost=0.00..30.40 rows=13634 width=32) (actual time=0.005..0.008 rows=6 loops=1)
                           Filter: ((market_id <= 6) AND (market_id >= 2))
                           Rows Removed by Filter: 6
         ->  Hash  (cost=2227.00..2227.00 rows=121279 width=28) (actual time=50.553..50.554 rows=43643 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 1193kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=121279 width=28) (actual time=0.010..23.756 rows=43643 loops=1)
                     Filter: ((birth_day <= '30'::double precision) AND (birth_day >= '17'::double precision))
                     Rows Removed by Filter: 56357
   ->  Hash  (cost=456.00..456.00 rows=25041 width=52) (actual time=7.709..7.709 rows=7958 loops=1)
         Buckets: 32768  Batches: 1  Memory Usage: 940kB
         ->  Seq Scan on item  (cost=0.00..456.00 rows=25041 width=52) (actual time=0.020..5.730 rows=7958 loops=1)
               Filter: ((brand_id <= '10002006'::double precision) AND (brand_id >= '5003002'::double precision))
               Rows Removed by Filter: 10042
 Planning Time: 508.746 ms
 Execution Time: 712.465 ms
(26 rows)

                                                                                                                                                      QUERY PLAN                                                                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=137177.03..177519.82 rows=22089 width=244) (actual time=569.825..570.221 rows=6 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=136980.94..165418.86 rows=22988 width=216) (actual time=569.494..569.918 rows=677 loops=1)
         Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
         ->  Sort  (cost=135901.03..135956.63 rows=22241 width=184) (actual time=569.460..569.514 rows=678 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 205kB
               ->  Hash Join  (cost=744.84..132317.64 rows=22241 width=184) (actual time=14.195..569.143 rows=679 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=28170 width=132) (actual time=0.140..558.475 rows=1311 loops=1)
                           Filter: ((sales_price <= '15.98'::double precision) AND (sales_price >= '3.76'::double precision) AND (net_paid <= '224.04'::double precision) AND (net_paid >= '155.4'::double precision) AND (net_profit <= '-337.02'::double precision) AND (net_profit >= '-375.9'::double precision))
                           Rows Removed by Filter: 2879093
                     ->  Hash  (cost=456.00..456.00 rows=23107 width=52) (actual time=9.984..9.985 rows=14699 loops=1)
                           Buckets: 32768  Batches: 1  Memory Usage: 1519kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=23107 width=52) (actual time=0.009..6.272 rows=14720 loops=1)
                                 Filter: ((class_id <= '10'::double precision) AND (class_id >= '1'::double precision))
                                 Rows Removed by Filter: 3280
         ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.025..0.056 rows=682 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.012..0.014 rows=12 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.177..0.177 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.019..0.072 rows=300 loops=1)
 Planning Time: 524.069 ms
 Execution Time: 570.318 ms
(26 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=88546.43..89162.45 rows=327 width=244) (actual time=2681.711..6107.029 rows=1313059 loops=1)
   Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
   ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.016..2.724 rows=18000 loops=1)
   ->  Hash  (cost=88542.17..88542.17 rows=341 width=192) (actual time=2434.082..2434.091 rows=1313059 loops=1)
         Buckets: 32768 (originally 1024)  Batches: 1024 (originally 1)  Memory Usage: 3841kB
         ->  Hash Join  (cost=237.35..88542.17 rows=341 width=192) (actual time=0.281..1426.154 rows=1344691 loops=1)
               Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
               ->  Hash Join  (cost=41.26..86884.03 rows=341 width=164) (actual time=0.065..1034.336 rows=1377121 loops=1)
                     Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.041..356.520 rows=2880404 loops=1)
                     ->  Hash  (cost=37.20..37.20 rows=325 width=32) (actual time=0.014..0.015 rows=7 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on store  (cost=0.00..37.20 rows=325 width=32) (actual time=0.007..0.011 rows=7 loops=1)
                                 Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 226) AND (company_id >= 27))
                                 Rows Removed by Filter: 5
               ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.193..0.194 rows=300 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 147kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.008..0.080 rows=300 loops=1)
 Planning Time: 497.443 ms
 Execution Time: 6155.597 ms
(20 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=86425.83..89304.60 rows=751 width=240) (actual time=823.470..913.763 rows=59463 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=85869.74..88739.03 rows=778 width=188) (actual time=814.958..887.507 rows=59463 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.010..8.890 rows=100000 loops=1)
         ->  Hash  (cost=85860.60..85860.60 rows=731 width=160) (actual time=810.775..810.777 rows=59463 loops=1)
               Buckets: 32768 (originally 1024)  Batches: 4 (originally 1)  Memory Usage: 3841kB
               ->  Hash Join  (cost=16.75..85860.60 rows=731 width=160) (actual time=0.222..764.154 rows=62316 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.047..389.681 rows=2880404 loops=1)
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.153..0.154 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.012..0.092 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=8.448..8.448 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.020..3.240 rows=18000 loops=1)
 Planning Time: 480.459 ms
 Execution Time: 916.027 ms
(20 rows)

                                                                                                            QUERY PLAN                                                                                                             
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=137017.12..142410.39 rows=4359 width=244) (actual time=1827.831..1828.135 rows=560 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=135937.21..135947.75 rows=4218 width=212) (actual time=1827.792..1827.827 rows=561 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 174kB
         ->  Hash Join  (cost=125931.55..135683.24 rows=4218 width=212) (actual time=1806.563..1827.560 rows=561 loops=1)
               Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
               ->  Hash Join  (cost=196.09..1245.99 rows=933 width=80) (actual time=1.020..2.250 rows=5 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=973 width=52) (actual time=0.021..2.073 rows=307 loops=1)
                           Filter: ((brand_id <= '7013008'::double precision) AND (brand_id >= '5002002'::double precision) AND (class_id <= '1'::double precision) AND (class_id >= '1'::double precision))
                           Rows Removed by Filter: 17693
                     ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.085..0.086 rows=293 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 147kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.040 rows=300 loops=1)
               ->  Hash  (cost=114154.24..114154.24 rows=361538 width=132) (actual time=1237.701..1237.702 rows=1395593 loops=1)
                     Buckets: 32768 (originally 32768)  Batches: 128 (originally 16)  Memory Usage: 3936kB
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=361538 width=132) (actual time=0.048..666.602 rows=1412660 loops=1)
                           Filter: ((ext_list_price <= '4730.46'::double precision) AND (ext_list_price >= '97.02'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                           Rows Removed by Filter: 1467744
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.032..0.057 rows=565 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.016..0.019 rows=12 loops=1)
 Planning Time: 479.036 ms
 Execution Time: 1828.234 ms
(26 rows)

                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=108076.08..108851.60 rows=11665 width=244) (actual time=717.212..809.390 rows=140831 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=107034.83..107036.41 rows=631 width=212) (actual time=717.181..743.845 rows=140832 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 32496kB
         ->  Hash Join  (cost=582.46..107005.48 rows=631 width=212) (actual time=6.192..616.342 rows=142539 loops=1)
               Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=238050 width=132) (actual time=0.058..480.640 rows=1121836 loops=1)
                     Filter: ((sales_price <= '20.16'::double precision) AND (sales_price >= '-1'::double precision))
                     Rows Removed by Filter: 1758568
               ->  Hash  (cost=581.28..581.28 rows=95 width=80) (actual time=6.123..6.125 rows=39 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 13kB
                     ->  Hash Join  (cost=16.75..581.28 rows=95 width=80) (actual time=0.207..6.099 rows=39 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=573 width=52) (actual time=0.009..5.448 rows=2273 loops=1)
                                 Filter: ((category_id <= '6'::double precision) AND (category_id >= '4'::double precision) AND (manufact_id <= '239'::double precision) AND (manufact_id >= '7'::double precision))
                                 Rows Removed by Filter: 15727
                           ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.172..0.173 rows=291 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.102 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                       Rows Removed by Filter: 6
   ->  Sort  (cost=1041.25..1077.78 rows=14613 width=32) (actual time=0.023..6.200 rows=140836 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.011..0.014 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
 Planning Time: 487.472 ms
 Execution Time: 820.224 ms
(29 rows)

                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=120960.03..123224.39 rows=427 width=244) (actual time=531.196..538.138 rows=838 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Merge Join  (cost=120916.66..122994.68 rows=597 width=212) (actual time=531.149..537.774 rows=1663 loops=1)
         Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
         ->  Sort  (cost=1293.81..1296.15 rows=937 width=80) (actual time=5.105..5.111 rows=23 loops=1)
               Sort Key: ((promotion.promo_sk)::double precision)
               Sort Method: quicksort  Memory: 28kB
               ->  Hash Join  (cost=196.09..1247.54 rows=937 width=80) (actual time=0.335..5.073 rows=23 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=976 width=52) (actual time=0.011..4.590 rows=1465 loops=1)
                           Filter: ((brand_id <= '8014002'::double precision) AND (brand_id >= '3002002'::double precision) AND (manufact_id <= '182'::double precision) AND (manufact_id >= '100'::double precision))
                           Rows Removed by Filter: 16535
                     ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.132..0.133 rows=293 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 147kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.055 rows=300 loops=1)
         ->  Materialize  (cost=119622.85..119812.13 rows=37856 width=132) (actual time=525.972..530.232 rows=19934 loops=1)
               ->  Sort  (cost=119622.85..119717.49 rows=37856 width=132) (actual time=525.968..527.839 rows=19934 loops=1)
                     Sort Key: store_sales.promo_sk
                     Sort Method: external merge  Disk: 2960kB
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=37856 width=132) (actual time=0.070..509.104 rows=20853 loops=1)
                           Filter: ((sales_price <= '28.67'::double precision) AND (sales_price >= '26.98'::double precision) AND (ext_list_price <= '5579.35'::double precision) AND (ext_list_price >= '2224.96'::double precision))
                           Rows Removed by Filter: 2859551
   ->  Hash  (cost=30.40..30.40 rows=1037 width=32) (actual time=0.028..0.028 rows=6 loops=1)
         Buckets: 2048  Batches: 1  Memory Usage: 17kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=1037 width=32) (actual time=0.018..0.022 rows=6 loops=1)
               Filter: ((market_id <= 10) AND (market_id >= 7))
               Rows Removed by Filter: 6
 Planning Time: 593.397 ms
 Execution Time: 538.845 ms
(29 rows)

                                                                        QUERY PLAN                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=124039.64..124592.15 rows=8313 width=240) (actual time=754.483..808.383 rows=23860 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=123483.56..123931.11 rows=8604 width=188) (actual time=749.289..794.299 rows=23860 loops=1)
         Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
         ->  Sort  (cost=118350.29..118380.00 rows=11884 width=160) (actual time=734.711..758.677 rows=107811 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: external merge  Disk: 18912kB
               ->  Merge Join  (cost=111424.50..117545.92 rows=11884 width=160) (actual time=598.585..658.422 rows=109165 loops=1)
                     Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
                     ->  Sort  (cost=78.94..82.36 rows=1371 width=28) (actual time=0.134..0.170 rows=293 loops=1)
                           Sort Key: ((promotion.promo_sk)::double precision)
                           Sort Method: quicksort  Memory: 47kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.010..0.075 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
                     ->  Materialize  (cost=111345.57..111733.05 rows=77496 width=132) (actual time=598.444..629.697 rows=111855 loops=1)
                           ->  Sort  (cost=111345.57..111539.31 rows=77496 width=132) (actual time=598.440..615.821 rows=111855 loops=1)
                                 Sort Key: store_sales.promo_sk
                                 Sort Method: external merge  Disk: 16136kB
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=77496 width=132) (actual time=0.037..531.682 rows=114560 loops=1)
                                       Filter: ((list_price <= '112.12'::double precision) AND (list_price >= '105.32'::double precision))
                                       Rows Removed by Filter: 2765844
         ->  Sort  (cost=5133.27..5228.74 rows=38188 width=28) (actual time=14.572..16.463 rows=33194 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: quicksort  Memory: 2510kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=38188 width=28) (actual time=0.020..11.087 rows=22288 loops=1)
                     Filter: ((birth_day <= '15'::double precision) AND (birth_day >= '9'::double precision))
                     Rows Removed by Filter: 77712
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.168..5.169 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.015..2.149 rows=18000 loops=1)
 Planning Time: 506.265 ms
 Execution Time: 815.565 ms
(33 rows)

                                                                                                                                                                                                                                                            QUERY PLAN                                                                                                                                                                                                                                                             

 Hash Join  (cost=2705.10..160886.15 rows=100 width=244) (actual time=532.001..582.215 rows=1 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=2491.41..160233.32 rows=97 width=212) (actual time=531.958..582.170 rows=1 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=574.33..157947.26 rows=97 width=184) (actual time=506.039..551.419 rows=1 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=165 width=132) (actual time=2.113..546.883 rows=89 loops=1)
                     Filter: ((list_price <= '142.42'::double precision) AND (list_price >= '91.71'::double precision) AND (ext_sales_price <= '1297.4'::double precision) AND (ext_sales_price >= '787.84'::double precision) AND (ext_list_price <= '4973.1'::double precision) AND (ext_list_price >= '3357.12'::double precision) AND (ext_coupon_amt <= '2951.24'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '326.35'::double precision) AND (net_paid >= '280.35'::double precision))
                     Rows Removed by Filter: 2880315
               ->  Hash  (cost=456.00..456.00 rows=9466 width=52) (actual time=4.469..4.470 rows=11901 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 1151kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=9466 width=52) (actual time=0.006..2.861 rows=11912 loops=1)
                           Filter: ((brand_id <= '7013007'::double precision) AND (brand_id >= '1001002'::double precision))
                           Rows Removed by Filter: 6088
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=25.891..25.891 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.009..8.398 rows=100000 loops=1)
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.020..0.021 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.014 rows=12 loops=1)
 Planning Time: 488.094 ms
 Execution Time: 582.290 ms
(22 rows)

                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=144936.93..147604.27 rows=2151 width=244) (actual time=499.947..499.976 rows=36 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=143857.02..143862.24 rows=2086 width=212) (actual time=499.883..499.888 rows=36 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 34kB
         ->  Hash Join  (cost=604.28..143742.01 rows=2086 width=212) (actual time=21.476..499.834 rows=36 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Hash Join  (cost=579.64..143595.08 rows=2285 width=184) (actual time=4.338..499.239 rows=2150 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=11266 width=132) (actual time=0.125..492.649 rows=8336 loops=1)
                           Filter: ((sales_price <= '4.93'::double precision) AND (sales_price >= '2.96'::double precision) AND (ext_sales_price <= '2929.22'::double precision) AND (ext_sales_price >= '311.15'::double precision) AND (ext_list_price <= '4583.48'::double precision) AND (ext_list_price >= '1347.75'::double precision) AND (ext_coupon_amt <= '243.41'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                           Rows Removed by Filter: 2872068
                     ->  Hash  (cost=546.00..546.00 rows=2691 width=52) (actual time=3.976..3.977 rows=4647 loops=1)
                           Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 464kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=2691 width=52) (actual time=0.006..3.273 rows=4647 loops=1)
                                 Filter: ((category_id <= '10'::double precision) AND (category_id >= '7'::double precision) AND (manufact_id <= '810'::double precision) AND (manufact_id >= '164'::double precision))
                                 Rows Removed by Filter: 13353
               ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.116..0.116 rows=291 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 35kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.017..0.075 rows=293 loops=1)
                           Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                           Rows Removed by Filter: 7
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.039..0.042 rows=41 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.027..0.030 rows=12 loops=1)
 Planning Time: 676.883 ms
 Execution Time: 500.069 ms
(28 rows)

                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=86000.76..88544.02 rows=603 width=244) (actual time=1070.318..1312.226 rows=12887 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=85521.46..88052.20 rows=2617 width=192) (actual time=1067.881..1294.869 rows=127138 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=60718 width=28) (actual time=0.006..11.002 rows=28452 loops=1)
               Filter: ((birth_day <= '26'::double precision) AND (birth_day >= '18'::double precision))
               Rows Removed by Filter: 71548
         ->  Hash  (cost=85521.26..85521.26 rows=16 width=164) (actual time=1054.408..1054.410 rows=447330 loops=1)
               Buckets: 32768 (originally 1024)  Batches: 32 (originally 1)  Memory Usage: 3841kB
               ->  Hash Join  (cost=44.19..85521.26 rows=16 width=164) (actual time=0.058..738.314 rows=458159 loops=1)
                     Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..327.547 rows=2880404 loops=1)
                     ->  Hash  (cost=44.00..44.00 rows=15 width=32) (actual time=0.007..0.008 rows=1 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on store  (cost=0.00..44.00 rows=15 width=32) (actual time=0.004..0.006 rows=1 loops=1)
                                 Filter: ((number_employees <= 288) AND (number_employees >= 236) AND (floor_space <= 6995995) AND (floor_space >= 5285950) AND (market_id <= 9) AND (market_id >= 6))
                                 Rows Removed by Filter: 11
   ->  Hash  (cost=456.00..456.00 rows=1864 width=52) (actual time=2.422..2.423 rows=1834 loops=1)
         Buckets: 2048  Batches: 1  Memory Usage: 174kB
         ->  Seq Scan on item  (cost=0.00..456.00 rows=1864 width=52) (actual time=0.017..2.180 rows=1834 loops=1)
               Filter: ((brand_id <= '4002001'::double precision) AND (brand_id >= '3002002'::double precision))
               Rows Removed by Filter: 16166
 Planning Time: 501.326 ms
 Execution Time: 1312.788 ms
(24 rows)



 Hash Join  (cost=159019.09..163379.38 rows=295 width=244) (actual time=577.558..581.160 rows=41 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=158805.40..161885.85 rows=282 width=212) (actual time=577.514..581.097 rows=41 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Seq Scan on item  (cost=0.00..456.00 rows=31505 width=52) (actual time=0.007..2.530 rows=13645 loops=1)
               Filter: ((manufact_id <= '865'::double precision) AND (manufact_id >= '116'::double precision))
               Rows Removed by Filter: 4355
         ->  Hash  (cost=158776.23..158776.23 rows=2333 width=160) (actual time=577.443..577.445 rows=55 loops=1)
               Buckets: 4096  Batches: 1  Memory Usage: 43kB
               ->  Hash Join  (cost=196.09..158776.23 rows=2333 width=160) (actual time=6.310..577.395 rows=55 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=2361 width=132) (actual time=1.314..576.635 rows=2580 loops=1)
                           Filter: ((sales_price <= '65.64'::double precision) AND (sales_price >= '41.17'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '-1'::double precision) AND (ext_wholesale_cost <= '2099.62'::double precision) AND (ext_wholesale_cost >= '1975.68'::double precision) AND (ext_list_price <= '6212.2'::double precision) AND (ext_list_price >= '394.74'::double precision) AND (net_profit <= '-196.18'::double precision) AND (net_profit >= '-829.87'::double precision))
                           Rows Removed by Filter: 2877824
                     ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.095..0.095 rows=293 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 147kB
                           ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.053 rows=300 loops=1)
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.020..0.020 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.014 rows=12 loops=1)
 Planning Time: 815.570 ms
 Execution Time: 581.246 ms
(22 rows)

                                                                         QUERY PLAN                                                                          
-------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=126910.27..130649.30 rows=8174 width=244) (actual time=753.507..871.304 rows=23379 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=126354.18..129279.44 rows=8174 width=192) (actual time=746.145..849.363 rows=107668 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..8.834 rows=100000 loops=1)
         ->  Hash  (cost=126252.01..126252.01 rows=8174 width=164) (actual time=719.691..719.693 rows=107668 loops=1)
               Buckets: 32768 (originally 8192)  Batches: 8 (originally 1)  Memory Usage: 3841kB
               ->  Hash Join  (cost=43.94..126252.01 rows=8174 width=164) (actual time=0.055..635.728 rows=108974 loops=1)
                     Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=162056 width=132) (actual time=0.039..540.184 rows=670030 loops=1)
                           Filter: ((sales_price <= '44.23'::double precision) AND (sales_price >= '20.76'::double precision))
                           Rows Removed by Filter: 2210374
                     ->  Hash  (cost=37.20..37.20 rows=539 width=32) (actual time=0.008..0.009 rows=3 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on store  (cost=0.00..37.20 rows=539 width=32) (actual time=0.004..0.006 rows=3 loops=1)
                                 Filter: ((number_employees <= 294) AND (number_employees >= 278) AND (floor_space <= 9294113) AND (floor_space >= 7557959))
                                 Rows Removed by Filter: 9
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=5.381..5.381 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.015..2.097 rows=18000 loops=1)
 Planning Time: 507.459 ms
 Execution Time: 872.224 ms
(22 rows)

                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=87480.55..88542.55 rows=237902 width=244) (actual time=689.444..695.705 rows=9946 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=86813.44..86816.78 rows=1333 width=212) (actual time=687.411..690.909 rows=20074 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 14048kB
         ->  Hash Join  (cost=1220.88..86744.23 rows=1333 width=212) (actual time=4.178..638.939 rows=61928 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.045..312.793 rows=2880404 loops=1)
               ->  Hash  (cost=1204.43..1204.43 rows=1316 width=80) (actual time=4.116..4.118 rows=290 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 50kB
                     ->  Hash Join  (cost=24.64..1204.43 rows=1316 width=80) (actual time=0.124..4.034 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.766 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.104..0.106 rows=291 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 35kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.009..0.060 rows=293 loops=1)
                                       Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                       Rows Removed by Filter: 7
   ->  Sort  (cost=667.11..690.70 rows=9438 width=32) (actual time=0.022..0.415 rows=1 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=9438 width=32) (actual time=0.013..0.014 rows=1 loops=1)
               Filter: ((market_id <= 8) AND (market_id >= 8) AND (company_id <= 337) AND (company_id >= 226) AND (tax_percentage <= '0.11'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 11
 Planning Time: 621.792 ms
 Execution Time: 698.511 ms
(26 rows)

                                                                                                                                                           QUERY PLAN                                                                                                                                                           
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=642.22..133879.92 rows=433 width=244) (actual time=4.026..561.844 rows=30792 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=596.13..132690.20 rows=5345 width=212) (actual time=3.822..544.938 rows=93404 loops=1)
         Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
         ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=42077 width=132) (actual time=0.044..492.662 rows=220622 loops=1)
               Filter: ((sales_price <= '30.05'::double precision) AND (sales_price >= '14.17'::double precision) AND (ext_discount_amt <= '5023.26'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '990.45'::double precision) AND (ext_sales_price >= '162.5'::double precision))
               Rows Removed by Filter: 2659782
         ->  Hash  (cost=592.56..592.56 rows=286 width=80) (actual time=3.739..3.741 rows=128 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 23kB
               ->  Hash Join  (cost=16.75..592.56 rows=286 width=80) (actual time=0.133..3.699 rows=128 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=3705 width=52) (actual time=0.006..2.788 rows=7137 loops=1)
                           Filter: ((category_id <= '10'::double precision) AND (category_id >= '7'::double precision))
                           Rows Removed by Filter: 10863
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.097..0.098 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.057 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=37.20..37.20 rows=711 width=32) (actual time=0.020..0.020 rows=4 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 9kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=711 width=32) (actual time=0.014..0.017 rows=4 loops=1)
               Filter: ((number_employees <= 288) AND (number_employees >= 236) AND (floor_space <= 9026222) AND (floor_space >= 5285950))
               Rows Removed by Filter: 8
 Planning Time: 485.936 ms
 Execution Time: 563.153 ms
(26 rows)

                                                                                                                                                                                                                                                                                                               QUERY PLAN                                                                                                                                                                                                                                                                                                               

 Merge Join  (cost=243253.91..295372.02 rows=1623 width=244) (actual time=685.793..688.698 rows=5425 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=200864.39..200868.59 rows=1682 width=212) (actual time=685.761..686.078 rows=6490 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 1916kB
         ->  Merge Join  (cost=199157.73..200774.30 rows=1682 width=212) (actual time=668.327..683.371 rows=6490 loops=1)
               Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
               ->  Sort  (cost=24014.88..24502.08 rows=194880 width=28) (actual time=37.826..43.418 rows=64528 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external merge  Disk: 3152kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=194880 width=28) (actual time=0.018..18.052 rows=64570 loops=1)
                           Filter: ((birth_month <= '8'::double precision) AND (birth_month >= '1'::double precision))
                           Rows Removed by Filter: 35430
               ->  Sort  (cost=175142.85..175150.01 rows=2864 width=184) (actual time=630.482..631.380 rows=10213 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: quicksort  Memory: 3047kB
                     ->  Hash Join  (cost=722.09..174978.41 rows=2864 width=184) (actual time=4.153..624.542 rows=10218 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=25363 width=132) (actual time=0.082..610.808 rows=52520 loops=1)
                                 Filter: ((ext_discount_amt <= '411.45'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '1450.96'::double precision) AND (ext_wholesale_cost >= '512.12'::double precision) AND (ext_list_price <= '5336.76'::double precision) AND (ext_list_price >= '605.28'::double precision) AND (ext_tax <= '5.79'::double precision) AND (ext_tax >= '0.67'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '566.89'::double precision) AND (net_paid >= '-1'::double precision))
                                 Rows Removed by Filter: 2827884
                           ->  Hash  (cost=546.00..546.00 rows=14087 width=52) (actual time=3.951..3.951 rows=7014 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 731kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=14087 width=52) (actual time=0.007..3.110 rows=7019 loops=1)
                                       Filter: ((class_id <= '16'::double precision) AND (class_id >= '4'::double precision) AND (category_id <= '9'::double precision) AND (category_id >= '3'::double precision))
                                       Rows Removed by Filter: 10981
   ->  Materialize  (cost=42389.52..44210.64 rows=364223 width=32) (actual time=0.026..0.260 rows=5430 loops=1)
         ->  Sort  (cost=42389.52..43300.08 rows=364223 width=32) (actual time=0.023..0.024 rows=10 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=364223 width=32) (actual time=0.012..0.014 rows=10 loops=1)
                     Filter: ((tax_percentage <= '0.11'::double precision) AND (tax_percentage >= '0.03'::double precision))
                     Rows Removed by Filter: 2
 Planning Time: 488.069 ms
 Execution Time: 689.716 ms
(35 rows)

                                                                                                                                                            QUERY PLAN                                                                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=134047.33..141206.55 rows=5655 width=244) (actual time=835.950..842.154 rows=10332 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=133115.03..133131.38 rows=6543 width=212) (actual time=822.169..833.035 rows=62539 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 14376kB
         ->  Hash Join  (cost=130197.19..132700.33 rows=6543 width=212) (actual time=709.033..782.167 rows=62900 loops=1)
               Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..8.796 rows=100000 loops=1)
               ->  Hash  (cost=130115.40..130115.40 rows=6543 width=184) (actual time=703.030..703.032 rows=62900 loops=1)
                     Buckets: 32768 (originally 8192)  Batches: 4 (originally 1)  Memory Usage: 3841kB
                     ->  Hash Join  (cost=568.14..130115.40 rows=6543 width=184) (actual time=2.964..661.532 rows=63635 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=209544 width=132) (actual time=0.041..587.149 rows=543628 loops=1)
                                 Filter: ((sales_price <= '115.24'::double precision) AND (sales_price >= '50.82'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                                 Rows Removed by Filter: 2336776
                           ->  Hash  (cost=546.00..546.00 rows=1771 width=52) (actual time=2.913..2.914 rows=2127 loops=1)
                                 Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 215kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=1771 width=52) (actual time=0.006..2.615 rows=2127 loops=1)
                                       Filter: ((current_price <= '4.76'::double precision) AND (current_price >= '1.6'::double precision) AND (class_id <= '4'::double precision) AND (class_id >= '3'::double precision))
                                       Rows Removed by Filter: 15873
   ->  Sort  (cost=932.30..964.80 rows=13000 width=32) (actual time=0.028..0.472 rows=10333 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..44.00 rows=13000 width=32) (actual time=0.018..0.020 rows=2 loops=1)
               Filter: ((floor_space <= 9294113) AND (floor_space >= 9294113) AND (devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.11'::double precision) AND (tax_percentage >= '0.03'::double precision))
               Rows Removed by Filter: 10
 Planning Time: 446.811 ms
 Execution Time: 844.985 ms
(28 rows)

                                                                                                                                                                                                                                                                QUERY PLAN                                                                                                                                                                                                                                                                 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=2699.58..162226.27 rows=33 width=244) (actual time=39.552..699.405 rows=2397 loops=1)
   Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
   ->  Hash Join  (cost=782.49..160183.16 rows=33 width=216) (actual time=3.500..656.530 rows=2398 loops=1)
         Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
         ->  Hash Join  (cost=566.80..158139.66 rows=447 width=184) (actual time=2.823..655.349 rows=2895 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=2488 width=132) (actual time=0.040..636.403 rows=163420 loops=1)
                     Filter: ((quantity <= '79'::double precision) AND (quantity >= '21'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '2203.32'::double precision) AND (ext_wholesale_cost >= '624'::double precision) AND (ext_list_price <= '3734.08'::double precision) AND (ext_list_price >= '1061.24'::double precision) AND (net_paid_inc_tax <= '1046.76'::double precision) AND (net_paid_inc_tax >= '213.9'::double precision))
                     Rows Removed by Filter: 2716984
               ->  Hash  (cost=546.00..546.00 rows=1664 width=52) (actual time=2.541..2.541 rows=938 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 97kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=1664 width=52) (actual time=0.008..2.416 rows=939 loops=1)
                           Filter: ((brand_id <= '10006013'::double precision) AND (brand_id >= '7008001'::double precision) AND (class_id <= '2'::double precision) AND (class_id >= '1'::double precision))
                           Rows Removed by Filter: 17061
         ->  Hash  (cost=44.00..44.00 rows=13735 width=32) (actual time=0.023..0.024 rows=9 loops=1)
               Buckets: 16384  Batches: 1  Memory Usage: 129kB
               ->  Seq Scan on store  (cost=0.00..44.00 rows=13735 width=32) (actual time=0.014..0.019 rows=9 loops=1)
                     Filter: ((market_id <= 9) AND (market_id >= 2) AND (devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 767) AND (company_id >= 27))
                     Rows Removed by Filter: 3
   ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=32.874..32.875 rows=100000 loops=1)
         Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..10.211 rows=100000 loops=1)
 Planning Time: 541.925 ms
 Execution Time: 699.604 ms
(24 rows)

                                                                                                                                                                                                              QUERY PLAN                                                                                                                                                                                                              
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=154417.19..166749.17 rows=401138 width=244) (actual time=1453.608..1820.643 rows=420832 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=474.33..491.72 rows=6956 width=32) (actual time=0.027..0.037 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=6956 width=32) (actual time=0.014..0.019 rows=12 loops=1)
               Filter: ((market_id <= 10) AND (market_id >= 2))
   ->  Materialize  (cost=153942.86..154048.00 rows=21029 width=212) (actual time=1453.572..1684.253 rows=420833 loops=1)
         ->  Sort  (cost=153942.86..153995.43 rows=21029 width=212) (actual time=1453.568..1539.062 rows=420833 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 96328kB
               ->  Hash Join  (cost=147785.51..150273.46 rows=21029 width=212) (actual time=800.261..1147.388 rows=421173 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Merge Join  (cost=147229.43..147549.40 rows=21776 width=160) (actual time=795.542..1024.158 rows=313915 loops=1)
                           Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                           ->  Sort  (cost=144446.11..144498.05 rows=20774 width=132) (actual time=741.162..809.484 rows=313916 loops=1)
                                 Sort Key: store_sales.customer_sk
                                 Sort Method: external merge  Disk: 44976kB
                                 ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=20774 width=132) (actual time=0.038..568.361 rows=314869 loops=1)
                                       Filter: ((sales_price <= '14.91'::double precision) AND (sales_price >= '3.7'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '1469.88'::double precision) AND (net_paid >= '191.16'::double precision) AND (net_paid_inc_tax <= '1053.2'::double precision) AND (net_paid_inc_tax >= '-1'::double precision))
                                       Rows Removed by Filter: 2565535
                           ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.369..89.481 rows=331058 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: external sort  Disk: 5216kB
                                 ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.016..13.045 rows=100000 loops=1)
                     ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.692..4.692 rows=17954 loops=1)
                           Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.005..1.992 rows=18000 loops=1)
 Planning Time: 479.972 ms
 Execution Time: 1877.912 ms
(30 rows)

                                                                                                                                                                                                     QUERY PLAN                                                                                                                                                                                                      
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=2490.50..146500.98 rows=121 width=240) (actual time=61.610..546.857 rows=89 loops=1)
   Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
   ->  Hash Join  (cost=573.41..144124.47 rows=121 width=212) (actual time=4.407..505.770 rows=89 loops=1)
         Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
         ->  Hash Join  (cost=548.77..143932.35 rows=431 width=184) (actual time=4.285..505.586 rows=91 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=4941 width=132) (actual time=0.155..500.137 rows=11350 loops=1)
                     Filter: ((quantity <= '13'::double precision) AND (quantity >= '-1'::double precision) AND (ext_discount_amt <= '1513.98'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '4280'::double precision) AND (ext_wholesale_cost >= '703.89'::double precision) AND (net_paid <= '275.39'::double precision) AND (net_paid >= '36'::double precision))
                     Rows Removed by Filter: 2869054
               ->  Hash  (cost=546.00..546.00 rows=222 width=52) (actual time=3.438..3.438 rows=3186 loops=1)
                     Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 306kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=222 width=52) (actual time=0.007..3.018 rows=3188 loops=1)
                           Filter: ((brand_id <= '8001010'::double precision) AND (brand_id >= '1001001'::double precision) AND (manufact_id <= '998'::double precision) AND (manufact_id >= '504'::double precision))
                           Rows Removed by Filter: 14812
         ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.115..0.115 rows=293 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 35kB
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.017..0.071 rows=293 loops=1)
                     Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                     Rows Removed by Filter: 7
   ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=33.432..33.432 rows=100000 loops=1)
         Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.006..10.438 rows=100000 loops=1)
 Planning Time: 502.615 ms
 Execution Time: 546.935 ms
(24 rows)

                                                                                                                                                                                                     QUERY PLAN                                                                                                                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=154362.44..167266.56 rows=3521 width=244) (actual time=698.694..738.304 rows=14548 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=98861 width=28) (actual time=0.016..12.599 rows=40488 loops=1)
         Filter: ((birth_month <= '11'::double precision) AND (birth_month >= '7'::double precision))
         Rows Removed by Filter: 59512
   ->  Hash  (cost=154322.95..154322.95 rows=3159 width=216) (actual time=694.948..694.951 rows=35989 loops=1)
         Buckets: 16384 (originally 4096)  Batches: 4 (originally 1)  Memory Usage: 3969kB
         ->  Merge Join  (cost=150407.86..154322.95 rows=3159 width=216) (actual time=647.516..669.445 rows=36041 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=149327.95..149335.60 rows=3062 width=184) (actual time=647.485..653.366 rows=36042 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 7144kB
                     ->  Hash Join  (cost=1914.71..149150.66 rows=3062 width=184) (actual time=9.072..621.927 rows=36152 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=45932 width=132) (actual time=0.045..579.267 rows=42855 loops=1)
                                 Filter: ((quantity <= '70'::double precision) AND (quantity >= '22'::double precision) AND (list_price <= '54.36'::double precision) AND (list_price >= '38.12'::double precision) AND (ext_coupon_amt <= '25.55'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '764.64'::double precision) AND (net_profit >= '-218.31'::double precision))
                                 Rows Removed by Filter: 2837549
                           ->  Hash  (cost=456.00..456.00 rows=65497 width=52) (actual time=8.944..8.945 rows=15193 loops=1)
                                 Buckets: 65536  Batches: 2  Memory Usage: 1171kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=65497 width=52) (actual time=0.007..3.450 rows=15193 loops=1)
                                       Filter: ((class_id <= '16'::double precision) AND (class_id >= '2'::double precision))
                                       Rows Removed by Filter: 2807
               ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.024..1.597 rows=36046 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.012..0.014 rows=12 loops=1)
 Planning Time: 497.992 ms
 Execution Time: 740.232 ms
(28 rows)

                                                                     QUERY PLAN                                                                     
----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=110561.48..154087.84 rows=35216 width=244) (actual time=477.608..483.522 rows=10696 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.025..0.027 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.013..0.017 rows=12 loops=1)
   ->  Materialize  (cost=109481.57..109652.00 rows=34085 width=212) (actual time=477.575..480.088 rows=10697 loops=1)
         ->  Sort  (cost=109481.57..109566.78 rows=34085 width=212) (actual time=477.571..478.343 rows=10697 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 3243kB
               ->  Hash Join  (cost=2682.58..103418.98 rows=34085 width=212) (actual time=4.592..471.647 rows=10957 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=169726 width=132) (actual time=0.040..408.834 rows=687307 loops=1)
                           Filter: ((quantity <= '28'::double precision) AND (quantity >= '4'::double precision))
                           Rows Removed by Filter: 2193097
                     ->  Hash  (cost=2636.62..2636.62 rows=3677 width=80) (actual time=4.471..4.473 rows=213 loops=1)
                           Buckets: 4096  Batches: 1  Memory Usage: 57kB
                           ->  Hash Join  (cost=196.09..2636.62 rows=3677 width=80) (actual time=0.147..4.407 rows=213 loops=1)
                                 Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=3832 width=52) (actual time=0.005..2.819 rows=13358 loops=1)
                                       Filter: ((current_price <= '9.78'::double precision) AND (current_price >= '1.25'::double precision))
                                       Rows Removed by Filter: 4642
                                 ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.080..0.081 rows=293 loops=1)
                                       Buckets: 16384  Batches: 1  Memory Usage: 147kB
                                       ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.007..0.038 rows=300 loops=1)
 Planning Time: 500.467 ms
 Execution Time: 483.983 ms
(27 rows)

                                                                                                                                                                      QUERY PLAN                                                                                                                                                                      
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=156462.63..201501.48 rows=36443 width=244) (actual time=795.897..800.872 rows=9888 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.026..0.027 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.014..0.018 rows=12 loops=1)
   ->  Materialize  (cost=155382.72..155559.09 rows=35273 width=212) (actual time=795.865..797.710 rows=9889 loops=1)
         ->  Sort  (cost=155382.72..155470.90 rows=35273 width=212) (actual time=795.862..796.380 rows=9889 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 2965kB
               ->  Hash Join  (cost=139390.20..149099.51 rows=35273 width=212) (actual time=716.892..791.737 rows=9911 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Merge Join  (cost=137475.48..138008.31 rows=44312 width=160) (actual time=706.101..755.238 rows=54719 loops=1)
                           Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                           ->  Sort  (cost=134692.17..134797.79 rows=42246 width=132) (actual time=651.640..660.439 rows=54720 loops=1)
                                 Sort Key: store_sales.customer_sk
                                 Sort Method: external merge  Disk: 7848kB
                                 ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=42246 width=132) (actual time=0.043..616.728 rows=55078 loops=1)
                                       Filter: ((ext_discount_amt <= '3928.52'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '5277.11'::double precision) AND (ext_sales_price >= '849.15'::double precision) AND (net_paid <= '693.41'::double precision) AND (net_paid >= '260.82'::double precision))
                                       Rows Removed by Filter: 2825326
                           ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.451..66.095 rows=115910 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: external sort  Disk: 5216kB
                                 ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..12.992 rows=100000 loops=1)
                     ->  Hash  (cost=456.00..456.00 rows=65497 width=52) (actual time=8.707..8.708 rows=15170 loops=1)
                           Buckets: 65536  Batches: 2  Memory Usage: 1178kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=65497 width=52) (actual time=0.007..3.306 rows=15193 loops=1)
                                 Filter: ((class_id <= '16'::double precision) AND (class_id >= '2'::double precision))
                                 Rows Removed by Filter: 2807
 Planning Time: 557.446 ms
 Execution Time: 803.714 ms
(31 rows)

                                                                                                   QUERY PLAN                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=106541.69..110277.12 rows=5325 width=240) (actual time=589.058..603.409 rows=98 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=82760 width=28) (actual time=0.017..10.836 rows=44662 loops=1)
         Filter: ((birth_day <= '16'::double precision) AND (birth_day >= '3'::double precision))
         Rows Removed by Filter: 55338
   ->  Hash  (cost=106484.45..106484.45 rows=4579 width=212) (actual time=588.766..588.769 rows=222 loops=1)
         Buckets: 8192  Batches: 1  Memory Usage: 120kB
         ->  Hash Join  (cost=710.23..106484.45 rows=4579 width=212) (actual time=15.134..588.602 rows=226 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Hash Join  (cost=685.59..104759.81 rows=31767 width=184) (actual time=3.085..586.515 rows=13841 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=434106 width=132) (actual time=0.036..556.012 rows=272452 loops=1)
                           Filter: ((net_profit <= '2196'::double precision) AND (net_profit >= '429.6'::double precision))
                           Rows Removed by Filter: 2607952
                     ->  Hash  (cost=546.00..546.00 rows=11167 width=52) (actual time=2.885..2.885 rows=900 loops=1)
                           Buckets: 16384  Batches: 1  Memory Usage: 206kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=11167 width=52) (actual time=0.008..2.758 rows=900 loops=1)
                                 Filter: ((class_id <= '13'::double precision) AND (class_id >= '1'::double precision) AND (manufact_id <= '119'::double precision) AND (manufact_id >= '88'::double precision))
                                 Rows Removed by Filter: 17100
               ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.097..0.097 rows=291 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 35kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.059 rows=293 loops=1)
                           Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                           Rows Removed by Filter: 7
 Planning Time: 503.719 ms
 Execution Time: 603.484 ms
(26 rows)

                                                                                                                                                           QUERY PLAN                                                                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=149901.06..162907.34 rows=21865 width=240) (actual time=564.198..573.493 rows=15 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Merge Join  (cost=149704.97..151387.54 rows=21865 width=212) (actual time=563.647..573.199 rows=1226 loops=1)
         Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
         ->  Sort  (cost=10976.14..11183.17 rows=82811 width=28) (actual time=30.626..34.885 rows=44805 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external merge  Disk: 2192kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=82811 width=28) (actual time=0.009..16.022 rows=44852 loops=1)
                     Filter: ((birth_year <= '1960'::double precision) AND (birth_year >= '1929'::double precision))
                     Rows Removed by Filter: 55148
         ->  Materialize  (cost=138728.83..138937.03 rows=41639 width=184) (actual time=533.004..533.747 rows=2710 loops=1)
               ->  Sort  (cost=138728.83..138832.93 rows=41639 width=184) (actual time=532.999..533.247 rows=2710 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: quicksort  Memory: 819kB
                     ->  Hash Join  (cost=732.12..131830.99 rows=41639 width=184) (actual time=4.934..531.237 rows=2722 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=158752 width=132) (actual time=0.247..524.539 rows=3888 loops=1)
                                 Filter: ((quantity <= '74'::double precision) AND (quantity >= '69'::double precision) AND (ext_wholesale_cost <= '8679.33'::double precision) AND (ext_wholesale_cost >= '134.06'::double precision) AND (net_paid <= '128.06'::double precision) AND (net_paid >= '79.45'::double precision))
                                 Rows Removed by Filter: 2876516
                           ->  Hash  (cost=456.00..456.00 rows=22090 width=52) (actual time=4.666..4.667 rows=12527 loops=1)
                                 Buckets: 32768  Batches: 1  Memory Usage: 1332kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=22090 width=52) (actual time=0.007..3.171 rows=12527 loops=1)
                                       Filter: ((manufact_id <= '807'::double precision) AND (manufact_id >= '140'::double precision))
                                       Rows Removed by Filter: 5473
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.093..0.093 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.048 rows=300 loops=1)
 Planning Time: 511.824 ms
 Execution Time: 574.132 ms
(29 rows)

                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=206913.69..224622.95 rows=20238 width=244) (actual time=1320.154..1350.260 rows=1284 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=88246 width=28) (actual time=0.016..13.663 rows=77100 loops=1)
         Filter: ((birth_year <= '1984'::double precision) AND (birth_year >= '1930'::double precision))
         Rows Removed by Filter: 22900
   ->  Hash  (cost=205912.28..205912.28 rows=23953 width=216) (actual time=1318.094..1318.097 rows=1665 loops=1)
         Buckets: 16384  Batches: 2  Memory Usage: 326kB
         ->  Merge Join  (cost=168063.96..205912.28 rows=23953 width=216) (actual time=1314.101..1315.083 rows=1676 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=113896.12..113898.51 rows=957 width=184) (actual time=1314.058..1314.197 rows=1677 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: quicksort  Memory: 497kB
                     ->  Hash Join  (cost=107659.52..113848.76 rows=957 width=184) (actual time=946.704..1313.445 rows=1692 loops=1)
                           Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=501 width=52) (actual time=0.026..2.169 rows=658 loops=1)
                                 Filter: ((current_price <= '9.64'::double precision) AND (current_price >= '6.85'::double precision) AND (manufact_id <= '686'::double precision) AND (manufact_id >= '435'::double precision))
                                 Rows Removed by Filter: 17342
                           ->  Hash  (cost=99753.18..99753.18 rows=246827 width=132) (actual time=927.712..927.712 rows=947990 loops=1)
                                 Buckets: 32768 (originally 32768)  Batches: 64 (originally 16)  Memory Usage: 3841kB
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=246827 width=132) (actual time=0.036..540.175 rows=970908 loops=1)
                                       Filter: ((ext_list_price <= '5420.45'::double precision) AND (ext_list_price >= '1840.38'::double precision))
                                       Rows Removed by Filter: 1909496
               ->  Materialize  (cost=54167.84..56462.34 rows=458899 width=32) (actual time=0.034..0.111 rows=1681 loops=1)
                     ->  Sort  (cost=54167.84..55315.09 rows=458899 width=32) (actual time=0.032..0.033 rows=11 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..30.40 rows=458899 width=32) (actual time=0.019..0.022 rows=11 loops=1)
                                 Filter: ((tax_percentage <= '0.08'::double precision) AND (tax_percentage >= '0.01'::double precision))
                                 Rows Removed by Filter: 1
 Planning Time: 490.418 ms
 Execution Time: 1350.386 ms
(31 rows)

                                                                                                                                                   QUERY PLAN                                                                                                                                                   
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=3272.45..133185.10 rows=77 width=244) (actual time=18.661..751.921 rows=1194 loops=1)
   Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
   ->  Hash Join  (cost=622.16..129718.14 rows=96 width=216) (actual time=2.961..735.609 rows=12667 loops=1)
         Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
         ->  Hash Join  (cost=576.41..129452.68 rows=4972 width=184) (actual time=2.888..724.440 rows=77211 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=62914 width=132) (actual time=0.036..618.858 rows=984717 loops=1)
                     Filter: ((sales_price <= '67.29'::double precision) AND (sales_price >= '15.95'::double precision) AND (ext_discount_amt <= '285.9'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_tax <= '242.93'::double precision) AND (ext_tax >= '0'::double precision))
                     Rows Removed by Filter: 1895687
               ->  Hash  (cost=546.00..546.00 rows=2433 width=52) (actual time=2.833..2.834 rows=1428 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 155kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=2433 width=52) (actual time=0.006..2.659 rows=1428 loops=1)
                           Filter: ((class_id <= '9'::double precision) AND (class_id >= '3'::double precision) AND (manufact_id <= '96'::double precision) AND (manufact_id >= '1'::double precision))
                           Rows Removed by Filter: 16572
         ->  Hash  (cost=44.00..44.00 rows=140 width=32) (actual time=0.020..0.020 rows=2 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on store  (cost=0.00..44.00 rows=140 width=32) (actual time=0.015..0.017 rows=2 loops=1)
                     Filter: ((floor_space <= 9294113) AND (floor_space >= 9078805) AND (market_id <= 9) AND (market_id >= 4) AND (company_id <= 226) AND (company_id >= 175))
                     Rows Removed by Filter: 10
   ->  Hash  (cost=2227.00..2227.00 rows=33863 width=28) (actual time=13.515..13.516 rows=9570 loops=1)
         Buckets: 65536  Batches: 1  Memory Usage: 1108kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=33863 width=28) (actual time=0.008..12.045 rows=9570 loops=1)
               Filter: ((birth_day <= '23'::double precision) AND (birth_day >= '21'::double precision))
               Rows Removed by Filter: 90430
 Planning Time: 457.097 ms
 Execution Time: 752.074 ms
(26 rows)

                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=103998.88..106076.37 rows=3452 width=244) (actual time=885.124..953.402 rows=49177 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.013..8.843 rows=100000 loops=1)
   ->  Hash  (cost=103955.73..103955.73 rows=3452 width=216) (actual time=878.916..878.919 rows=49177 loops=1)
         Buckets: 16384 (originally 4096)  Batches: 4 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=573.53..103955.73 rows=3452 width=216) (actual time=3.099..840.574 rows=49760 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Hash Join  (cost=534.01..102209.64 rows=30293 width=184) (actual time=3.055..798.997 rows=305543 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=266370 width=132) (actual time=0.036..601.679 rows=1281027 loops=1)
                           Filter: ((net_paid_inc_tax <= '3115.32'::double precision) AND (net_paid_inc_tax >= '422.97'::double precision))
                           Rows Removed by Filter: 1599377
                     ->  Hash  (cost=456.00..456.00 rows=6241 width=52) (actual time=2.997..2.997 rows=4280 loops=1)
                           Buckets: 8192  Batches: 1  Memory Usage: 432kB
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=6241 width=52) (actual time=0.005..2.456 rows=4280 loops=1)
                                 Filter: ((manufact_id <= '167'::double precision) AND (manufact_id >= '35'::double precision))
                                 Rows Removed by Filter: 13720
               ->  Hash  (cost=37.20..37.20 rows=185 width=32) (actual time=0.009..0.010 rows=1 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                     ->  Seq Scan on store  (cost=0.00..37.20 rows=185 width=32) (actual time=0.005..0.007 rows=1 loops=1)
                           Filter: ((number_employees <= 294) AND (number_employees >= 278) AND (floor_space <= 8954883) AND (floor_space >= 6995995))
                           Rows Removed by Filter: 11
 Planning Time: 487.154 ms
 Execution Time: 955.198 ms
(24 rows)

                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=118626.98..124906.35 rows=13832 width=244) (actual time=663.328..666.070 rows=2827 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=117345.43..117356.02 rows=4237 width=212) (actual time=663.296..663.997 rows=7025 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 2601kB
         ->  Hash Join  (cost=772.35..117090.20 rows=4237 width=212) (actual time=3.921..658.769 rows=8539 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=415809 width=132) (actual time=0.045..588.835 rows=838172 loops=1)
                     Filter: ((list_price <= '105.54'::double precision) AND (list_price >= '49.84'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                     Rows Removed by Filter: 2042232
               ->  Hash  (cost=739.65..739.65 rows=2616 width=80) (actual time=3.777..3.779 rows=130 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 48kB
                     ->  Hash Join  (cost=24.64..739.65 rows=2616 width=80) (actual time=0.131..3.739 rows=130 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..456.00 rows=4840 width=52) (actual time=0.006..2.680 rows=8505 loops=1)
                                 Filter: ((class_id <= '4'::double precision) AND (class_id >= '2'::double precision))
                                 Rows Removed by Filter: 9495
                           ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.112..0.113 rows=291 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 35kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.005..0.074 rows=293 loops=1)
                                       Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                       Rows Removed by Filter: 7
   ->  Sort  (cost=1281.55..1325.66 rows=17642 width=32) (actual time=0.023..0.146 rows=2828 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=17642 width=32) (actual time=0.013..0.015 rows=3 loops=1)
               Filter: ((number_employees <= 294) AND (number_employees >= 236) AND (market_id <= 4) AND (market_id >= 2))
               Rows Removed by Filter: 9
 Planning Time: 544.257 ms
 Execution Time: 666.242 ms
(30 rows)

                                                                                                                                                               QUERY PLAN                                                                                                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=306785.36..307015.82 rows=5265 width=244) (actual time=677.158..702.781 rows=6771 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=306229.27..306395.51 rows=5265 width=192) (actual time=667.488..690.236 rows=6771 loops=1)
         Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
         ->  Sort  (cost=303445.96..303459.12 rows=5265 width=164) (actual time=612.012..612.649 rows=6772 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: quicksort  Memory: 1992kB
               ->  Merge Join  (cost=139492.00..303120.56 rows=5265 width=164) (actual time=604.233..608.811 rows=6779 loops=1)
                     Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
                     ->  Sort  (cost=130166.92..130222.71 rows=22313 width=132) (actual time=604.195..605.361 rows=11361 loops=1)
                           Sort Key: store_sales.store_sk
                           Sort Method: quicksort  Memory: 3984kB
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=22313 width=132) (actual time=0.049..600.843 rows=13814 loops=1)
                                 Filter: ((ext_list_price <= '6777.32'::double precision) AND (ext_list_price >= '1459.64'::double precision) AND (net_paid <= '151.47'::double precision) AND (net_paid >= '118.98'::double precision) AND (net_profit <= '-46.97'::double precision) AND (net_profit >= '-2476.76'::double precision))
                                 Rows Removed by Filter: 2866590
                     ->  Materialize  (cost=9325.08..9762.70 rows=87524 width=32) (actual time=0.030..0.327 rows=6780 loops=1)
                           ->  Sort  (cost=9325.08..9543.89 rows=87524 width=32) (actual time=0.026..0.027 rows=4 loops=1)
                                 Sort Key: ((store.store_sk)::double precision)
                                 Sort Method: quicksort  Memory: 25kB
                                 ->  Seq Scan on store  (cost=0.00..44.00 rows=87524 width=32) (actual time=0.014..0.016 rows=4 loops=1)
                                       Filter: ((floor_space <= 7557959) AND (floor_space >= 5250760) AND (company_id <= 767) AND (company_id >= 27) AND (tax_percentage <= '0.11'::double precision) AND (tax_percentage >= '0.03'::double precision))
                                       Rows Removed by Filter: 8
         ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=55.468..65.408 rows=100352 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external sort  Disk: 5216kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.009..13.230 rows=100000 loops=1)
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=9.639..9.640 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.017..3.843 rows=18000 loops=1)
 Planning Time: 510.064 ms
 Execution Time: 704.009 ms
(31 rows)

                                                                                                                        QUERY PLAN                                                                                                                        
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=122007.55..125356.62 rows=3200 width=244) (actual time=896.203..914.520 rows=168 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=121921.05..123916.95 rows=1151 width=212) (actual time=896.113..914.361 rows=1038 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..8.089 rows=100000 loops=1)
         ->  Hash  (cost=121906.66..121906.66 rows=1151 width=184) (actual time=896.080..896.082 rows=1038 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 243kB
               ->  Hash Join  (cost=117878.63..121906.66 rows=1151 width=184) (actual time=826.433..895.724 rows=1040 loops=1)
                     Hash Cond: (item.wholesale_cost = store_sales.wholesale_cost)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=798 width=52) (actual time=0.009..2.224 rows=1110 loops=1)
                           Filter: ((current_price <= '6.84'::double precision) AND (current_price >= '4.41'::double precision) AND (manufact_id <= '214'::double precision) AND (manufact_id >= '27'::double precision))
                           Rows Removed by Filter: 16890
                     ->  Hash  (cost=114154.24..114154.24 rows=116271 width=132) (actual time=797.437..797.437 rows=315539 loops=1)
                           Buckets: 32768 (originally 32768)  Batches: 16 (originally 8)  Memory Usage: 3841kB
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=116271 width=132) (actual time=0.041..629.863 rows=319345 loops=1)
                                 Filter: ((ext_list_price <= '7655.67'::double precision) AND (ext_list_price >= '1542.75'::double precision) AND (net_paid_inc_tax <= '1188.52'::double precision) AND (net_paid_inc_tax >= '452.61'::double precision))
                                 Rows Removed by Filter: 2561059
   ->  Hash  (cost=37.20..37.20 rows=3944 width=32) (actual time=0.021..0.021 rows=3 loops=1)
         Buckets: 4096  Batches: 1  Memory Usage: 33kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=3944 width=32) (actual time=0.014..0.017 rows=3 loops=1)
               Filter: ((floor_space <= 7557959) AND (floor_space >= 6995995) AND (devision_id <= 1) AND (devision_id >= 1))
               Rows Removed by Filter: 9
 Planning Time: 527.124 ms
 Execution Time: 914.603 ms
(24 rows)

                                                                                                    QUERY PLAN                                                                                                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=102724.60..105480.60 rows=1148 width=244) (actual time=583.443..592.315 rows=133 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=52334 width=28) (actual time=0.024..8.943 rows=3077 loops=1)
         Filter: ((birth_day <= '28'::double precision) AND (birth_day >= '28'::double precision))
         Rows Removed by Filter: 96923
   ->  Hash  (cost=102716.08..102716.08 rows=682 width=216) (actual time=582.965..582.968 rows=4203 loops=1)
         Buckets: 8192 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 1114kB
         ->  Hash Join  (cost=618.99..102716.08 rows=682 width=216) (actual time=3.344..580.535 rows=4232 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Hash Join  (cost=44.60..102070.64 rows=815 width=164) (actual time=0.055..556.645 rows=179896 loops=1)
                     Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
                     ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=131435 width=132) (actual time=0.037..465.096 rows=553361 loops=1)
                           Filter: ((sales_price <= '53.11'::double precision) AND (sales_price >= '29.82'::double precision))
                           Rows Removed by Filter: 2327043
                     ->  Hash  (cost=44.00..44.00 rows=48 width=32) (actual time=0.010..0.011 rows=5 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 9kB
                           ->  Seq Scan on store  (cost=0.00..44.00 rows=48 width=32) (actual time=0.004..0.007 rows=5 loops=1)
                                 Filter: ((floor_space <= 9341467) AND (floor_space >= 9026222) AND (devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 226) AND (company_id >= 27))
                                 Rows Removed by Filter: 7
               ->  Hash  (cost=546.00..546.00 rows=2271 width=52) (actual time=3.210..3.210 rows=2775 loops=1)
                     Buckets: 4096  Batches: 1  Memory Usage: 271kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=2271 width=52) (actual time=0.005..2.848 rows=2777 loops=1)
                           Filter: ((current_price <= '91.49'::double precision) AND (current_price >= '0.12'::double precision) AND (class_id <= '2'::double precision) AND (class_id >= '2'::double precision))
                           Rows Removed by Filter: 15223
 Planning Time: 547.160 ms
 Execution Time: 592.388 ms
(26 rows)

                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=778.14..87374.89 rows=9610 width=244) (actual time=4.394..657.140 rows=25986 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=685.71..86239.29 rows=791 width=212) (actual time=4.358..645.755 rows=40120 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..315.659 rows=2880404 loops=1)
         ->  Hash  (cost=675.95..675.95 rows=781 width=80) (actual time=4.307..4.309 rows=184 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 30kB
               ->  Hash Join  (cost=16.75..675.95 rows=781 width=80) (actual time=0.134..4.255 rows=185 loops=1)
                     Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=6284 width=52) (actual time=0.006..2.932 rows=10760 loops=1)
                           Filter: ((category_id <= '9'::double precision) AND (category_id >= '4'::double precision))
                           Rows Removed by Filter: 7240
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.111..0.112 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.006..0.060 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=37.20..37.20 rows=4418 width=32) (actual time=0.022..0.022 rows=8 loops=1)
         Buckets: 8192  Batches: 1  Memory Usage: 65kB
         ->  Seq Scan on store  (cost=0.00..37.20 rows=4418 width=32) (actual time=0.014..0.018 rows=8 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
               Rows Removed by Filter: 4
 Planning Time: 543.069 ms
 Execution Time: 658.261 ms
(24 rows)



 Hash Join  (cost=6818.00..182516.70 rows=12 width=240) (actual time=51.835..710.937 rows=4695 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=6261.91..181960.47 rows=12 width=188) (actual time=47.294..704.444 rows=4695 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=24.64..171887.15 rows=47 width=160) (actual time=0.213..647.326 rows=6129 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=1944 width=132) (actual time=0.038..616.794 rows=284030 loops=1)
                     Filter: ((quantity <= '66'::double precision) AND (quantity >= '13'::double precision) AND (sales_price <= '20.97'::double precision) AND (sales_price >= '5.54'::double precision) AND (ext_discount_amt <= '403.63'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '4734.32'::double precision) AND (ext_wholesale_cost >= '417'::double precision) AND (net_paid <= '8305.02'::double precision) AND (net_paid >= '-1'::double precision) AND (net_profit <= '635.16'::double precision) AND (net_profit >= '-5343.1'::double precision))
                     Rows Removed by Filter: 2596374
               ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.100..0.101 rows=291 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 35kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.006..0.062 rows=293 loops=1)
                           Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                           Rows Removed by Filter: 7
         ->  Hash  (cost=2227.00..2227.00 rows=207382 width=28) (actual time=38.588..38.589 rows=76106 loops=1)
               Buckets: 65536  Batches: 4  Memory Usage: 1695kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=207382 width=28) (actual time=0.007..16.213 rows=76106 loops=1)
                     Filter: ((birth_day <= '28'::double precision) AND (birth_day >= '5'::double precision))
                     Rows Removed by Filter: 23894
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.517..4.517 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.013..1.925 rows=18000 loops=1)
 Planning Time: 540.397 ms
 Execution Time: 711.207 ms
(24 rows)



 Hash Join  (cost=960.95..174470.65 rows=519 width=244) (actual time=113.843..517.761 rows=8 loops=1)
   Hash Cond: (promotion.item_sk = (item.item_sk)::double precision)
   ->  Hash Join  (cost=238.32..172730.72 rows=168 width=192) (actual time=109.521..513.425 rows=10 loops=1)
         Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
         ->  Hash Join  (cost=24.64..171796.61 rows=159 width=160) (actual time=109.477..513.365 rows=10 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=252 width=132) (actual time=0.331..513.090 rows=514 loops=1)
                     Filter: ((list_price <= '68.5'::double precision) AND (list_price >= '66.17'::double precision) AND (ext_sales_price <= '2857.98'::double precision) AND (ext_sales_price >= '-1'::double precision) AND (ext_list_price <= '7544.55'::double precision) AND (ext_list_price >= '5748.62'::double precision) AND (ext_tax <= '101'::double precision) AND (ext_tax >= '0'::double precision) AND (ext_coupon_amt <= '116.29'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid <= '730.97'::double precision) AND (net_paid >= '130.82'::double precision))
                     Rows Removed by Filter: 2879890
               ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.109..0.110 rows=291 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 35kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.073 rows=293 loops=1)
                           Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                           Rows Removed by Filter: 7
         ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.021..0.021 rows=12 loops=1)
               Buckets: 16384  Batches: 1  Memory Usage: 129kB
               ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.012..0.015 rows=12 loops=1)
   ->  Hash  (cost=456.00..456.00 rows=21330 width=52) (actual time=4.277..4.278 rows=12257 loops=1)
         Buckets: 32768  Batches: 1  Memory Usage: 1309kB
         ->  Seq Scan on item  (cost=0.00..456.00 rows=21330 width=52) (actual time=0.010..2.856 rows=12257 loops=1)
               Filter: ((manufact_id <= '859'::double precision) AND (manufact_id >= '156'::double precision))
               Rows Removed by Filter: 5743
 Planning Time: 512.182 ms
 Execution Time: 517.839 ms
(24 rows)

                                                                                                                                                                                                      QUERY PLAN                                                                                                                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=143878.61..167273.93 rows=404 width=240) (actual time=753.117..876.191 rows=48844 loops=1)
   Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
   ->  Hash Join  (cost=143682.52..165345.38 rows=404 width=212) (actual time=752.998..862.888 rows=48923 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=337105 width=28) (actual time=0.007..14.689 rows=68489 loops=1)
               Filter: ((birth_year <= '1972'::double precision) AND (birth_year >= '-1'::double precision))
               Rows Removed by Filter: 31511
         ->  Hash  (cost=143670.29..143670.29 rows=978 width=184) (actual time=752.982..752.984 rows=71058 loops=1)
               Buckets: 32768 (originally 1024)  Batches: 8 (originally 1)  Memory Usage: 3841kB
               ->  Hash Join  (cost=575.44..143670.29 rows=978 width=184) (actual time=3.449..697.645 rows=71294 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=27380 width=132) (actual time=0.040..643.946 rows=291841 loops=1)
                           Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '4858.1'::double precision) AND (ext_sales_price >= '326.5'::double precision) AND (ext_tax <= '38.9'::double precision) AND (ext_tax >= '0.93'::double precision) AND (net_paid <= '942.17'::double precision) AND (net_paid >= '212.16'::double precision))
                           Rows Removed by Filter: 2588563
                     ->  Hash  (cost=546.00..546.00 rows=2355 width=52) (actual time=3.376..3.377 rows=4397 loops=1)
                           Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 442kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=2355 width=52) (actual time=0.007..2.777 rows=4397 loops=1)
                                 Filter: ((current_price <= '7.73'::double precision) AND (current_price >= '2.69'::double precision) AND (brand_id <= '8012002'::double precision) AND (brand_id >= '3001002'::double precision))
                                 Rows Removed by Filter: 13603
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.096..0.096 rows=300 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.046 rows=300 loops=1)
 Planning Time: 532.182 ms
 Execution Time: 877.999 ms
(24 rows)



 Hash Join  (cost=627.27..174921.74 rows=1441 width=244) (actual time=39.677..689.434 rows=58 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=580.73..174136.82 rows=1909 width=212) (actual time=5.335..689.322 rows=322 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Hash Join  (cost=556.09..173478.97 rows=11833 width=184) (actual time=4.798..685.623 rows=28972 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=11696 width=132) (actual time=0.039..660.998 rows=102444 loops=1)
                     Filter: ((quantity <= '99'::double precision) AND (quantity >= '34'::double precision) AND (list_price <= '143'::double precision) AND (list_price >= '2.44'::double precision) AND (sales_price <= '71.02'::double precision) AND (sales_price >= '5.94'::double precision) AND (ext_sales_price <= '7123.85'::double precision) AND (ext_sales_price >= '2580.24'::double precision) AND (ext_wholesale_cost <= '3494.7'::double precision) AND (ext_wholesale_cost >= '854.57'::double precision) AND (ext_tax <= '493.2'::double precision) AND (ext_tax >= '0'::double precision))
                     Rows Removed by Filter: 2777960
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.705..4.706 rows=17954 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.005..1.882 rows=18000 loops=1)
         ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.093..0.094 rows=291 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 35kB
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.058 rows=293 loops=1)
                     Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                     Rows Removed by Filter: 7
   ->  Hash  (cost=30.40..30.40 rows=1292 width=32) (actual time=0.019..0.019 rows=3 loops=1)
         Buckets: 2048  Batches: 1  Memory Usage: 17kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=1292 width=32) (actual time=0.014..0.016 rows=3 loops=1)
               Filter: ((number_employees <= 294) AND (number_employees >= 294))
               Rows Removed by Filter: 9
 Planning Time: 482.113 ms
 Execution Time: 689.511 ms
(24 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=95764.35..96368.60 rows=4478 width=244) (actual time=3381.204..3877.052 rows=632808 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Merge Join  (cost=95208.26..95366.70 rows=4478 width=192) (actual time=3376.454..3697.418 rows=447330 loops=1)
         Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
         ->  Sort  (cost=92424.95..92436.14 rows=4478 width=164) (actual time=3321.888..3404.413 rows=447331 loops=1)
               Sort Key: store_sales.customer_sk
               Sort Method: external merge  Disk: 78728kB
               ->  Merge Join  (cost=86696.18..92153.38 rows=4478 width=164) (actual time=2802.385..2979.408 rows=458159 loops=1)
                     Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
                     ->  Sort  (cost=287.75..298.42 rows=4268 width=32) (actual time=0.013..0.014 rows=1 loops=1)
                           Sort Key: ((store.store_sk)::double precision)
                           Sort Method: quicksort  Memory: 25kB
                           ->  Seq Scan on store  (cost=0.00..30.40 rows=4268 width=32) (actual time=0.007..0.009 rows=1 loops=1)
                                 Filter: ((company_id <= 255) AND (company_id >= 255))
                                 Rows Removed by Filter: 11
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2710.755..2828.355 rows=915056 loops=1)
                           Sort Key: store_sales.store_sk
                           Sort Method: external sort  Disk: 408576kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.034..320.126 rows=2880404 loops=1)
         ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.555..105.028 rows=514349 loops=1)
               Sort Key: ((customer.customer_sk)::double precision)
               Sort Method: external sort  Disk: 5216kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.021..13.322 rows=100000 loops=1)
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.721..4.721 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.889 rows=18000 loops=1)
 Planning Time: 535.308 ms
 Execution Time: 3979.433 ms
(28 rows)

                                                                            QUERY PLAN                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=232380.57..1276342.52 rows=188536 width=244) (actual time=2244.924..2358.688 rows=128531 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=4744.43..4893.05 rows=59448 width=32) (actual time=0.025..0.028 rows=6 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=59448 width=32) (actual time=0.015..0.018 rows=6 loops=1)
               Filter: ((tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.03'::double precision))
               Rows Removed by Filter: 6
   ->  Materialize  (cost=227636.14..228685.60 rows=209892 width=212) (actual time=2244.892..2317.163 rows=128532 loops=1)
         ->  Sort  (cost=227636.14..228160.87 rows=209892 width=212) (actual time=2244.889..2270.955 rows=128532 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: external merge  Disk: 59456kB
               ->  Hash Join  (cost=174049.97..187557.45 rows=209892 width=212) (actual time=1394.918..2063.570 rows=260921 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Merge Join  (cost=173493.88..184350.74 rows=217294 width=160) (actual time=1390.189..1974.996 rows=260921 loops=1)
                           Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                           ->  Sort  (cost=11331.98..11546.93 rows=85982 width=28) (actual time=17.298..18.706 rows=19622 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: quicksort  Memory: 2301kB
                                 ->  Seq Scan on customer  (cost=0.00..2227.00 rows=85982 width=28) (actual time=0.008..13.956 rows=19622 loops=1)
                                       Filter: ((birth_year <= '1972'::double precision) AND (birth_year >= '1959'::double precision))
                                       Rows Removed by Filter: 80378
                           ->  Materialize  (cost=162161.91..164097.95 rows=387208 width=132) (actual time=1372.880..1769.593 rows=1326917 loops=1)
                                 ->  Sort  (cost=162161.91..163129.93 rows=387208 width=132) (actual time=1372.877..1600.941 rows=1326917 loops=1)
                                       Sort Key: store_sales.customer_sk
                                       Sort Method: external merge  Disk: 190968kB
                                       ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=387208 width=132) (actual time=0.035..499.953 rows=1359244 loops=1)
                                             Filter: ((ext_sales_price <= '1995.32'::double precision) AND (ext_sales_price >= '179.85'::double precision))
                                             Rows Removed by Filter: 1521160
                     ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.702..4.703 rows=18000 loops=1)
                           Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.955 rows=18000 loops=1)
 Planning Time: 477.282 ms
 Execution Time: 2412.356 ms
(34 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=98496.61..99197.54 rows=16778 width=240) (actual time=747.972..771.174 rows=16956 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=11660.83..11883.04 rows=88881 width=28) (actual time=21.834..23.086 rows=28289 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: quicksort  Memory: 2979kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=88881 width=28) (actual time=0.019..16.471 rows=28289 loops=1)
               Filter: ((birth_year <= '1984'::double precision) AND (birth_year >= '1965'::double precision))
               Rows Removed by Filter: 71711
   ->  Sort  (cost=86835.78..86839.25 rows=1391 width=212) (actual time=726.129..735.427 rows=59629 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external sort  Disk: 14256kB
         ->  Hash Join  (cost=580.73..86763.16 rows=1391 width=212) (actual time=4.662..643.327 rows=62494 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Hash Join  (cost=24.64..86190.55 rows=1355 width=160) (actual time=0.144..616.574 rows=62494 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.035..318.089 rows=2880404 loops=1)
                     ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.097..0.098 rows=291 loops=1)
                           Buckets: 2048  Batches: 1  Memory Usage: 35kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.055 rows=293 loops=1)
                                 Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                 Rows Removed by Filter: 7
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.506..4.507 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.005..1.851 rows=18000 loops=1)
 Planning Time: 494.309 ms
 Execution Time: 774.332 ms
(26 rows)

                                                                                                                                                                  QUERY PLAN                                                                                                                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=149151.39..161309.55 rows=21250 width=244) (actual time=655.131..660.286 rows=9535 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=148110.14..148134.87 rows=9893 width=212) (actual time=655.101..655.574 rows=9536 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 2869kB
         ->  Hash Join  (cost=144973.45..147453.64 rows=9893 width=212) (actual time=600.741..650.557 rows=9548 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Merge Join  (cost=144417.36..145877.55 rows=10246 width=160) (actual time=596.168..639.824 rows=35979 loops=1)
                     Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                     ->  Sort  (cost=11812.04..12037.59 rows=90219 width=28) (actual time=36.770..43.036 rows=61691 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external merge  Disk: 3008kB
                           ->  Seq Scan on customer  (cost=0.00..2227.00 rows=90219 width=28) (actual time=0.010..17.762 rows=61691 loops=1)
                                 Filter: ((birth_year <= '1991'::double precision) AND (birth_year >= '1948'::double precision))
                                 Rows Removed by Filter: 38309
                     ->  Materialize  (cost=132605.32..132747.53 rows=28441 width=132) (actual time=559.390..576.447 rows=58570 loops=1)
                           ->  Sort  (cost=132605.32..132676.42 rows=28441 width=132) (actual time=559.387..568.955 rows=58570 loops=1)
                                 Sort Key: store_sales.customer_sk
                                 Sort Method: external merge  Disk: 8400kB
                                 ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=28441 width=132) (actual time=0.131..522.906 rows=58912 loops=1)
                                       Filter: ((ext_wholesale_cost <= '1167.6'::double precision) AND (ext_wholesale_cost >= '1036.89'::double precision) AND (ext_tax <= '53.24'::double precision) AND (ext_tax >= '0'::double precision) AND (net_profit <= '1204.45'::double precision) AND (net_profit >= '-4661.26'::double precision))
                                       Rows Removed by Filter: 2821492
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.543..4.543 rows=17954 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.835 rows=18000 loops=1)
   ->  Sort  (cost=1041.25..1077.78 rows=14613 width=32) (actual time=0.025..0.430 rows=9540 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.013..0.015 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
 Planning Time: 529.959 ms
 Execution Time: 662.758 ms
(32 rows)



 Hash Join  (cost=5079.52..186247.63 rows=90 width=240) (actual time=93.000..620.566 rows=28 loops=1)
   Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
   ->  Hash Join  (cost=4883.44..185665.04 rows=90 width=212) (actual time=92.781..620.324 rows=28 loops=1)
         Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
         ->  Hash Join  (cost=4327.35..185099.67 rows=93 width=160) (actual time=57.297..609.820 rows=518 loops=1)
               Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=304 width=132) (actual time=1.131..559.369 rows=1039 loops=1)
                     Filter: ((list_price <= '135.49'::double precision) AND (list_price >= '94.13'::double precision) AND (ext_list_price <= '4842.45'::double precision) AND (ext_list_price >= '655.12'::double precision) AND (ext_tax <= '10.48'::double precision) AND (ext_tax >= '0.94'::double precision) AND (net_paid <= '4823'::double precision) AND (net_paid >= '837.81'::double precision) AND (net_paid_inc_tax <= '1129.24'::double precision) AND (net_paid_inc_tax >= '828.19'::double precision) AND (net_profit <= '795.2'::double precision) AND (net_profit >= '-758.79'::double precision))
                     Rows Removed by Filter: 2879365
               ->  Hash  (cost=2227.00..2227.00 rows=108588 width=28) (actual time=44.182..44.182 rows=48861 loops=1)
                     Buckets: 65536  Batches: 2  Memory Usage: 2030kB
                     ->  Seq Scan on customer  (cost=0.00..2227.00 rows=108588 width=28) (actual time=0.011..25.644 rows=48861 loops=1)
                           Filter: ((birth_month <= '10'::double precision) AND (birth_month >= '5'::double precision))
                           Rows Removed by Filter: 51139
         ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=10.338..10.339 rows=17954 loops=1)
               Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.008..3.782 rows=18000 loops=1)
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.191..0.192 rows=300 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.019..0.080 rows=300 loops=1)
 Planning Time: 482.629 ms
 Execution Time: 620.668 ms
(22 rows)



 Merge Join  (cost=162069.43..163878.45 rows=1460 width=244) (actual time=743.220..747.695 rows=8505 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=160989.52..160993.06 rows=1415 width=212) (actual time=743.198..743.665 rows=8506 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 2594kB
         ->  Hash Join  (cost=160769.74..160915.48 rows=1415 width=212) (actual time=713.791..740.084 rows=8515 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=160213.65..160341.55 rows=1463 width=160) (actual time=708.778..731.767 rows=8515 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=157430.34..157433.83 rows=1396 width=132) (actual time=654.617..655.694 rows=8516 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: quicksort  Memory: 2596kB
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=1396 width=132) (actual time=0.050..651.183 rows=8534 loops=1)
                                 Filter: ((ext_discount_amt <= '12.17'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '3668.6'::double precision) AND (ext_sales_price >= '331.96'::double precision) AND (ext_wholesale_cost <= '3661.83'::double precision) AND (ext_wholesale_cost >= '3084.32'::double precision) AND (ext_tax <= '0'::double precision) AND (ext_tax >= '0'::double precision) AND (net_paid_inc_tax <= '3509.4'::double precision) AND (net_paid_inc_tax >= '154.53'::double precision))
                                 Rows Removed by Filter: 2871870
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.152..63.637 rows=100505 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.016..12.947 rows=100000 loops=1)
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.986..4.987 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..2.136 rows=18000 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.017..0.384 rows=8510 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.008..0.010 rows=12 loops=1)
 Planning Time: 582.991 ms
 Execution Time: 748.950 ms
(28 rows)

                                                                  QUERY PLAN                                                                   
-----------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=86736.22..89622.61 rows=2379 width=240) (actual time=675.901..764.958 rows=49188 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=85869.74..88739.03 rows=778 width=188) (actual time=665.607..738.938 rows=59463 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.009..8.885 rows=100000 loops=1)
         ->  Hash  (cost=85860.60..85860.60 rows=731 width=160) (actual time=661.569..661.571 rows=59463 loops=1)
               Buckets: 32768 (originally 1024)  Batches: 4 (originally 1)  Memory Usage: 3841kB
               ->  Hash Join  (cost=16.75..85860.60 rows=731 width=160) (actual time=0.228..624.604 rows=62316 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.041..321.407 rows=2880404 loops=1)
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.170..0.171 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.009..0.102 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=456.00..456.00 rows=32838 width=52) (actual time=10.216..10.216 rows=14416 loops=1)
         Buckets: 65536  Batches: 1  Memory Usage: 1751kB
         ->  Seq Scan on item  (cost=0.00..456.00 rows=32838 width=52) (actual time=0.019..6.626 rows=14416 loops=1)
               Filter: ((manufact_id <= '620'::double precision) AND (manufact_id >= '33'::double precision))
               Rows Removed by Filter: 3584
 Planning Time: 501.242 ms
 Execution Time: 766.805 ms
(22 rows)

                                                                                                                                                                                                                   QUERY PLAN                                                                                                                                                                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=793.79..148773.98 rows=1710 width=244) (actual time=5.158..877.276 rows=9442 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=580.73..145700.68 rows=657 width=212) (actual time=5.112..872.940 rows=9467 loops=1)
         Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
         ->  Hash Join  (cost=556.09..143909.71 rows=33007 width=184) (actual time=4.755..822.024 rows=437661 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=32567 width=132) (actual time=0.044..684.572 rows=437661 loops=1)
                     Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '2570.4'::double precision) AND (ext_sales_price >= '528.96'::double precision) AND (ext_wholesale_cost <= '6760.35'::double precision) AND (ext_wholesale_cost >= '24.81'::double precision) AND (net_profit <= '-100.75'::double precision) AND (net_profit >= '-2738.4'::double precision))
                     Rows Removed by Filter: 2442743
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.688..4.689 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..2.026 rows=18000 loops=1)
         ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.107..0.108 rows=291 loops=1)
               Buckets: 2048  Batches: 1  Memory Usage: 35kB
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.007..0.059 rows=293 loops=1)
                     Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                     Rows Removed by Filter: 7
   ->  Hash  (cost=30.40..30.40 rows=14613 width=32) (actual time=0.023..0.024 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.014..0.018 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
 Planning Time: 528.004 ms
 Execution Time: 877.815 ms
(23 rows)

                                                                                                                                                QUERY PLAN                                                                                                                                                 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=135060.05..140785.07 rows=782 width=240) (actual time=498.739..520.081 rows=1263 loops=1)
   Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
   ->  Hash Join  (cost=135043.30..140707.53 rows=288 width=212) (actual time=498.616..519.569 rows=1291 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=273305 width=28) (actual time=0.006..12.946 rows=80785 loops=1)
               Filter: ((birth_month <= '10'::double precision) AND (birth_month >= '1'::double precision))
               Rows Removed by Filter: 19215
         ->  Hash  (cost=135037.28..135037.28 rows=482 width=184) (actual time=498.600..498.601 rows=1585 loops=1)
               Buckets: 2048 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 363kB
               ->  Hash Join  (cost=568.84..135037.28 rows=482 width=184) (actual time=4.066..497.730 rows=1587 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=68164 width=132) (actual time=0.127..490.313 rows=25038 loops=1)
                           Filter: ((quantity <= '83'::double precision) AND (quantity >= '-1'::double precision) AND (list_price <= '43.04'::double precision) AND (list_price >= '3.99'::double precision) AND (sales_price <= '68.3'::double precision) AND (sales_price >= '31.94'::double precision))
                           Rows Removed by Filter: 2855366
                     ->  Hash  (cost=546.00..546.00 rows=1827 width=52) (actual time=3.228..3.228 rows=3187 loops=1)
                           Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 306kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=1827 width=52) (actual time=0.005..2.789 rows=3192 loops=1)
                                 Filter: ((brand_id <= '6002005'::double precision) AND (brand_id >= '1003001'::double precision) AND (manufact_id <= '287'::double precision) AND (manufact_id >= '76'::double precision))
                                 Rows Removed by Filter: 14808
   ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.114..0.115 rows=294 loops=1)
         Buckets: 1024  Batches: 1  Memory Usage: 27kB
         ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.016..0.071 rows=294 loops=1)
               Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
               Rows Removed by Filter: 6
 Planning Time: 488.579 ms
 Execution Time: 520.209 ms
(26 rows)

                                                                                                               QUERY PLAN                                                                                                                
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=120470.58..125478.94 rows=13836 width=244) (actual time=1802.784..1854.600 rows=21162 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..2227.00 rows=46921 width=28) (actual time=0.018..10.194 rows=18922 loops=1)
         Filter: ((birth_day <= '25'::double precision) AND (birth_day >= '20'::double precision))
         Rows Removed by Filter: 81078
   ->  Hash  (cost=119771.65..119771.65 rows=16714 width=216) (actual time=1789.404..1789.408 rows=109441 loops=1)
         Buckets: 16384 (originally 16384)  Batches: 8 (originally 2)  Memory Usage: 3969kB
         ->  Merge Join  (cost=110017.19..119771.65 rows=16714 width=216) (actual time=1618.681..1713.430 rows=110721 loops=1)
               Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
               ->  Sort  (cost=260.76..269.92 rows=3662 width=32) (actual time=0.015..0.016 rows=2 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..44.00 rows=3662 width=32) (actual time=0.007..0.009 rows=2 loops=1)
                           Filter: ((floor_space <= 7557959) AND (floor_space >= 6995995) AND (market_id <= 4) AND (market_id >= 2) AND (devision_id <= 1) AND (devision_id >= 1))
                           Rows Removed by Filter: 10
               ->  Materialize  (cost=109756.43..109914.03 rows=31520 width=184) (actual time=1439.475..1631.553 rows=553331 loops=1)
                     ->  Sort  (cost=109756.43..109835.23 rows=31520 width=184) (actual time=1439.472..1541.194 rows=553331 loops=1)
                           Sort Key: store_sales.store_sk
                           Sort Method: external merge  Disk: 132992kB
                           ->  Hash Join  (cost=571.29..104597.80 rows=31520 width=184) (actual time=4.185..909.822 rows=680816 loops=1)
                                 Hash Cond: (store_sales.item_sk = item.item_sk)
                                 ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=876781 width=132) (actual time=0.035..550.271 rows=1872927 loops=1)
                                       Filter: ((ext_wholesale_cost <= '4140.68'::double precision) AND (ext_wholesale_cost >= '221.4'::double precision))
                                       Rows Removed by Filter: 1007477
                                 ->  Hash  (cost=546.00..546.00 rows=2023 width=52) (actual time=4.141..4.142 rows=6522 loops=1)
                                       Buckets: 8192 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 625kB
                                       ->  Seq Scan on item  (cost=0.00..546.00 rows=2023 width=52) (actual time=0.006..3.242 rows=6522 loops=1)
                                             Filter: ((current_price <= '65.7'::double precision) AND (current_price >= '2.04'::double precision) AND (category_id <= '9'::double precision) AND (category_id >= '5'::double precision))
                                             Rows Removed by Filter: 11478
 Planning Time: 537.209 ms
 Execution Time: 1883.140 ms
(31 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=90757.04..94987.29 rows=8648 width=244) (actual time=5281.386..5483.699 rows=424539 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=333.68..346.04 rows=4943 width=32) (actual time=0.024..0.028 rows=5 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=4943 width=32) (actual time=0.015..0.018 rows=5 loops=1)
               Filter: ((company_id <= 226) AND (company_id >= 175))
               Rows Removed by Filter: 7
   ->  Sort  (cost=90423.36..90448.73 rows=10149 width=212) (actual time=5080.482..5283.130 rows=1269423 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external sort  Disk: 299136kB
         ->  Merge Join  (cost=89533.36..89748.02 rows=10149 width=212) (actual time=2498.104..3423.143 rows=1300157 loops=1)
               Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
               ->  Sort  (cost=86750.05..86775.42 rows=10149 width=184) (actual time=2444.033..2708.016 rows=1300158 loops=1)
                     Sort Key: store_sales.customer_sk
                     Sort Method: external merge  Disk: 262376kB
                     ->  Hash Join  (cost=581.05..86074.72 rows=10149 width=184) (actual time=3.965..1039.262 rows=1361515 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.036..336.119 rows=2880404 loops=1)
                           ->  Hash  (cost=456.00..456.00 rows=10004 width=52) (actual time=3.903..3.904 rows=8542 loops=1)
                                 Buckets: 16384  Batches: 1  Memory Usage: 862kB
                                 ->  Seq Scan on item  (cost=0.00..456.00 rows=10004 width=52) (actual time=0.007..2.821 rows=8542 loops=1)
                                       Filter: ((class_id <= '9'::double precision) AND (class_id >= '3'::double precision))
                                       Rows Removed by Filter: 9458
               ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.061..181.897 rows=1309306 loops=1)
                     Sort Key: ((customer.customer_sk)::double precision)
                     Sort Method: external sort  Disk: 5216kB
                     ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.019..12.965 rows=100000 loops=1)
 Planning Time: 504.705 ms
 Execution Time: 5590.346 ms
(30 rows)

                                                                 QUERY PLAN                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=87825.74..88734.25 rows=745 width=244) (actual time=671.064..710.720 rows=59516 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=86745.83..86747.61 rows=711 width=212) (actual time=671.035..681.918 rows=59517 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 13968kB
         ->  Hash Join  (cost=883.36..86712.18 rows=711 width=212) (actual time=4.198..619.732 rows=62316 loops=1)
               Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.043..314.177 rows=2880404 loops=1)
               ->  Hash  (cost=874.48..874.48 rows=711 width=80) (actual time=4.143..4.146 rows=291 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 43kB
                     ->  Hash Join  (cost=16.75..874.48 rows=711 width=80) (actual time=0.117..4.062 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.757 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.099..0.100 rows=291 loops=1)
                                 Buckets: 1024  Batches: 1  Memory Usage: 27kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.009..0.059 rows=294 loops=1)
                                       Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                       Rows Removed by Filter: 6
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.022..2.635 rows=59521 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
 Planning Time: 534.355 ms
 Execution Time: 715.303 ms
(24 rows)

                                                                                                                                                                                                                 QUERY PLAN                                                                                                                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=2693.01..150102.88 rows=265 width=244) (actual time=63.588..701.385 rows=924 loops=1)
   Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
   ->  Hash Join  (cost=775.92..147177.67 rows=265 width=216) (actual time=7.867..636.433 rows=926 loops=1)
         Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
         ->  Hash Join  (cost=562.86..145102.84 rows=428 width=184) (actual time=7.811..635.921 rows=926 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=18352 width=132) (actual time=0.048..602.462 rows=275273 loops=1)
                     Filter: ((ext_sales_price <= '6063.86'::double precision) AND (ext_sales_price >= '1858.03'::double precision) AND (ext_coupon_amt <= '0'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_paid_inc_tax <= '4211.72'::double precision) AND (net_paid_inc_tax >= '409.73'::double precision) AND (net_profit <= '1044.88'::double precision) AND (net_profit >= '-1335.17'::double precision))
                     Rows Removed by Filter: 2605131
               ->  Hash  (cost=546.00..546.00 rows=1349 width=52) (actual time=5.416..5.417 rows=1444 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 141kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=1349 width=52) (actual time=0.009..5.067 rows=1444 loops=1)
                           Filter: ((current_price <= '13.11'::double precision) AND (current_price >= '6.76'::double precision) AND (class_id <= '11'::double precision) AND (class_id >= '4'::double precision))
                           Rows Removed by Filter: 16556
         ->  Hash  (cost=30.40..30.40 rows=14613 width=32) (actual time=0.030..0.030 rows=12 loops=1)
               Buckets: 16384  Batches: 1  Memory Usage: 129kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.016..0.022 rows=12 loops=1)
                     Filter: ((devision_id <= 1) AND (devision_id >= 1))
   ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=55.694..55.695 rows=100000 loops=1)
         Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.008..17.255 rows=100000 loops=1)
 Planning Time: 516.120 ms
 Execution Time: 701.523 ms
(23 rows)

                                                                                                                                                                      QUERY PLAN                                                                                                                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=144034.33..148154.72 rows=3328 width=244) (actual time=586.524..587.888 rows=2689 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=142954.42..142962.48 rows=3222 width=212) (actual time=586.497..586.630 rows=2690 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: quicksort  Memory: 812kB
         ->  Hash Join  (cost=141641.35..142766.65 rows=3222 width=212) (actual time=575.143..585.486 rows=2694 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Merge Join  (cost=141085.27..142169.89 rows=3334 width=160) (actual time=570.577..579.735 rows=2694 loops=1)
                     Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                     ->  Sort  (cost=11160.55..11371.68 rows=84451 width=28) (actual time=13.821..14.195 rows=6821 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: quicksort  Memory: 725kB
                           ->  Seq Scan on customer  (cost=0.00..2227.00 rows=84451 width=28) (actual time=0.010..12.637 rows=6821 loops=1)
                                 Filter: ((birth_year <= '1965'::double precision) AND (birth_year >= '1961'::double precision))
                                 Rows Removed by Filter: 93179
                     ->  Sort  (cost=129924.71..129972.82 rows=19244 width=132) (actual time=556.745..561.133 rows=40167 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external sort  Disk: 5928kB
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=19244 width=132) (actual time=0.047..521.493 rows=40425 loops=1)
                                 Filter: ((ext_wholesale_cost <= '4937.04'::double precision) AND (ext_wholesale_cost >= '4409.9'::double precision) AND (ext_list_price <= '10827.9'::double precision) AND (ext_list_price >= '5122.36'::double precision) AND (net_paid <= '2509.8'::double precision) AND (net_paid >= '20.52'::double precision))
                                 Rows Removed by Filter: 2839979
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.540..4.541 rows=18000 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.013..1.933 rows=18000 loops=1)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.022..0.136 rows=2694 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
 Planning Time: 526.641 ms
 Execution Time: 588.976 ms
(30 rows)

                                                                                                    QUERY PLAN                                                                                                     
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=111403.87..112180.22 rows=64612 width=244) (actual time=620.936..636.358 rows=7684 loops=1)
   Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
   ->  Sort  (cost=12275.04..12510.76 rows=94289 width=28) (actual time=33.743..38.402 rows=53976 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: external merge  Disk: 2632kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=94289 width=28) (actual time=0.017..16.771 rows=53976 loops=1)
               Filter: ((birth_day <= '24'::double precision) AND (birth_day >= '8'::double precision))
               Rows Removed by Filter: 46024
   ->  Sort  (cost=99128.83..99135.44 rows=2643 width=216) (actual time=587.180..589.391 rows=14299 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external sort  Disk: 3392kB
         ->  Hash Join  (cost=2316.36..98978.63 rows=2643 width=216) (actual time=4.977..565.889 rows=14664 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Hash Join  (cost=550.90..85963.36 rows=397 width=184) (actual time=2.479..556.725 rows=22850 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.035..310.615 rows=2880404 loops=1)
                     ->  Hash  (cost=546.00..546.00 rows=392 width=52) (actual time=2.410..2.411 rows=219 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=392 width=52) (actual time=0.014..2.381 rows=219 loops=1)
                                 Filter: ((brand_id <= '5004001'::double precision) AND (brand_id >= '2002002'::double precision) AND (class_id <= '9'::double precision) AND (class_id >= '6'::double precision))
                                 Rows Removed by Filter: 17781
               ->  Hash  (cost=30.40..30.40 rows=89685 width=32) (actual time=2.457..2.458 rows=7 loops=1)
                     Buckets: 65536  Batches: 2  Memory Usage: 513kB
                     ->  Seq Scan on store  (cost=0.00..30.40 rows=89685 width=32) (actual time=0.007..0.010 rows=7 loops=1)
                           Filter: ((tax_percentage <= '0.06'::double precision) AND (tax_percentage >= '0.03'::double precision))
                           Rows Removed by Filter: 5
 Planning Time: 479.322 ms
 Execution Time: 637.738 ms
(28 rows)



 Hash Join  (cost=4730.21..170142.84 rows=40 width=240) (actual time=54.978..666.753 rows=5 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=4534.12..169925.90 rows=40 width=212) (actual time=28.649..666.540 rows=363 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=494.99..157860.92 rows=314 width=184) (actual time=4.035..636.136 rows=921 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=1553 width=132) (actual time=0.406..631.407 rows=2250 loops=1)
                     Filter: ((ext_discount_amt <= '123.24'::double precision) AND (ext_discount_amt >= '-1'::double precision) AND (ext_list_price <= '4929.6'::double precision) AND (ext_list_price >= '1769.46'::double precision) AND (ext_tax <= '44.48'::double precision) AND (ext_tax >= '0.44'::double precision) AND (net_paid <= '1779.96'::double precision) AND (net_paid >= '307.56'::double precision) AND (net_profit <= '-74.52'::double precision) AND (net_profit >= '-139.67'::double precision))
                     Rows Removed by Filter: 2878154
               ->  Hash  (cost=456.00..456.00 rows=3119 width=52) (actual time=3.618..3.618 rows=7192 loops=1)
                     Buckets: 8192 (originally 4096)  Batches: 1 (originally 1)  Memory Usage: 682kB
                     ->  Seq Scan on item  (cost=0.00..456.00 rows=3119 width=52) (actual time=0.005..2.723 rows=7192 loops=1)
                           Filter: ((category_id <= '8'::double precision) AND (category_id >= '5'::double precision))
                           Rows Removed by Filter: 10808
         ->  Hash  (cost=2227.00..2227.00 rows=93691 width=28) (actual time=24.537..24.537 rows=40593 loops=1)
               Buckets: 65536  Batches: 2  Memory Usage: 1772kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=93691 width=28) (actual time=0.007..14.806 rows=40593 loops=1)
                     Filter: ((birth_month <= '8'::double precision) AND (birth_month >= '4'::double precision))
                     Rows Removed by Filter: 59407
   ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.091..0.092 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 147kB
         ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.014..0.047 rows=300 loops=1)
 Planning Time: 484.568 ms
 Execution Time: 666.824 ms
(24 rows)

                                                                                                                                                                                                   QUERY PLAN                                                                                                                                                                                                    
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=143811.99..151242.73 rows=60 width=244) (actual time=668.780..679.689 rows=719 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=143598.93..150658.93 rows=85 width=212) (actual time=668.734..679.427 rows=720 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=87714 width=28) (actual time=0.009..9.941 rows=4306 loops=1)
               Filter: ((birth_year <= '1978'::double precision) AND (birth_year >= '1976'::double precision))
               Rows Removed by Filter: 95694
         ->  Hash  (cost=143591.09..143591.09 rows=627 width=184) (actual time=668.714..668.715 rows=16512 loops=1)
               Buckets: 32768 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 3866kB
               ->  Hash Join  (cost=558.48..143591.09 rows=627 width=184) (actual time=3.307..661.667 rows=16558 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..142956.36 rows=17716 width=132) (actual time=0.041..640.337 rows=118597 loops=1)
                           Filter: ((sales_price <= '67.44'::double precision) AND (sales_price >= '-1'::double precision) AND (ext_list_price <= '9455.4'::double precision) AND (ext_list_price >= '818.46'::double precision) AND (ext_tax <= '25.21'::double precision) AND (ext_tax >= '8.1'::double precision) AND (net_paid <= '1963.44'::double precision) AND (net_paid >= '537.39'::double precision))
                           Rows Removed by Filter: 2761807
                     ->  Hash  (cost=546.00..546.00 rows=998 width=52) (actual time=3.105..3.105 rows=2511 loops=1)
                           Buckets: 4096 (originally 1024)  Batches: 1 (originally 1)  Memory Usage: 248kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=998 width=52) (actual time=0.007..2.788 rows=2511 loops=1)
                                 Filter: ((class_id <= '4'::double precision) AND (class_id >= '2'::double precision) AND (manufact_id <= '295'::double precision) AND (manufact_id >= '134'::double precision))
                                 Rows Removed by Filter: 15489
   ->  Hash  (cost=30.40..30.40 rows=14613 width=32) (actual time=0.021..0.022 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..30.40 rows=14613 width=32) (actual time=0.014..0.017 rows=12 loops=1)
               Filter: ((devision_id <= 1) AND (devision_id >= 1))
 Planning Time: 523.929 ms
 Execution Time: 679.788 ms
(25 rows)

                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop  (cost=575.94..159795.01 rows=19 width=244) (actual time=550.361..560.888 rows=2 loops=1)
   Join Filter: (store_sales.store_sk = (store.store_sk)::double precision)
   Rows Removed by Join Filter: 22
   ->  Seq Scan on store  (cost=0.00..30.40 rows=4005 width=32) (actual time=0.014..0.017 rows=6 loops=1)
         Filter: ((floor_space <= 9026222) AND (floor_space >= 5285950))
         Rows Removed by Filter: 6
   ->  Materialize  (cost=575.94..158220.57 rows=22 width=212) (actual time=91.724..93.477 rows=4 loops=6)
         ->  Nested Loop  (cost=575.94..158220.46 rows=22 width=212) (actual time=550.340..560.856 rows=4 loops=1)
               Join Filter: ((item.item_sk)::double precision = promotion.item_sk)
               Rows Removed by Join Filter: 73202
               ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.068 rows=294 loops=1)
                     Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                     Rows Removed by Filter: 6
               ->  Materialize  (cost=575.94..157947.97 rows=20 width=184) (actual time=0.019..1.874 rows=249 loops=294)
                     ->  Hash Join  (cost=575.94..157947.87 rows=20 width=184) (actual time=5.530..547.659 rows=249 loops=1)
                           Hash Cond: (store_sales.item_sk = item.item_sk)
                           ->  Seq Scan on store_sales  (cost=0.00..157357.42 rows=2856 width=132) (actual time=0.718..544.135 rows=1657 loops=1)
                                 Filter: ((quantity <= '36'::double precision) AND (quantity >= '14'::double precision) AND (ext_tax <= '336.23'::double precision) AND (ext_tax >= '48.77'::double precision) AND (net_paid <= '758.13'::double precision) AND (net_paid >= '426.5'::double precision) AND (net_paid_inc_tax <= '1953.76'::double precision) AND (net_paid_inc_tax >= '340.57'::double precision) AND (net_profit <= '-1'::double precision) AND (net_profit >= '-175.98'::double precision))
                                 Rows Removed by Filter: 2878747
                           ->  Hash  (cost=546.00..546.00 rows=2395 width=52) (actual time=2.926..2.927 rows=2461 loops=1)
                                 Buckets: 4096  Batches: 1  Memory Usage: 244kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=2395 width=52) (actual time=0.006..2.624 rows=2461 loops=1)
                                       Filter: ((current_price <= '5.94'::double precision) AND (current_price >= '3.78'::double precision) AND (manufact_id <= '494'::double precision) AND (manufact_id >= '40'::double precision))
                                       Rows Removed by Filter: 15539
 Planning Time: 583.071 ms
 Execution Time: 560.957 ms
(26 rows)



 Hash Join  (cost=4149.89..177388.56 rows=10 width=244) (actual time=87.555..630.774 rows=86 loops=1)
   Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
   ->  Hash Join  (cost=3593.80..176831.45 rows=10 width=192) (actual time=20.556..625.651 rows=324 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=52.85..171872.42 rows=56 width=164) (actual time=0.402..600.088 rows=2117 loops=1)
               Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=163 width=132) (actual time=0.383..598.656 rows=4225 loops=1)
                     Filter: ((quantity <= '52'::double precision) AND (quantity >= '39'::double precision) AND (sales_price <= '32.7'::double precision) AND (sales_price >= '5.05'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_wholesale_cost <= '1996.52'::double precision) AND (ext_wholesale_cost >= '1439.1'::double precision) AND (ext_tax <= '279.38'::double precision) AND (ext_tax >= '0'::double precision) AND (net_paid <= '3568.5'::double precision) AND (net_paid >= '1188.89'::double precision))
                     Rows Removed by Filter: 2876179
               ->  Hash  (cost=37.20..37.20 rows=1252 width=32) (actual time=0.009..0.010 rows=5 loops=1)
                     Buckets: 2048  Batches: 1  Memory Usage: 17kB
                     ->  Seq Scan on store  (cost=0.00..37.20 rows=1252 width=32) (actual time=0.004..0.006 rows=5 loops=1)
                           Filter: ((number_employees <= 278) AND (number_employees >= 236) AND (devision_id <= 1) AND (devision_id >= 1))
                           Rows Removed by Filter: 7
         ->  Hash  (cost=2227.00..2227.00 rows=67916 width=28) (actual time=20.075..20.076 rows=16218 loops=1)
               Buckets: 65536  Batches: 2  Memory Usage: 1014kB
               ->  Seq Scan on customer  (cost=0.00..2227.00 rows=67916 width=28) (actual time=0.007..13.808 rows=16218 loops=1)
                     Filter: ((birth_month <= '5'::double precision) AND (birth_month >= '4'::double precision))
                     Rows Removed by Filter: 83782
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.957..4.958 rows=17954 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.987 rows=18000 loops=1)
 Planning Time: 501.022 ms
 Execution Time: 630.853 ms
(24 rows)



 Hash Join  (cost=2682.90..179593.95 rows=442 width=244) (actual time=42.044..550.344 rows=153 loops=1)
   Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
   ->  Hash Join  (cost=2469.21..177438.14 rows=429 width=212) (actual time=42.002..550.226 rows=153 loops=1)
         Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
         ->  Hash Join  (cost=552.12..173889.21 rows=429 width=184) (actual time=5.311..505.326 rows=153 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=18470 width=132) (actual time=0.048..500.745 rows=14781 loops=1)
                     Filter: ((sales_price <= '8.18'::double precision) AND (sales_price >= '4.78'::double precision) AND (ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '2358.72'::double precision) AND (ext_sales_price >= '-1'::double precision) AND (ext_list_price <= '9021.26'::double precision) AND (ext_list_price >= '1757.39'::double precision) AND (ext_tax <= '15.69'::double precision) AND (ext_tax >= '6.19'::double precision) AND (ext_coupon_amt <= '146.71'::double precision) AND (ext_coupon_amt >= '0'::double precision))
                     Rows Removed by Filter: 2865623
               ->  Hash  (cost=546.00..546.00 rows=490 width=52) (actual time=2.466..2.467 rows=803 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 77kB
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=490 width=52) (actual time=0.006..2.366 rows=804 loops=1)
                           Filter: ((brand_id <= '5003002'::double precision) AND (brand_id >= '4001001'::double precision) AND (class_id <= '3'::double precision) AND (class_id >= '3'::double precision))
                           Rows Removed by Filter: 17196
         ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (actual time=36.666..36.667 rows=100000 loops=1)
               Buckets: 65536 (originally 16384)  Batches: 2 (originally 1)  Memory Usage: 3592kB
               ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.007..11.108 rows=100000 loops=1)
   ->  Hash  (cost=23.60..23.60 rows=15207 width=32) (actual time=0.019..0.019 rows=12 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 129kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.011..0.013 rows=12 loops=1)
 Planning Time: 526.810 ms
 Execution Time: 550.424 ms
(22 rows)

                                                                                                                                                                   QUERY PLAN                                                                                                                                                                    
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=158971.64..233943.49 rows=60788 width=244) (actual time=732.344..738.126 rows=11454 loops=1)
   Merge Cond: (((store.store_sk)::double precision) = store_sales.store_sk)
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.026..0.028 rows=11 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.013..0.017 rows=12 loops=1)
   ->  Materialize  (cost=157891.73..158185.60 rows=58775 width=212) (actual time=732.312..734.384 rows=11455 loops=1)
         ->  Sort  (cost=157891.73..158038.67 rows=58775 width=212) (actual time=732.309..732.880 rows=11455 loops=1)
               Sort Key: store_sales.store_sk
               Sort Method: quicksort  Memory: 3379kB
               ->  Hash Join  (cost=140456.22..147208.90 rows=58775 width=212) (actual time=686.264..728.206 rows=11470 loops=1)
                     Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                     ->  Merge Join  (cost=139900.13..140589.54 rows=60903 width=160) (actual time=681.580..717.251 rows=33403 loops=1)
                           Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                           ->  Sort  (cost=137116.82..137261.92 rows=58042 width=132) (actual time=626.713..631.773 rows=33404 loops=1)
                                 Sort Key: store_sales.customer_sk
                                 Sort Method: external merge  Disk: 4792kB
                                 ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=58042 width=132) (actual time=0.081..603.133 rows=33593 loops=1)
                                       Filter: ((ext_discount_amt <= '0'::double precision) AND (ext_discount_amt >= '0'::double precision) AND (ext_sales_price <= '1258.47'::double precision) AND (ext_sales_price >= '601.46'::double precision) AND (net_profit <= '-1'::double precision) AND (net_profit >= '-142.28'::double precision))
                                       Rows Removed by Filter: 2846811
                           ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=54.857..65.202 rows=106485 loops=1)
                                 Sort Key: ((customer.customer_sk)::double precision)
                                 Sort Method: external sort  Disk: 5216kB
                                 ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.013..12.997 rows=100000 loops=1)
                     ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.653..4.654 rows=17954 loops=1)
                           Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.884 rows=18000 loops=1)
 Planning Time: 540.690 ms
 Execution Time: 740.420 ms
(29 rows)

                                                                                                                 QUERY PLAN                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=124181.19..126813.74 rows=2156 width=244) (actual time=664.060..717.869 rows=82216 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=123101.27..123106.42 rows=2059 width=212) (actual time=664.026..679.111 rows=82217 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 18904kB
         ->  Merge Join  (cost=120370.83..122987.96 rows=2059 width=212) (actual time=565.424..613.241 rows=82697 loops=1)
               Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
               ->  Sort  (cost=1272.61..1275.90 rows=1316 width=80) (actual time=4.211..4.256 rows=291 loops=1)
                     Sort Key: ((promotion.promo_sk)::double precision)
                     Sort Method: quicksort  Memory: 65kB
                     ->  Hash Join  (cost=24.64..1204.43 rows=1316 width=80) (actual time=0.133..4.081 rows=291 loops=1)
                           Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
                           ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.814 rows=18000 loops=1)
                           ->  Hash  (cost=7.50..7.50 rows=1371 width=28) (actual time=0.103..0.104 rows=291 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 35kB
                                 ->  Seq Scan on promotion  (cost=0.00..7.50 rows=1371 width=28) (actual time=0.009..0.064 rows=293 loops=1)
                                       Filter: ((response_target <= '1'::double precision) AND (response_target >= '1'::double precision))
                                       Rows Removed by Filter: 7
               ->  Materialize  (cost=119098.22..119270.21 rows=34399 width=132) (actual time=561.206..584.927 rows=85207 loops=1)
                     ->  Sort  (cost=119098.22..119184.22 rows=34399 width=132) (actual time=561.202..573.954 rows=85207 loops=1)
                           Sort Key: store_sales.promo_sk
                           Sort Method: external merge  Disk: 12240kB
                           ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=34399 width=132) (actual time=0.040..517.858 rows=86276 loops=1)
                                 Filter: ((sales_price <= '10.27'::double precision) AND (sales_price >= '7.57'::double precision) AND (net_paid_inc_tax <= '798.9'::double precision) AND (net_paid_inc_tax >= '191.89'::double precision))
                                 Rows Removed by Filter: 2794128
   ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.028..3.617 rows=82221 loops=1)
         Sort Key: ((store.store_sk)::double precision)
         Sort Method: quicksort  Memory: 25kB
         ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.016..0.018 rows=12 loops=1)
 Planning Time: 469.440 ms
 Execution Time: 726.521 ms
(31 rows)



 Hash Join  (cost=2608.81..174508.93 rows=23 width=244) (actual time=724.170..724.173 rows=0 loops=1)
   Hash Cond: (store_sales.customer_sk = (customer.customer_sk)::double precision)
   ->  Hash Join  (cost=691.73..172503.37 rows=23 width=216) (actual time=724.170..724.172 rows=0 loops=1)
         Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
         ->  Hash Join  (cost=585.45..172344.64 rows=29 width=184) (actual time=724.127..724.129 rows=0 loops=1)
               Hash Cond: (store_sales.item_sk = item.item_sk)
               ->  Seq Scan on store_sales  (cost=0.00..171758.48 rows=129 width=132) (actual time=724.126..724.127 rows=0 loops=1)
                     Filter: ((list_price <= '184.43'::double precision) AND (list_price >= '65.26'::double precision) AND (ext_wholesale_cost <= '3814.8'::double precision) AND (ext_wholesale_cost >= '1858.14'::double precision) AND (ext_list_price <= '495.2'::double precision) AND (ext_list_price >= '-1'::double precision) AND (ext_tax <= '51.17'::double precision) AND (ext_tax >= '0'::double precision) AND (ext_coupon_amt <= '201.13'::double precision) AND (ext_coupon_amt >= '0'::double precision) AND (net_profit <= '1399.95'::double precision) AND (net_profit >= '-746.87'::double precision))
                     Rows Removed by Filter: 2880404
               ->  Hash  (cost=546.00..546.00 rows=3156 width=52) (never executed)
                     ->  Seq Scan on item  (cost=0.00..546.00 rows=3156 width=52) (never executed)
                           Filter: ((class_id <= '5'::double precision) AND (class_id >= '2'::double precision) AND (manufact_id <= '532'::double precision) AND (manufact_id >= '95'::double precision))
         ->  Hash  (cost=30.40..30.40 rows=6070 width=32) (actual time=0.029..0.030 rows=11 loops=1)
               Buckets: 8192  Batches: 1  Memory Usage: 65kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=6070 width=32) (actual time=0.017..0.022 rows=11 loops=1)
                     Filter: ((market_id <= 9) AND (market_id >= 2))
                     Rows Removed by Filter: 1
   ->  Hash  (cost=1727.00..1727.00 rows=15207 width=28) (never executed)
         ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (never executed)
 Planning Time: 488.749 ms
 Execution Time: 724.259 ms
(21 rows)

                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=8668.57..134574.30 rows=19394 width=244) (actual time=4.415..528.105 rows=3717 loops=1)
   Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
   ->  Hash Join  (cost=48.77..115934.09 rows=20169 width=164) (actual time=0.072..504.850 rows=172411 loops=1)
         Hash Cond: (store_sales.store_sk = (store.store_sk)::double precision)
         ->  Seq Scan on store_sales  (cost=0.00..99753.18 rows=139375 width=132) (actual time=0.046..432.470 rows=353603 loops=1)
               Filter: ((sales_price <= '14.48'::double precision) AND (sales_price >= '7.32'::double precision))
               Rows Removed by Filter: 2526801
         ->  Hash  (cost=44.00..44.00 rows=382 width=32) (actual time=0.012..0.014 rows=4 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 9kB
               ->  Seq Scan on store  (cost=0.00..44.00 rows=382 width=32) (actual time=0.006..0.009 rows=4 loops=1)
                     Filter: ((devision_id <= 1) AND (devision_id >= 1) AND (company_id <= 811) AND (company_id >= 226) AND (tax_percentage <= '0.03'::double precision) AND (tax_percentage >= '0.01'::double precision))
                     Rows Removed by Filter: 8
   ->  Hash  (cost=8437.55..8437.55 rows=14580 width=80) (actual time=4.272..4.273 rows=293 loops=1)
         Buckets: 16384  Batches: 1  Memory Usage: 163kB
         ->  Hash Join  (cost=196.09..8437.55 rows=14580 width=80) (actual time=0.113..4.185 rows=293 loops=1)
               Hash Cond: ((item.item_sk)::double precision = promotion.item_sk)
               ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.006..1.863 rows=18000 loops=1)
               ->  Hash  (cost=6.00..6.00 rows=15207 width=28) (actual time=0.080..0.081 rows=293 loops=1)
                     Buckets: 16384  Batches: 1  Memory Usage: 147kB
                     ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.005..0.036 rows=300 loops=1)
 Planning Time: 515.516 ms
 Execution Time: 528.403 ms
(22 rows)

                                                                                                              QUERY PLAN                                                                                                               
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=116250.19..151532.65 rows=8324 width=240) (actual time=530.893..552.368 rows=1653 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Hash Join  (cost=115694.10..150871.55 rows=8609 width=188) (actual time=526.126..547.057 rows=1653 loops=1)
         Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=273305 width=28) (actual time=0.009..12.879 rows=80785 loops=1)
               Filter: ((birth_month <= '10'::double precision) AND (birth_month >= '1'::double precision))
               Rows Removed by Filter: 19215
         ->  Hash  (cost=115649.75..115649.75 rows=3548 width=160) (actual time=526.106..526.108 rows=2054 loops=1)
               Buckets: 4096  Batches: 1  Memory Usage: 433kB
               ->  Hash Join  (cost=16.75..115649.75 rows=3548 width=160) (actual time=0.237..525.052 rows=2079 loops=1)
                     Hash Cond: ((store_sales.item_sk)::double precision = promotion.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..114154.24 rows=45731 width=132) (actual time=0.056..513.556 rows=98922 loops=1)
                           Filter: ((ext_wholesale_cost <= '5009.81'::double precision) AND (ext_wholesale_cost >= '3897.2'::double precision) AND (ext_tax <= '160.28'::double precision) AND (ext_tax >= '28.82'::double precision))
                           Rows Removed by Filter: 2781482
                     ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.097..0.098 rows=291 loops=1)
                           Buckets: 1024  Batches: 1  Memory Usage: 27kB
                           ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.007..0.060 rows=294 loops=1)
                                 Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                                 Rows Removed by Filter: 6
   ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.744..4.744 rows=18000 loops=1)
         Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1801kB
         ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.014..1.928 rows=18000 loops=1)
 Planning Time: 523.649 ms
 Execution Time: 552.500 ms
(24 rows)

                                                                                                                                                                 QUERY PLAN                                                                                                                                                                  
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=152285.37..193228.75 rows=11841 width=244) (actual time=1016.635..1027.210 rows=16753 loops=1)
   Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
   ->  Sort  (cost=143505.57..143520.26 rows=5878 width=212) (actual time=1016.597..1019.162 rows=20069 loops=1)
         Sort Key: store_sales.store_sk
         Sort Method: external merge  Disk: 4608kB
         ->  Hash Join  (cost=141487.08..143137.54 rows=5878 width=212) (actual time=875.325..999.840 rows=20102 loops=1)
               Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
               ->  Merge Join  (cost=140930.99..141975.40 rows=6088 width=160) (actual time=870.759..975.704 rows=155624 loops=1)
                     Merge Cond: (((customer.customer_sk)::double precision) = store_sales.customer_sk)
                     ->  Sort  (cost=11128.53..11338.96 rows=84170 width=28) (actual time=31.962..38.029 rows=48934 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external merge  Disk: 2392kB
                           ->  Seq Scan on customer  (cost=0.00..2227.00 rows=84170 width=28) (actual time=0.010..16.363 rows=48934 loops=1)
                                 Filter: ((birth_year <= '1966'::double precision) AND (birth_year >= '1932'::double precision))
                                 Rows Removed by Filter: 51066
                     ->  Sort  (cost=129802.45..129846.65 rows=17678 width=132) (actual time=838.786..878.846 rows=315746 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external sort  Disk: 46520kB
                           ->  Seq Scan on store_sales  (cost=0.00..128555.30 rows=17678 width=132) (actual time=0.040..575.779 rows=317643 loops=1)
                                 Filter: ((ext_list_price <= '9112.96'::double precision) AND (ext_list_price >= '4089.58'::double precision) AND (ext_tax <= '88.75'::double precision) AND (ext_tax >= '-1'::double precision) AND (net_paid_inc_tax <= '5654.96'::double precision) AND (net_paid_inc_tax >= '275.32'::double precision))
                                 Rows Removed by Filter: 2562761
               ->  Hash  (cost=366.00..366.00 rows=15207 width=52) (actual time=4.536..4.537 rows=17954 loops=1)
                     Buckets: 32768 (originally 16384)  Batches: 1 (originally 1)  Memory Usage: 1799kB
                     ->  Seq Scan on item  (cost=0.00..366.00 rows=15207 width=52) (actual time=0.027..1.844 rows=18000 loops=1)
   ->  Materialize  (cost=8779.80..9193.87 rows=82814 width=32) (actual time=0.032..0.797 rows=16758 loops=1)
         ->  Sort  (cost=8779.80..8986.84 rows=82814 width=32) (actual time=0.029..0.030 rows=10 loops=1)
               Sort Key: ((store.store_sk)::double precision)
               Sort Method: quicksort  Memory: 25kB
               ->  Seq Scan on store  (cost=0.00..30.40 rows=82814 width=32) (actual time=0.017..0.020 rows=11 loops=1)
                     Filter: ((number_employees <= 294) AND (number_employees >= 218))
                     Rows Removed by Filter: 1
 Planning Time: 504.497 ms
 Execution Time: 1037.725 ms
(33 rows)

                                                                     QUERY PLAN                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=92324.85..106213.64 rows=18900 width=240) (actual time=7708.252..9611.255 rows=2409528 loops=1)
   Hash Cond: (store_sales.item_sk = item.item_sk)
   ->  Merge Join  (cost=91635.93..105299.11 rows=15998 width=188) (actual time=7702.590..8863.917 rows=2685798 loops=1)
         Merge Cond: (((promotion.promo_sk)::double precision) = store_sales.promo_sk)
         ->  Sort  (cost=1062.31..1100.33 rows=15207 width=28) (actual time=0.117..0.181 rows=300 loops=1)
               Sort Key: ((promotion.promo_sk)::double precision)
               Sort Method: quicksort  Memory: 48kB
               ->  Seq Scan on promotion  (cost=0.00..6.00 rows=15207 width=28) (actual time=0.009..0.059 rows=300 loops=1)
         ->  Sort  (cost=90573.61..90613.61 rows=15998 width=160) (actual time=7702.456..8129.387 rows=2685799 loops=1)
               Sort Key: store_sales.promo_sk
               Sort Method: external sort  Disk: 482200kB
               ->  Merge Join  (cost=89191.74..89456.54 rows=15998 width=160) (actual time=2389.600..4103.665 rows=2750652 loops=1)
                     Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
                     ->  Sort  (cost=86408.43..86446.45 rows=15207 width=132) (actual time=2335.759..2784.523 rows=2750653 loops=1)
                           Sort Key: store_sales.customer_sk
                           Sort Method: external merge  Disk: 397328kB
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.035..325.786 rows=2880404 loops=1)
                     ->  Sort  (cost=2783.31..2821.33 rows=15207 width=28) (actual time=53.831..316.864 rows=2759726 loops=1)
                           Sort Key: ((customer.customer_sk)::double precision)
                           Sort Method: external sort  Disk: 5216kB
                           ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.020..13.035 rows=100000 loops=1)
   ->  Hash  (cost=456.00..456.00 rows=18634 width=52) (actual time=5.610..5.611 rows=16144 loops=1)
         Buckets: 32768  Batches: 1  Memory Usage: 1643kB
         ->  Seq Scan on item  (cost=0.00..456.00 rows=18634 width=52) (actual time=0.017..3.518 rows=16144 loops=1)
               Filter: ((category_id <= '9'::double precision) AND (category_id >= '1'::double precision))
               Rows Removed by Filter: 1856
 Planning Time: 618.912 ms
 Execution Time: 9834.134 ms
(28 rows)

                                                                                                           QUERY PLAN                                                                                                            
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Merge Join  (cost=94728.98..94934.84 rows=7729 width=244) (actual time=1190.317..1247.882 rows=5851 loops=1)
   Merge Cond: (store_sales.customer_sk = ((customer.customer_sk)::double precision))
   ->  Sort  (cost=90695.99..90700.42 rows=1773 width=216) (actual time=1180.655..1221.426 rows=187167 loops=1)
         Sort Key: store_sales.customer_sk
         Sort Method: external merge  Disk: 43240kB
         ->  Merge Join  (cost=88408.49..90600.30 rows=1773 width=216) (actual time=911.317..1032.542 rows=189670 loops=1)
               Merge Cond: (store_sales.store_sk = ((store.store_sk)::double precision))
               ->  Sort  (cost=87328.57..87332.86 rows=1714 width=184) (actual time=911.288..948.403 rows=189671 loops=1)
                     Sort Key: store_sales.store_sk
                     Sort Method: external merge  Disk: 37968kB
                     ->  Hash Join  (cost=567.15..87236.49 rows=1714 width=184) (actual time=2.760..781.236 rows=194181 loops=1)
                           Hash Cond: (store_sales.wholesale_cost = item.wholesale_cost)
                           ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.043..354.410 rows=2880404 loops=1)
                           ->  Hash  (cost=546.00..546.00 rows=1692 width=52) (actual time=2.702..2.703 rows=904 loops=1)
                                 Buckets: 2048  Batches: 1  Memory Usage: 94kB
                                 ->  Seq Scan on item  (cost=0.00..546.00 rows=1692 width=52) (actual time=0.010..2.564 rows=906 loops=1)
                                       Filter: ((brand_id <= '3004002'::double precision) AND (brand_id >= '3001001'::double precision) AND (manufact_id <= '281'::double precision) AND (manufact_id >= '6'::double precision))
                                       Rows Removed by Filter: 17094
               ->  Sort  (cost=1079.91..1117.93 rows=15207 width=32) (actual time=0.021..8.288 rows=189675 loops=1)
                     Sort Key: ((store.store_sk)::double precision)
                     Sort Method: quicksort  Memory: 25kB
                     ->  Seq Scan on store  (cost=0.00..23.60 rows=15207 width=32) (actual time=0.010..0.012 rows=12 loops=1)
   ->  Sort  (cost=4032.99..4094.86 rows=24748 width=28) (actual time=9.604..9.935 rows=7172 loops=1)
         Sort Key: ((customer.customer_sk)::double precision)
         Sort Method: quicksort  Memory: 346kB
         ->  Seq Scan on customer  (cost=0.00..2227.00 rows=24748 width=28) (actual time=0.022..9.176 rows=3190 loops=1)
               Filter: ((birth_day <= '20'::double precision) AND (birth_day >= '20'::double precision))
               Rows Removed by Filter: 96810
 Planning Time: 486.309 ms
 Execution Time: 1262.537 ms
(30 rows)

                                                                                                      QUERY PLAN                                                                                                      
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Hash Join  (cost=86273.41..88609.61 rows=383 width=240) (actual time=1375.911..1745.681 rows=411909 loops=1)
   Hash Cond: ((customer.customer_sk)::double precision = store_sales.customer_sk)
   ->  Seq Scan on customer  (cost=0.00..1727.00 rows=15207 width=28) (actual time=0.014..8.938 rows=100000 loops=1)
   ->  Hash  (cost=86268.62..86268.62 rows=383 width=212) (actual time=1375.882..1375.885 rows=411909 loops=1)
         Buckets: 16384 (originally 1024)  Batches: 32 (originally 1)  Memory Usage: 3969kB
         ->  Hash Join  (cost=578.54..86268.62 rows=383 width=212) (actual time=3.482..1023.728 rows=421820 loops=1)
               Hash Cond: (store_sales.promo_sk = (promotion.promo_sk)::double precision)
               ->  Hash Join  (cost=561.79..85981.60 rows=1281 width=184) (actual time=3.347..872.386 rows=450708 loops=1)
                     Hash Cond: (store_sales.item_sk = item.item_sk)
                     ->  Seq Scan on store_sales  (cost=0.00..85352.12 rows=15207 width=132) (actual time=0.037..368.379 rows=2880404 loops=1)
                     ->  Hash  (cost=546.00..546.00 rows=1263 width=52) (actual time=3.294..3.295 rows=2814 loops=1)
                           Buckets: 4096 (originally 2048)  Batches: 1 (originally 1)  Memory Usage: 274kB
                           ->  Seq Scan on item  (cost=0.00..546.00 rows=1263 width=52) (actual time=0.007..2.882 rows=2814 loops=1)
                                 Filter: ((category_id <= '4'::double precision) AND (category_id >= '2'::double precision) AND (manufact_id <= '319'::double precision) AND (manufact_id >= '30'::double precision))
                                 Rows Removed by Filter: 15186
               ->  Hash  (cost=7.50..7.50 rows=740 width=28) (actual time=0.125..0.126 rows=294 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 27kB
                     ->  Seq Scan on promotion  (cost=0.00..7.50 rows=740 width=28) (actual time=0.019..0.078 rows=294 loops=1)
                           Filter: ((cost <= '1000'::double precision) AND (cost >= '1000'::double precision))
                           Rows Removed by Filter: 6
 Planning Time: 492.191 ms
 Execution Time: 1760.648 ms
(22 rows)

